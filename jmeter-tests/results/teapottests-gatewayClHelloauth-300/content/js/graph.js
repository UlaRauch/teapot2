/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 5318.0, "series": [{"data": [[0.0, 22.0], [0.1, 54.0], [0.2, 57.0], [0.3, 78.0], [0.4, 81.0], [0.5, 86.0], [0.6, 89.0], [0.7, 91.0], [0.8, 101.0], [0.9, 104.0], [1.0, 106.0], [1.1, 106.0], [1.2, 128.0], [1.3, 133.0], [1.4, 141.0], [1.5, 157.0], [1.6, 161.0], [1.7, 173.0], [1.8, 199.0], [1.9, 203.0], [2.0, 214.0], [2.1, 228.0], [2.2, 229.0], [2.3, 234.0], [2.4, 250.0], [2.5, 281.0], [2.6, 284.0], [2.7, 293.0], [2.8, 303.0], [2.9, 308.0], [3.0, 314.0], [3.1, 319.0], [3.2, 329.0], [3.3, 337.0], [3.4, 341.0], [3.5, 346.0], [3.6, 348.0], [3.7, 350.0], [3.8, 353.0], [3.9, 358.0], [4.0, 366.0], [4.1, 368.0], [4.2, 371.0], [4.3, 372.0], [4.4, 376.0], [4.5, 377.0], [4.6, 381.0], [4.7, 383.0], [4.8, 386.0], [4.9, 389.0], [5.0, 393.0], [5.1, 396.0], [5.2, 401.0], [5.3, 402.0], [5.4, 405.0], [5.5, 409.0], [5.6, 413.0], [5.7, 422.0], [5.8, 422.0], [5.9, 427.0], [6.0, 431.0], [6.1, 434.0], [6.2, 440.0], [6.3, 447.0], [6.4, 447.0], [6.5, 452.0], [6.6, 456.0], [6.7, 457.0], [6.8, 464.0], [6.9, 464.0], [7.0, 468.0], [7.1, 469.0], [7.2, 472.0], [7.3, 472.0], [7.4, 475.0], [7.5, 476.0], [7.6, 479.0], [7.7, 480.0], [7.8, 482.0], [7.9, 482.0], [8.0, 484.0], [8.1, 484.0], [8.2, 486.0], [8.3, 488.0], [8.4, 489.0], [8.5, 489.0], [8.6, 493.0], [8.7, 493.0], [8.8, 496.0], [8.9, 497.0], [9.0, 497.0], [9.1, 499.0], [9.2, 501.0], [9.3, 503.0], [9.4, 504.0], [9.5, 504.0], [9.6, 507.0], [9.7, 508.0], [9.8, 509.0], [9.9, 511.0], [10.0, 514.0], [10.1, 514.0], [10.2, 516.0], [10.3, 519.0], [10.4, 520.0], [10.5, 522.0], [10.6, 524.0], [10.7, 527.0], [10.8, 529.0], [10.9, 530.0], [11.0, 533.0], [11.1, 533.0], [11.2, 535.0], [11.3, 535.0], [11.4, 537.0], [11.5, 539.0], [11.6, 539.0], [11.7, 541.0], [11.8, 541.0], [11.9, 543.0], [12.0, 547.0], [12.1, 549.0], [12.2, 550.0], [12.3, 553.0], [12.4, 553.0], [12.5, 557.0], [12.6, 560.0], [12.7, 562.0], [12.8, 563.0], [12.9, 565.0], [13.0, 565.0], [13.1, 568.0], [13.2, 568.0], [13.3, 572.0], [13.4, 573.0], [13.5, 575.0], [13.6, 576.0], [13.7, 577.0], [13.8, 577.0], [13.9, 577.0], [14.0, 579.0], [14.1, 582.0], [14.2, 582.0], [14.3, 583.0], [14.4, 584.0], [14.5, 585.0], [14.6, 586.0], [14.7, 587.0], [14.8, 588.0], [14.9, 592.0], [15.0, 593.0], [15.1, 594.0], [15.2, 595.0], [15.3, 595.0], [15.4, 599.0], [15.5, 602.0], [15.6, 603.0], [15.7, 603.0], [15.8, 604.0], [15.9, 607.0], [16.0, 608.0], [16.1, 610.0], [16.2, 612.0], [16.3, 616.0], [16.4, 616.0], [16.5, 617.0], [16.6, 618.0], [16.7, 620.0], [16.8, 621.0], [16.9, 621.0], [17.0, 624.0], [17.1, 626.0], [17.2, 630.0], [17.3, 631.0], [17.4, 632.0], [17.5, 632.0], [17.6, 638.0], [17.7, 638.0], [17.8, 639.0], [17.9, 640.0], [18.0, 641.0], [18.1, 644.0], [18.2, 645.0], [18.3, 647.0], [18.4, 650.0], [18.5, 650.0], [18.6, 653.0], [18.7, 654.0], [18.8, 657.0], [18.9, 659.0], [19.0, 660.0], [19.1, 661.0], [19.2, 666.0], [19.3, 668.0], [19.4, 669.0], [19.5, 671.0], [19.6, 671.0], [19.7, 675.0], [19.8, 678.0], [19.9, 679.0], [20.0, 682.0], [20.1, 683.0], [20.2, 685.0], [20.3, 686.0], [20.4, 688.0], [20.5, 689.0], [20.6, 691.0], [20.7, 692.0], [20.8, 693.0], [20.9, 693.0], [21.0, 700.0], [21.1, 702.0], [21.2, 706.0], [21.3, 707.0], [21.4, 708.0], [21.5, 711.0], [21.6, 712.0], [21.7, 715.0], [21.8, 717.0], [21.9, 719.0], [22.0, 720.0], [22.1, 725.0], [22.2, 725.0], [22.3, 726.0], [22.4, 727.0], [22.5, 727.0], [22.6, 729.0], [22.7, 729.0], [22.8, 734.0], [22.9, 735.0], [23.0, 739.0], [23.1, 740.0], [23.2, 742.0], [23.3, 745.0], [23.4, 746.0], [23.5, 749.0], [23.6, 754.0], [23.7, 755.0], [23.8, 757.0], [23.9, 759.0], [24.0, 761.0], [24.1, 762.0], [24.2, 764.0], [24.3, 766.0], [24.4, 767.0], [24.5, 768.0], [24.6, 770.0], [24.7, 772.0], [24.8, 774.0], [24.9, 774.0], [25.0, 780.0], [25.1, 781.0], [25.2, 782.0], [25.3, 782.0], [25.4, 784.0], [25.5, 788.0], [25.6, 789.0], [25.7, 791.0], [25.8, 791.0], [25.9, 794.0], [26.0, 798.0], [26.1, 800.0], [26.2, 804.0], [26.3, 808.0], [26.4, 808.0], [26.5, 810.0], [26.6, 812.0], [26.7, 813.0], [26.8, 814.0], [26.9, 819.0], [27.0, 824.0], [27.1, 826.0], [27.2, 827.0], [27.3, 829.0], [27.4, 831.0], [27.5, 832.0], [27.6, 833.0], [27.7, 838.0], [27.8, 838.0], [27.9, 839.0], [28.0, 842.0], [28.1, 844.0], [28.2, 845.0], [28.3, 848.0], [28.4, 850.0], [28.5, 850.0], [28.6, 854.0], [28.7, 855.0], [28.8, 859.0], [28.9, 860.0], [29.0, 861.0], [29.1, 864.0], [29.2, 865.0], [29.3, 869.0], [29.4, 872.0], [29.5, 874.0], [29.6, 877.0], [29.7, 889.0], [29.8, 890.0], [29.9, 892.0], [30.0, 893.0], [30.1, 898.0], [30.2, 898.0], [30.3, 900.0], [30.4, 904.0], [30.5, 907.0], [30.6, 909.0], [30.7, 912.0], [30.8, 913.0], [30.9, 914.0], [31.0, 917.0], [31.1, 917.0], [31.2, 920.0], [31.3, 923.0], [31.4, 926.0], [31.5, 928.0], [31.6, 929.0], [31.7, 933.0], [31.8, 935.0], [31.9, 940.0], [32.0, 944.0], [32.1, 944.0], [32.2, 946.0], [32.3, 948.0], [32.4, 956.0], [32.5, 963.0], [32.6, 964.0], [32.7, 969.0], [32.8, 972.0], [32.9, 973.0], [33.0, 976.0], [33.1, 979.0], [33.2, 981.0], [33.3, 984.0], [33.4, 986.0], [33.5, 988.0], [33.6, 988.0], [33.7, 989.0], [33.8, 993.0], [33.9, 994.0], [34.0, 997.0], [34.1, 1001.0], [34.2, 1003.0], [34.3, 1003.0], [34.4, 1007.0], [34.5, 1011.0], [34.6, 1011.0], [34.7, 1014.0], [34.8, 1014.0], [34.9, 1018.0], [35.0, 1019.0], [35.1, 1021.0], [35.2, 1021.0], [35.3, 1022.0], [35.4, 1025.0], [35.5, 1027.0], [35.6, 1028.0], [35.7, 1029.0], [35.8, 1033.0], [35.9, 1035.0], [36.0, 1039.0], [36.1, 1043.0], [36.2, 1054.0], [36.3, 1057.0], [36.4, 1057.0], [36.5, 1060.0], [36.6, 1061.0], [36.7, 1061.0], [36.8, 1062.0], [36.9, 1064.0], [37.0, 1066.0], [37.1, 1071.0], [37.2, 1073.0], [37.3, 1076.0], [37.4, 1076.0], [37.5, 1077.0], [37.6, 1081.0], [37.7, 1083.0], [37.8, 1085.0], [37.9, 1086.0], [38.0, 1087.0], [38.1, 1097.0], [38.2, 1100.0], [38.3, 1101.0], [38.4, 1103.0], [38.5, 1103.0], [38.6, 1105.0], [38.7, 1105.0], [38.8, 1107.0], [38.9, 1108.0], [39.0, 1110.0], [39.1, 1112.0], [39.2, 1113.0], [39.3, 1114.0], [39.4, 1116.0], [39.5, 1117.0], [39.6, 1118.0], [39.7, 1121.0], [39.8, 1124.0], [39.9, 1126.0], [40.0, 1126.0], [40.1, 1128.0], [40.2, 1130.0], [40.3, 1134.0], [40.4, 1137.0], [40.5, 1138.0], [40.6, 1138.0], [40.7, 1140.0], [40.8, 1145.0], [40.9, 1145.0], [41.0, 1145.0], [41.1, 1145.0], [41.2, 1146.0], [41.3, 1148.0], [41.4, 1151.0], [41.5, 1160.0], [41.6, 1160.0], [41.7, 1161.0], [41.8, 1165.0], [41.9, 1166.0], [42.0, 1167.0], [42.1, 1168.0], [42.2, 1169.0], [42.3, 1169.0], [42.4, 1170.0], [42.5, 1170.0], [42.6, 1171.0], [42.7, 1174.0], [42.8, 1174.0], [42.9, 1177.0], [43.0, 1179.0], [43.1, 1180.0], [43.2, 1181.0], [43.3, 1183.0], [43.4, 1184.0], [43.5, 1185.0], [43.6, 1187.0], [43.7, 1188.0], [43.8, 1190.0], [43.9, 1190.0], [44.0, 1192.0], [44.1, 1193.0], [44.2, 1195.0], [44.3, 1195.0], [44.4, 1196.0], [44.5, 1199.0], [44.6, 1201.0], [44.7, 1204.0], [44.8, 1204.0], [44.9, 1205.0], [45.0, 1208.0], [45.1, 1212.0], [45.2, 1214.0], [45.3, 1218.0], [45.4, 1223.0], [45.5, 1225.0], [45.6, 1225.0], [45.7, 1228.0], [45.8, 1229.0], [45.9, 1232.0], [46.0, 1235.0], [46.1, 1238.0], [46.2, 1240.0], [46.3, 1243.0], [46.4, 1245.0], [46.5, 1247.0], [46.6, 1253.0], [46.7, 1254.0], [46.8, 1256.0], [46.9, 1257.0], [47.0, 1259.0], [47.1, 1261.0], [47.2, 1261.0], [47.3, 1262.0], [47.4, 1264.0], [47.5, 1265.0], [47.6, 1272.0], [47.7, 1273.0], [47.8, 1275.0], [47.9, 1276.0], [48.0, 1277.0], [48.1, 1281.0], [48.2, 1283.0], [48.3, 1284.0], [48.4, 1288.0], [48.5, 1288.0], [48.6, 1288.0], [48.7, 1290.0], [48.8, 1293.0], [48.9, 1294.0], [49.0, 1294.0], [49.1, 1297.0], [49.2, 1300.0], [49.3, 1301.0], [49.4, 1303.0], [49.5, 1304.0], [49.6, 1308.0], [49.7, 1309.0], [49.8, 1314.0], [49.9, 1320.0], [50.0, 1320.0], [50.1, 1322.0], [50.2, 1324.0], [50.3, 1325.0], [50.4, 1326.0], [50.5, 1327.0], [50.6, 1327.0], [50.7, 1328.0], [50.8, 1331.0], [50.9, 1333.0], [51.0, 1335.0], [51.1, 1335.0], [51.2, 1339.0], [51.3, 1339.0], [51.4, 1341.0], [51.5, 1342.0], [51.6, 1343.0], [51.7, 1346.0], [51.8, 1346.0], [51.9, 1350.0], [52.0, 1350.0], [52.1, 1352.0], [52.2, 1353.0], [52.3, 1356.0], [52.4, 1358.0], [52.5, 1361.0], [52.6, 1361.0], [52.7, 1363.0], [52.8, 1365.0], [52.9, 1367.0], [53.0, 1369.0], [53.1, 1371.0], [53.2, 1372.0], [53.3, 1373.0], [53.4, 1374.0], [53.5, 1379.0], [53.6, 1382.0], [53.7, 1383.0], [53.8, 1383.0], [53.9, 1384.0], [54.0, 1385.0], [54.1, 1385.0], [54.2, 1388.0], [54.3, 1388.0], [54.4, 1390.0], [54.5, 1392.0], [54.6, 1395.0], [54.7, 1398.0], [54.8, 1399.0], [54.9, 1400.0], [55.0, 1401.0], [55.1, 1403.0], [55.2, 1404.0], [55.3, 1405.0], [55.4, 1406.0], [55.5, 1410.0], [55.6, 1411.0], [55.7, 1412.0], [55.8, 1412.0], [55.9, 1414.0], [56.0, 1415.0], [56.1, 1419.0], [56.2, 1421.0], [56.3, 1425.0], [56.4, 1426.0], [56.5, 1430.0], [56.6, 1433.0], [56.7, 1438.0], [56.8, 1441.0], [56.9, 1442.0], [57.0, 1443.0], [57.1, 1446.0], [57.2, 1447.0], [57.3, 1447.0], [57.4, 1448.0], [57.5, 1449.0], [57.6, 1450.0], [57.7, 1450.0], [57.8, 1452.0], [57.9, 1452.0], [58.0, 1453.0], [58.1, 1455.0], [58.2, 1460.0], [58.3, 1462.0], [58.4, 1463.0], [58.5, 1465.0], [58.6, 1470.0], [58.7, 1471.0], [58.8, 1473.0], [58.9, 1477.0], [59.0, 1477.0], [59.1, 1482.0], [59.2, 1483.0], [59.3, 1486.0], [59.4, 1487.0], [59.5, 1489.0], [59.6, 1490.0], [59.7, 1491.0], [59.8, 1493.0], [59.9, 1494.0], [60.0, 1498.0], [60.1, 1498.0], [60.2, 1501.0], [60.3, 1502.0], [60.4, 1504.0], [60.5, 1506.0], [60.6, 1507.0], [60.7, 1510.0], [60.8, 1511.0], [60.9, 1515.0], [61.0, 1517.0], [61.1, 1518.0], [61.2, 1518.0], [61.3, 1520.0], [61.4, 1521.0], [61.5, 1523.0], [61.6, 1523.0], [61.7, 1528.0], [61.8, 1530.0], [61.9, 1531.0], [62.0, 1532.0], [62.1, 1534.0], [62.2, 1534.0], [62.3, 1535.0], [62.4, 1535.0], [62.5, 1536.0], [62.6, 1537.0], [62.7, 1538.0], [62.8, 1541.0], [62.9, 1545.0], [63.0, 1550.0], [63.1, 1555.0], [63.2, 1556.0], [63.3, 1561.0], [63.4, 1563.0], [63.5, 1564.0], [63.6, 1567.0], [63.7, 1568.0], [63.8, 1571.0], [63.9, 1572.0], [64.0, 1575.0], [64.1, 1575.0], [64.2, 1575.0], [64.3, 1576.0], [64.4, 1577.0], [64.5, 1578.0], [64.6, 1580.0], [64.7, 1583.0], [64.8, 1583.0], [64.9, 1585.0], [65.0, 1589.0], [65.1, 1589.0], [65.2, 1592.0], [65.3, 1593.0], [65.4, 1596.0], [65.5, 1598.0], [65.6, 1600.0], [65.7, 1600.0], [65.8, 1600.0], [65.9, 1601.0], [66.0, 1603.0], [66.1, 1603.0], [66.2, 1606.0], [66.3, 1607.0], [66.4, 1611.0], [66.5, 1611.0], [66.6, 1612.0], [66.7, 1618.0], [66.8, 1620.0], [66.9, 1620.0], [67.0, 1621.0], [67.1, 1622.0], [67.2, 1625.0], [67.3, 1626.0], [67.4, 1626.0], [67.5, 1627.0], [67.6, 1634.0], [67.7, 1635.0], [67.8, 1639.0], [67.9, 1641.0], [68.0, 1644.0], [68.1, 1646.0], [68.2, 1648.0], [68.3, 1650.0], [68.4, 1655.0], [68.5, 1659.0], [68.6, 1664.0], [68.7, 1664.0], [68.8, 1667.0], [68.9, 1668.0], [69.0, 1669.0], [69.1, 1671.0], [69.2, 1674.0], [69.3, 1676.0], [69.4, 1678.0], [69.5, 1679.0], [69.6, 1680.0], [69.7, 1681.0], [69.8, 1684.0], [69.9, 1685.0], [70.0, 1687.0], [70.1, 1693.0], [70.2, 1694.0], [70.3, 1700.0], [70.4, 1702.0], [70.5, 1703.0], [70.6, 1704.0], [70.7, 1705.0], [70.8, 1705.0], [70.9, 1707.0], [71.0, 1711.0], [71.1, 1711.0], [71.2, 1713.0], [71.3, 1715.0], [71.4, 1715.0], [71.5, 1718.0], [71.6, 1721.0], [71.7, 1724.0], [71.8, 1726.0], [71.9, 1728.0], [72.0, 1730.0], [72.1, 1732.0], [72.2, 1733.0], [72.3, 1736.0], [72.4, 1739.0], [72.5, 1744.0], [72.6, 1748.0], [72.7, 1749.0], [72.8, 1753.0], [72.9, 1757.0], [73.0, 1758.0], [73.1, 1765.0], [73.2, 1768.0], [73.3, 1770.0], [73.4, 1777.0], [73.5, 1779.0], [73.6, 1782.0], [73.7, 1783.0], [73.8, 1785.0], [73.9, 1787.0], [74.0, 1789.0], [74.1, 1791.0], [74.2, 1794.0], [74.3, 1794.0], [74.4, 1802.0], [74.5, 1809.0], [74.6, 1814.0], [74.7, 1814.0], [74.8, 1817.0], [74.9, 1818.0], [75.0, 1820.0], [75.1, 1826.0], [75.2, 1826.0], [75.3, 1829.0], [75.4, 1833.0], [75.5, 1835.0], [75.6, 1835.0], [75.7, 1837.0], [75.8, 1837.0], [75.9, 1842.0], [76.0, 1843.0], [76.1, 1845.0], [76.2, 1847.0], [76.3, 1850.0], [76.4, 1850.0], [76.5, 1854.0], [76.6, 1857.0], [76.7, 1867.0], [76.8, 1881.0], [76.9, 1882.0], [77.0, 1883.0], [77.1, 1887.0], [77.2, 1895.0], [77.3, 1905.0], [77.4, 1906.0], [77.5, 1911.0], [77.6, 1915.0], [77.7, 1917.0], [77.8, 1921.0], [77.9, 1923.0], [78.0, 1930.0], [78.1, 1934.0], [78.2, 1940.0], [78.3, 1943.0], [78.4, 1944.0], [78.5, 1944.0], [78.6, 1946.0], [78.7, 1949.0], [78.8, 1952.0], [78.9, 1953.0], [79.0, 1955.0], [79.1, 1962.0], [79.2, 1964.0], [79.3, 1967.0], [79.4, 1968.0], [79.5, 1970.0], [79.6, 1971.0], [79.7, 1975.0], [79.8, 1979.0], [79.9, 1984.0], [80.0, 1984.0], [80.1, 1990.0], [80.2, 1997.0], [80.3, 2002.0], [80.4, 2004.0], [80.5, 2015.0], [80.6, 2018.0], [80.7, 2025.0], [80.8, 2026.0], [80.9, 2033.0], [81.0, 2034.0], [81.1, 2036.0], [81.2, 2036.0], [81.3, 2041.0], [81.4, 2048.0], [81.5, 2052.0], [81.6, 2053.0], [81.7, 2055.0], [81.8, 2061.0], [81.9, 2062.0], [82.0, 2065.0], [82.1, 2072.0], [82.2, 2078.0], [82.3, 2080.0], [82.4, 2082.0], [82.5, 2086.0], [82.6, 2093.0], [82.7, 2094.0], [82.8, 2097.0], [82.9, 2102.0], [83.0, 2107.0], [83.1, 2118.0], [83.2, 2122.0], [83.3, 2128.0], [83.4, 2136.0], [83.5, 2142.0], [83.6, 2146.0], [83.7, 2147.0], [83.8, 2157.0], [83.9, 2169.0], [84.0, 2177.0], [84.1, 2179.0], [84.2, 2200.0], [84.3, 2201.0], [84.4, 2212.0], [84.5, 2227.0], [84.6, 2230.0], [84.7, 2232.0], [84.8, 2235.0], [84.9, 2242.0], [85.0, 2245.0], [85.1, 2250.0], [85.2, 2255.0], [85.3, 2255.0], [85.4, 2259.0], [85.5, 2260.0], [85.6, 2267.0], [85.7, 2278.0], [85.8, 2281.0], [85.9, 2283.0], [86.0, 2284.0], [86.1, 2290.0], [86.2, 2294.0], [86.3, 2299.0], [86.4, 2300.0], [86.5, 2306.0], [86.6, 2310.0], [86.7, 2325.0], [86.8, 2332.0], [86.9, 2335.0], [87.0, 2338.0], [87.1, 2342.0], [87.2, 2363.0], [87.3, 2366.0], [87.4, 2372.0], [87.5, 2380.0], [87.6, 2392.0], [87.7, 2398.0], [87.8, 2399.0], [87.9, 2399.0], [88.0, 2402.0], [88.1, 2412.0], [88.2, 2421.0], [88.3, 2422.0], [88.4, 2425.0], [88.5, 2431.0], [88.6, 2444.0], [88.7, 2466.0], [88.8, 2474.0], [88.9, 2477.0], [89.0, 2478.0], [89.1, 2493.0], [89.2, 2518.0], [89.3, 2522.0], [89.4, 2526.0], [89.5, 2527.0], [89.6, 2529.0], [89.7, 2535.0], [89.8, 2540.0], [89.9, 2548.0], [90.0, 2550.0], [90.1, 2556.0], [90.2, 2571.0], [90.3, 2576.0], [90.4, 2589.0], [90.5, 2593.0], [90.6, 2594.0], [90.7, 2607.0], [90.8, 2608.0], [90.9, 2626.0], [91.0, 2631.0], [91.1, 2635.0], [91.2, 2639.0], [91.3, 2646.0], [91.4, 2660.0], [91.5, 2661.0], [91.6, 2663.0], [91.7, 2679.0], [91.8, 2715.0], [91.9, 2727.0], [92.0, 2728.0], [92.1, 2742.0], [92.2, 2742.0], [92.3, 2761.0], [92.4, 2763.0], [92.5, 2776.0], [92.6, 2784.0], [92.7, 2784.0], [92.8, 2801.0], [92.9, 2819.0], [93.0, 2831.0], [93.1, 2840.0], [93.2, 2842.0], [93.3, 2849.0], [93.4, 2855.0], [93.5, 2867.0], [93.6, 2869.0], [93.7, 2869.0], [93.8, 2879.0], [93.9, 2888.0], [94.0, 2891.0], [94.1, 2902.0], [94.2, 2909.0], [94.3, 2914.0], [94.4, 2927.0], [94.5, 2938.0], [94.6, 2950.0], [94.7, 2962.0], [94.8, 2964.0], [94.9, 2978.0], [95.0, 2990.0], [95.1, 2993.0], [95.2, 2997.0], [95.3, 2999.0], [95.4, 3009.0], [95.5, 3019.0], [95.6, 3030.0], [95.7, 3039.0], [95.8, 3044.0], [95.9, 3045.0], [96.0, 3056.0], [96.1, 3066.0], [96.2, 3079.0], [96.3, 3123.0], [96.4, 3128.0], [96.5, 3160.0], [96.6, 3161.0], [96.7, 3191.0], [96.8, 3215.0], [96.9, 3224.0], [97.0, 3237.0], [97.1, 3264.0], [97.2, 3290.0], [97.3, 3300.0], [97.4, 3306.0], [97.5, 3327.0], [97.6, 3348.0], [97.7, 3389.0], [97.8, 3416.0], [97.9, 3426.0], [98.0, 3439.0], [98.1, 3451.0], [98.2, 3474.0], [98.3, 3498.0], [98.4, 3523.0], [98.5, 3531.0], [98.6, 3538.0], [98.7, 3558.0], [98.8, 3633.0], [98.9, 3653.0], [99.0, 3735.0], [99.1, 3782.0], [99.2, 3795.0], [99.3, 3797.0], [99.4, 3932.0], [99.5, 3981.0], [99.6, 3997.0], [99.7, 4178.0], [99.8, 4268.0], [99.9, 4408.0], [100.0, 4415.0]], "isOverall": false, "label": "gateway_cl/helloauth-2", "isController": false}, {"data": [[0.0, 4.0], [0.1, 4.0], [0.2, 4.0], [0.3, 4.0], [0.4, 4.0], [0.5, 4.0], [0.6, 4.0], [0.7, 4.0], [0.8, 4.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 5.0], [1.7, 5.0], [1.8, 5.0], [1.9, 5.0], [2.0, 5.0], [2.1, 5.0], [2.2, 5.0], [2.3, 5.0], [2.4, 5.0], [2.5, 5.0], [2.6, 5.0], [2.7, 5.0], [2.8, 5.0], [2.9, 5.0], [3.0, 5.0], [3.1, 5.0], [3.2, 5.0], [3.3, 5.0], [3.4, 5.0], [3.5, 5.0], [3.6, 5.0], [3.7, 5.0], [3.8, 5.0], [3.9, 5.0], [4.0, 5.0], [4.1, 5.0], [4.2, 5.0], [4.3, 5.0], [4.4, 5.0], [4.5, 5.0], [4.6, 5.0], [4.7, 5.0], [4.8, 5.0], [4.9, 5.0], [5.0, 5.0], [5.1, 6.0], [5.2, 6.0], [5.3, 6.0], [5.4, 6.0], [5.5, 6.0], [5.6, 6.0], [5.7, 6.0], [5.8, 6.0], [5.9, 6.0], [6.0, 6.0], [6.1, 6.0], [6.2, 6.0], [6.3, 6.0], [6.4, 6.0], [6.5, 6.0], [6.6, 6.0], [6.7, 6.0], [6.8, 6.0], [6.9, 6.0], [7.0, 6.0], [7.1, 6.0], [7.2, 6.0], [7.3, 6.0], [7.4, 6.0], [7.5, 6.0], [7.6, 6.0], [7.7, 6.0], [7.8, 6.0], [7.9, 6.0], [8.0, 6.0], [8.1, 6.0], [8.2, 6.0], [8.3, 6.0], [8.4, 6.0], [8.5, 6.0], [8.6, 6.0], [8.7, 6.0], [8.8, 6.0], [8.9, 6.0], [9.0, 6.0], [9.1, 6.0], [9.2, 7.0], [9.3, 7.0], [9.4, 7.0], [9.5, 7.0], [9.6, 7.0], [9.7, 7.0], [9.8, 7.0], [9.9, 7.0], [10.0, 7.0], [10.1, 7.0], [10.2, 7.0], [10.3, 7.0], [10.4, 7.0], [10.5, 7.0], [10.6, 7.0], [10.7, 7.0], [10.8, 7.0], [10.9, 7.0], [11.0, 7.0], [11.1, 7.0], [11.2, 7.0], [11.3, 7.0], [11.4, 7.0], [11.5, 7.0], [11.6, 7.0], [11.7, 7.0], [11.8, 7.0], [11.9, 7.0], [12.0, 7.0], [12.1, 7.0], [12.2, 7.0], [12.3, 7.0], [12.4, 7.0], [12.5, 7.0], [12.6, 8.0], [12.7, 8.0], [12.8, 8.0], [12.9, 8.0], [13.0, 8.0], [13.1, 8.0], [13.2, 8.0], [13.3, 8.0], [13.4, 8.0], [13.5, 8.0], [13.6, 8.0], [13.7, 8.0], [13.8, 8.0], [13.9, 8.0], [14.0, 8.0], [14.1, 8.0], [14.2, 8.0], [14.3, 8.0], [14.4, 8.0], [14.5, 8.0], [14.6, 8.0], [14.7, 8.0], [14.8, 8.0], [14.9, 8.0], [15.0, 8.0], [15.1, 8.0], [15.2, 8.0], [15.3, 8.0], [15.4, 8.0], [15.5, 8.0], [15.6, 8.0], [15.7, 8.0], [15.8, 8.0], [15.9, 8.0], [16.0, 8.0], [16.1, 8.0], [16.2, 8.0], [16.3, 8.0], [16.4, 8.0], [16.5, 8.0], [16.6, 8.0], [16.7, 8.0], [16.8, 9.0], [16.9, 9.0], [17.0, 9.0], [17.1, 9.0], [17.2, 9.0], [17.3, 9.0], [17.4, 9.0], [17.5, 9.0], [17.6, 9.0], [17.7, 9.0], [17.8, 9.0], [17.9, 9.0], [18.0, 9.0], [18.1, 9.0], [18.2, 9.0], [18.3, 9.0], [18.4, 9.0], [18.5, 9.0], [18.6, 9.0], [18.7, 9.0], [18.8, 9.0], [18.9, 9.0], [19.0, 9.0], [19.1, 9.0], [19.2, 9.0], [19.3, 9.0], [19.4, 9.0], [19.5, 9.0], [19.6, 9.0], [19.7, 9.0], [19.8, 9.0], [19.9, 10.0], [20.0, 10.0], [20.1, 10.0], [20.2, 10.0], [20.3, 10.0], [20.4, 10.0], [20.5, 10.0], [20.6, 10.0], [20.7, 10.0], [20.8, 10.0], [20.9, 10.0], [21.0, 10.0], [21.1, 10.0], [21.2, 10.0], [21.3, 10.0], [21.4, 10.0], [21.5, 10.0], [21.6, 10.0], [21.7, 10.0], [21.8, 10.0], [21.9, 10.0], [22.0, 10.0], [22.1, 10.0], [22.2, 10.0], [22.3, 10.0], [22.4, 10.0], [22.5, 10.0], [22.6, 10.0], [22.7, 10.0], [22.8, 10.0], [22.9, 10.0], [23.0, 10.0], [23.1, 10.0], [23.2, 10.0], [23.3, 11.0], [23.4, 11.0], [23.5, 11.0], [23.6, 11.0], [23.7, 11.0], [23.8, 11.0], [23.9, 11.0], [24.0, 11.0], [24.1, 11.0], [24.2, 11.0], [24.3, 11.0], [24.4, 11.0], [24.5, 11.0], [24.6, 11.0], [24.7, 11.0], [24.8, 11.0], [24.9, 11.0], [25.0, 11.0], [25.1, 11.0], [25.2, 11.0], [25.3, 11.0], [25.4, 11.0], [25.5, 11.0], [25.6, 11.0], [25.7, 11.0], [25.8, 11.0], [25.9, 11.0], [26.0, 11.0], [26.1, 11.0], [26.2, 12.0], [26.3, 12.0], [26.4, 12.0], [26.5, 12.0], [26.6, 12.0], [26.7, 12.0], [26.8, 12.0], [26.9, 12.0], [27.0, 12.0], [27.1, 12.0], [27.2, 12.0], [27.3, 12.0], [27.4, 12.0], [27.5, 12.0], [27.6, 12.0], [27.7, 12.0], [27.8, 12.0], [27.9, 12.0], [28.0, 12.0], [28.1, 12.0], [28.2, 12.0], [28.3, 12.0], [28.4, 12.0], [28.5, 12.0], [28.6, 12.0], [28.7, 12.0], [28.8, 12.0], [28.9, 12.0], [29.0, 12.0], [29.1, 12.0], [29.2, 12.0], [29.3, 12.0], [29.4, 12.0], [29.5, 12.0], [29.6, 12.0], [29.7, 12.0], [29.8, 12.0], [29.9, 13.0], [30.0, 13.0], [30.1, 13.0], [30.2, 13.0], [30.3, 13.0], [30.4, 13.0], [30.5, 13.0], [30.6, 13.0], [30.7, 13.0], [30.8, 13.0], [30.9, 13.0], [31.0, 13.0], [31.1, 13.0], [31.2, 13.0], [31.3, 13.0], [31.4, 13.0], [31.5, 13.0], [31.6, 13.0], [31.7, 13.0], [31.8, 13.0], [31.9, 13.0], [32.0, 13.0], [32.1, 13.0], [32.2, 13.0], [32.3, 13.0], [32.4, 13.0], [32.5, 13.0], [32.6, 14.0], [32.7, 14.0], [32.8, 14.0], [32.9, 14.0], [33.0, 14.0], [33.1, 14.0], [33.2, 14.0], [33.3, 14.0], [33.4, 14.0], [33.5, 14.0], [33.6, 14.0], [33.7, 14.0], [33.8, 14.0], [33.9, 14.0], [34.0, 14.0], [34.1, 14.0], [34.2, 14.0], [34.3, 14.0], [34.4, 14.0], [34.5, 14.0], [34.6, 14.0], [34.7, 14.0], [34.8, 14.0], [34.9, 14.0], [35.0, 14.0], [35.1, 15.0], [35.2, 15.0], [35.3, 15.0], [35.4, 15.0], [35.5, 15.0], [35.6, 15.0], [35.7, 15.0], [35.8, 15.0], [35.9, 15.0], [36.0, 15.0], [36.1, 15.0], [36.2, 15.0], [36.3, 15.0], [36.4, 15.0], [36.5, 15.0], [36.6, 15.0], [36.7, 15.0], [36.8, 15.0], [36.9, 15.0], [37.0, 15.0], [37.1, 15.0], [37.2, 15.0], [37.3, 15.0], [37.4, 15.0], [37.5, 15.0], [37.6, 15.0], [37.7, 15.0], [37.8, 15.0], [37.9, 15.0], [38.0, 15.0], [38.1, 15.0], [38.2, 15.0], [38.3, 15.0], [38.4, 15.0], [38.5, 15.0], [38.6, 15.0], [38.7, 15.0], [38.8, 16.0], [38.9, 16.0], [39.0, 16.0], [39.1, 16.0], [39.2, 16.0], [39.3, 16.0], [39.4, 16.0], [39.5, 16.0], [39.6, 16.0], [39.7, 16.0], [39.8, 16.0], [39.9, 16.0], [40.0, 16.0], [40.1, 16.0], [40.2, 16.0], [40.3, 16.0], [40.4, 16.0], [40.5, 16.0], [40.6, 16.0], [40.7, 16.0], [40.8, 16.0], [40.9, 16.0], [41.0, 16.0], [41.1, 16.0], [41.2, 16.0], [41.3, 16.0], [41.4, 16.0], [41.5, 17.0], [41.6, 17.0], [41.7, 17.0], [41.8, 17.0], [41.9, 17.0], [42.0, 17.0], [42.1, 17.0], [42.2, 17.0], [42.3, 17.0], [42.4, 17.0], [42.5, 17.0], [42.6, 17.0], [42.7, 17.0], [42.8, 17.0], [42.9, 17.0], [43.0, 17.0], [43.1, 17.0], [43.2, 17.0], [43.3, 17.0], [43.4, 17.0], [43.5, 17.0], [43.6, 17.0], [43.7, 17.0], [43.8, 17.0], [43.9, 17.0], [44.0, 17.0], [44.1, 17.0], [44.2, 17.0], [44.3, 17.0], [44.4, 17.0], [44.5, 18.0], [44.6, 18.0], [44.7, 18.0], [44.8, 18.0], [44.9, 18.0], [45.0, 18.0], [45.1, 18.0], [45.2, 18.0], [45.3, 18.0], [45.4, 18.0], [45.5, 18.0], [45.6, 18.0], [45.7, 18.0], [45.8, 18.0], [45.9, 18.0], [46.0, 18.0], [46.1, 18.0], [46.2, 18.0], [46.3, 19.0], [46.4, 19.0], [46.5, 19.0], [46.6, 19.0], [46.7, 19.0], [46.8, 19.0], [46.9, 19.0], [47.0, 19.0], [47.1, 19.0], [47.2, 19.0], [47.3, 19.0], [47.4, 19.0], [47.5, 19.0], [47.6, 19.0], [47.7, 19.0], [47.8, 19.0], [47.9, 19.0], [48.0, 19.0], [48.1, 19.0], [48.2, 19.0], [48.3, 19.0], [48.4, 19.0], [48.5, 19.0], [48.6, 19.0], [48.7, 19.0], [48.8, 19.0], [48.9, 19.0], [49.0, 19.0], [49.1, 19.0], [49.2, 19.0], [49.3, 20.0], [49.4, 20.0], [49.5, 20.0], [49.6, 20.0], [49.7, 20.0], [49.8, 20.0], [49.9, 20.0], [50.0, 20.0], [50.1, 20.0], [50.2, 20.0], [50.3, 20.0], [50.4, 20.0], [50.5, 20.0], [50.6, 20.0], [50.7, 20.0], [50.8, 21.0], [50.9, 21.0], [51.0, 21.0], [51.1, 21.0], [51.2, 21.0], [51.3, 21.0], [51.4, 21.0], [51.5, 21.0], [51.6, 21.0], [51.7, 21.0], [51.8, 21.0], [51.9, 21.0], [52.0, 21.0], [52.1, 21.0], [52.2, 21.0], [52.3, 21.0], [52.4, 22.0], [52.5, 22.0], [52.6, 22.0], [52.7, 22.0], [52.8, 22.0], [52.9, 22.0], [53.0, 22.0], [53.1, 22.0], [53.2, 22.0], [53.3, 22.0], [53.4, 22.0], [53.5, 22.0], [53.6, 22.0], [53.7, 22.0], [53.8, 22.0], [53.9, 22.0], [54.0, 22.0], [54.1, 22.0], [54.2, 23.0], [54.3, 23.0], [54.4, 23.0], [54.5, 23.0], [54.6, 23.0], [54.7, 23.0], [54.8, 23.0], [54.9, 23.0], [55.0, 23.0], [55.1, 23.0], [55.2, 23.0], [55.3, 23.0], [55.4, 23.0], [55.5, 23.0], [55.6, 23.0], [55.7, 24.0], [55.8, 24.0], [55.9, 24.0], [56.0, 24.0], [56.1, 24.0], [56.2, 24.0], [56.3, 24.0], [56.4, 24.0], [56.5, 24.0], [56.6, 24.0], [56.7, 24.0], [56.8, 24.0], [56.9, 24.0], [57.0, 24.0], [57.1, 24.0], [57.2, 24.0], [57.3, 25.0], [57.4, 25.0], [57.5, 25.0], [57.6, 25.0], [57.7, 25.0], [57.8, 25.0], [57.9, 25.0], [58.0, 25.0], [58.1, 25.0], [58.2, 25.0], [58.3, 25.0], [58.4, 25.0], [58.5, 25.0], [58.6, 25.0], [58.7, 26.0], [58.8, 26.0], [58.9, 26.0], [59.0, 26.0], [59.1, 26.0], [59.2, 26.0], [59.3, 26.0], [59.4, 26.0], [59.5, 26.0], [59.6, 26.0], [59.7, 27.0], [59.8, 27.0], [59.9, 27.0], [60.0, 27.0], [60.1, 27.0], [60.2, 27.0], [60.3, 27.0], [60.4, 27.0], [60.5, 27.0], [60.6, 28.0], [60.7, 28.0], [60.8, 28.0], [60.9, 28.0], [61.0, 28.0], [61.1, 28.0], [61.2, 28.0], [61.3, 28.0], [61.4, 29.0], [61.5, 29.0], [61.6, 29.0], [61.7, 29.0], [61.8, 29.0], [61.9, 29.0], [62.0, 29.0], [62.1, 30.0], [62.2, 30.0], [62.3, 30.0], [62.4, 30.0], [62.5, 30.0], [62.6, 31.0], [62.7, 31.0], [62.8, 31.0], [62.9, 31.0], [63.0, 31.0], [63.1, 31.0], [63.2, 32.0], [63.3, 32.0], [63.4, 32.0], [63.5, 32.0], [63.6, 32.0], [63.7, 32.0], [63.8, 33.0], [63.9, 33.0], [64.0, 33.0], [64.1, 33.0], [64.2, 33.0], [64.3, 33.0], [64.4, 33.0], [64.5, 34.0], [64.6, 34.0], [64.7, 34.0], [64.8, 34.0], [64.9, 34.0], [65.0, 34.0], [65.1, 34.0], [65.2, 34.0], [65.3, 34.0], [65.4, 35.0], [65.5, 35.0], [65.6, 35.0], [65.7, 35.0], [65.8, 35.0], [65.9, 35.0], [66.0, 35.0], [66.1, 36.0], [66.2, 36.0], [66.3, 36.0], [66.4, 36.0], [66.5, 36.0], [66.6, 36.0], [66.7, 36.0], [66.8, 36.0], [66.9, 36.0], [67.0, 37.0], [67.1, 37.0], [67.2, 37.0], [67.3, 37.0], [67.4, 37.0], [67.5, 37.0], [67.6, 37.0], [67.7, 38.0], [67.8, 38.0], [67.9, 38.0], [68.0, 38.0], [68.1, 38.0], [68.2, 38.0], [68.3, 38.0], [68.4, 39.0], [68.5, 39.0], [68.6, 39.0], [68.7, 39.0], [68.8, 39.0], [68.9, 39.0], [69.0, 39.0], [69.1, 40.0], [69.2, 40.0], [69.3, 40.0], [69.4, 41.0], [69.5, 41.0], [69.6, 41.0], [69.7, 41.0], [69.8, 41.0], [69.9, 41.0], [70.0, 42.0], [70.1, 42.0], [70.2, 42.0], [70.3, 42.0], [70.4, 42.0], [70.5, 43.0], [70.6, 43.0], [70.7, 43.0], [70.8, 43.0], [70.9, 43.0], [71.0, 43.0], [71.1, 43.0], [71.2, 43.0], [71.3, 44.0], [71.4, 44.0], [71.5, 44.0], [71.6, 44.0], [71.7, 44.0], [71.8, 45.0], [71.9, 45.0], [72.0, 45.0], [72.1, 45.0], [72.2, 46.0], [72.3, 46.0], [72.4, 46.0], [72.5, 46.0], [72.6, 47.0], [72.7, 47.0], [72.8, 47.0], [72.9, 48.0], [73.0, 48.0], [73.1, 48.0], [73.2, 48.0], [73.3, 48.0], [73.4, 48.0], [73.5, 48.0], [73.6, 49.0], [73.7, 49.0], [73.8, 49.0], [73.9, 49.0], [74.0, 50.0], [74.1, 50.0], [74.2, 50.0], [74.3, 50.0], [74.4, 51.0], [74.5, 51.0], [74.6, 51.0], [74.7, 52.0], [74.8, 52.0], [74.9, 52.0], [75.0, 52.0], [75.1, 52.0], [75.2, 53.0], [75.3, 53.0], [75.4, 53.0], [75.5, 54.0], [75.6, 54.0], [75.7, 54.0], [75.8, 55.0], [75.9, 55.0], [76.0, 56.0], [76.1, 56.0], [76.2, 57.0], [76.3, 57.0], [76.4, 58.0], [76.5, 58.0], [76.6, 59.0], [76.7, 59.0], [76.8, 61.0], [76.9, 61.0], [77.0, 61.0], [77.1, 62.0], [77.2, 64.0], [77.3, 64.0], [77.4, 64.0], [77.5, 65.0], [77.6, 65.0], [77.7, 66.0], [77.8, 66.0], [77.9, 66.0], [78.0, 67.0], [78.1, 67.0], [78.2, 68.0], [78.3, 68.0], [78.4, 69.0], [78.5, 69.0], [78.6, 69.0], [78.7, 69.0], [78.8, 70.0], [78.9, 70.0], [79.0, 71.0], [79.1, 72.0], [79.2, 72.0], [79.3, 73.0], [79.4, 73.0], [79.5, 73.0], [79.6, 74.0], [79.7, 77.0], [79.8, 78.0], [79.9, 78.0], [80.0, 78.0], [80.1, 80.0], [80.2, 81.0], [80.3, 81.0], [80.4, 83.0], [80.5, 84.0], [80.6, 85.0], [80.7, 85.0], [80.8, 87.0], [80.9, 88.0], [81.0, 90.0], [81.1, 92.0], [81.2, 93.0], [81.3, 95.0], [81.4, 100.0], [81.5, 100.0], [81.6, 101.0], [81.7, 103.0], [81.8, 107.0], [81.9, 112.0], [82.0, 121.0], [82.1, 122.0], [82.2, 124.0], [82.3, 128.0], [82.4, 134.0], [82.5, 134.0], [82.6, 152.0], [82.7, 156.0], [82.8, 169.0], [82.9, 179.0], [83.0, 190.0], [83.1, 213.0], [83.2, 225.0], [83.3, 233.0], [83.4, 242.0], [83.5, 243.0], [83.6, 272.0], [83.7, 274.0], [83.8, 276.0], [83.9, 285.0], [84.0, 288.0], [84.1, 292.0], [84.2, 297.0], [84.3, 298.0], [84.4, 303.0], [84.5, 313.0], [84.6, 328.0], [84.7, 332.0], [84.8, 337.0], [84.9, 339.0], [85.0, 352.0], [85.1, 354.0], [85.2, 359.0], [85.3, 362.0], [85.4, 381.0], [85.5, 396.0], [85.6, 402.0], [85.7, 405.0], [85.8, 409.0], [85.9, 413.0], [86.0, 417.0], [86.1, 420.0], [86.2, 421.0], [86.3, 454.0], [86.4, 455.0], [86.5, 458.0], [86.6, 461.0], [86.7, 467.0], [86.8, 555.0], [86.9, 556.0], [87.0, 558.0], [87.1, 558.0], [87.2, 560.0], [87.3, 560.0], [87.4, 560.0], [87.5, 563.0], [87.6, 563.0], [87.7, 568.0], [87.8, 570.0], [87.9, 571.0], [88.0, 572.0], [88.1, 573.0], [88.2, 574.0], [88.3, 575.0], [88.4, 576.0], [88.5, 577.0], [88.6, 578.0], [88.7, 579.0], [88.8, 581.0], [88.9, 582.0], [89.0, 582.0], [89.1, 586.0], [89.2, 588.0], [89.3, 589.0], [89.4, 591.0], [89.5, 594.0], [89.6, 595.0], [89.7, 595.0], [89.8, 596.0], [89.9, 597.0], [90.0, 597.0], [90.1, 599.0], [90.2, 600.0], [90.3, 601.0], [90.4, 603.0], [90.5, 605.0], [90.6, 605.0], [90.7, 605.0], [90.8, 606.0], [90.9, 606.0], [91.0, 608.0], [91.1, 609.0], [91.2, 610.0], [91.3, 611.0], [91.4, 611.0], [91.5, 611.0], [91.6, 612.0], [91.7, 613.0], [91.8, 614.0], [91.9, 616.0], [92.0, 620.0], [92.1, 621.0], [92.2, 621.0], [92.3, 622.0], [92.4, 623.0], [92.5, 624.0], [92.6, 624.0], [92.7, 624.0], [92.8, 626.0], [92.9, 628.0], [93.0, 629.0], [93.1, 630.0], [93.2, 630.0], [93.3, 633.0], [93.4, 635.0], [93.5, 636.0], [93.6, 636.0], [93.7, 636.0], [93.8, 638.0], [93.9, 638.0], [94.0, 639.0], [94.1, 640.0], [94.2, 641.0], [94.3, 641.0], [94.4, 641.0], [94.5, 642.0], [94.6, 643.0], [94.7, 644.0], [94.8, 644.0], [94.9, 645.0], [95.0, 645.0], [95.1, 646.0], [95.2, 649.0], [95.3, 649.0], [95.4, 661.0], [95.5, 664.0], [95.6, 667.0], [95.7, 669.0], [95.8, 670.0], [95.9, 672.0], [96.0, 675.0], [96.1, 678.0], [96.2, 682.0], [96.3, 687.0], [96.4, 691.0], [96.5, 692.0], [96.6, 693.0], [96.7, 697.0], [96.8, 700.0], [96.9, 700.0], [97.0, 701.0], [97.1, 702.0], [97.2, 703.0], [97.3, 703.0], [97.4, 704.0], [97.5, 707.0], [97.6, 708.0], [97.7, 714.0], [97.8, 717.0], [97.9, 723.0], [98.0, 749.0], [98.1, 755.0], [98.2, 758.0], [98.3, 762.0], [98.4, 771.0], [98.5, 772.0], [98.6, 780.0], [98.7, 787.0], [98.8, 792.0], [98.9, 793.0], [99.0, 796.0], [99.1, 799.0], [99.2, 805.0], [99.3, 809.0], [99.4, 827.0], [99.5, 840.0], [99.6, 850.0], [99.7, 863.0], [99.8, 870.0], [99.9, 873.0], [100.0, 873.0]], "isOverall": false, "label": "gateway_cl/helloauth-0", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 3.0], [13.5, 3.0], [13.6, 3.0], [13.7, 3.0], [13.8, 3.0], [13.9, 3.0], [14.0, 3.0], [14.1, 3.0], [14.2, 3.0], [14.3, 3.0], [14.4, 3.0], [14.5, 3.0], [14.6, 3.0], [14.7, 3.0], [14.8, 3.0], [14.9, 3.0], [15.0, 3.0], [15.1, 3.0], [15.2, 3.0], [15.3, 3.0], [15.4, 3.0], [15.5, 3.0], [15.6, 3.0], [15.7, 3.0], [15.8, 3.0], [15.9, 3.0], [16.0, 3.0], [16.1, 3.0], [16.2, 3.0], [16.3, 3.0], [16.4, 3.0], [16.5, 3.0], [16.6, 3.0], [16.7, 3.0], [16.8, 3.0], [16.9, 3.0], [17.0, 3.0], [17.1, 3.0], [17.2, 3.0], [17.3, 3.0], [17.4, 3.0], [17.5, 3.0], [17.6, 3.0], [17.7, 3.0], [17.8, 3.0], [17.9, 3.0], [18.0, 3.0], [18.1, 3.0], [18.2, 3.0], [18.3, 3.0], [18.4, 3.0], [18.5, 3.0], [18.6, 3.0], [18.7, 3.0], [18.8, 3.0], [18.9, 3.0], [19.0, 3.0], [19.1, 3.0], [19.2, 3.0], [19.3, 3.0], [19.4, 3.0], [19.5, 3.0], [19.6, 3.0], [19.7, 3.0], [19.8, 3.0], [19.9, 3.0], [20.0, 3.0], [20.1, 4.0], [20.2, 4.0], [20.3, 4.0], [20.4, 4.0], [20.5, 4.0], [20.6, 4.0], [20.7, 4.0], [20.8, 4.0], [20.9, 4.0], [21.0, 4.0], [21.1, 4.0], [21.2, 4.0], [21.3, 4.0], [21.4, 4.0], [21.5, 4.0], [21.6, 4.0], [21.7, 4.0], [21.8, 4.0], [21.9, 4.0], [22.0, 4.0], [22.1, 4.0], [22.2, 4.0], [22.3, 4.0], [22.4, 4.0], [22.5, 4.0], [22.6, 4.0], [22.7, 4.0], [22.8, 4.0], [22.9, 4.0], [23.0, 4.0], [23.1, 4.0], [23.2, 4.0], [23.3, 4.0], [23.4, 4.0], [23.5, 4.0], [23.6, 4.0], [23.7, 4.0], [23.8, 4.0], [23.9, 4.0], [24.0, 4.0], [24.1, 4.0], [24.2, 4.0], [24.3, 4.0], [24.4, 4.0], [24.5, 4.0], [24.6, 4.0], [24.7, 4.0], [24.8, 4.0], [24.9, 4.0], [25.0, 4.0], [25.1, 4.0], [25.2, 4.0], [25.3, 4.0], [25.4, 4.0], [25.5, 4.0], [25.6, 4.0], [25.7, 4.0], [25.8, 4.0], [25.9, 4.0], [26.0, 4.0], [26.1, 4.0], [26.2, 4.0], [26.3, 4.0], [26.4, 4.0], [26.5, 4.0], [26.6, 4.0], [26.7, 4.0], [26.8, 4.0], [26.9, 4.0], [27.0, 4.0], [27.1, 4.0], [27.2, 4.0], [27.3, 4.0], [27.4, 4.0], [27.5, 4.0], [27.6, 4.0], [27.7, 5.0], [27.8, 5.0], [27.9, 5.0], [28.0, 5.0], [28.1, 5.0], [28.2, 5.0], [28.3, 5.0], [28.4, 5.0], [28.5, 5.0], [28.6, 5.0], [28.7, 5.0], [28.8, 5.0], [28.9, 5.0], [29.0, 5.0], [29.1, 5.0], [29.2, 5.0], [29.3, 5.0], [29.4, 5.0], [29.5, 5.0], [29.6, 5.0], [29.7, 5.0], [29.8, 5.0], [29.9, 5.0], [30.0, 5.0], [30.1, 5.0], [30.2, 5.0], [30.3, 5.0], [30.4, 5.0], [30.5, 5.0], [30.6, 5.0], [30.7, 5.0], [30.8, 5.0], [30.9, 5.0], [31.0, 5.0], [31.1, 5.0], [31.2, 5.0], [31.3, 5.0], [31.4, 5.0], [31.5, 5.0], [31.6, 5.0], [31.7, 5.0], [31.8, 5.0], [31.9, 5.0], [32.0, 5.0], [32.1, 5.0], [32.2, 5.0], [32.3, 5.0], [32.4, 5.0], [32.5, 5.0], [32.6, 5.0], [32.7, 5.0], [32.8, 5.0], [32.9, 5.0], [33.0, 5.0], [33.1, 5.0], [33.2, 5.0], [33.3, 5.0], [33.4, 5.0], [33.5, 5.0], [33.6, 5.0], [33.7, 5.0], [33.8, 5.0], [33.9, 5.0], [34.0, 6.0], [34.1, 6.0], [34.2, 6.0], [34.3, 6.0], [34.4, 6.0], [34.5, 6.0], [34.6, 6.0], [34.7, 6.0], [34.8, 6.0], [34.9, 6.0], [35.0, 6.0], [35.1, 6.0], [35.2, 6.0], [35.3, 6.0], [35.4, 6.0], [35.5, 6.0], [35.6, 6.0], [35.7, 6.0], [35.8, 6.0], [35.9, 6.0], [36.0, 6.0], [36.1, 6.0], [36.2, 6.0], [36.3, 6.0], [36.4, 6.0], [36.5, 6.0], [36.6, 6.0], [36.7, 6.0], [36.8, 6.0], [36.9, 6.0], [37.0, 6.0], [37.1, 6.0], [37.2, 6.0], [37.3, 6.0], [37.4, 6.0], [37.5, 6.0], [37.6, 6.0], [37.7, 6.0], [37.8, 6.0], [37.9, 6.0], [38.0, 6.0], [38.1, 6.0], [38.2, 6.0], [38.3, 6.0], [38.4, 6.0], [38.5, 6.0], [38.6, 6.0], [38.7, 6.0], [38.8, 6.0], [38.9, 6.0], [39.0, 6.0], [39.1, 6.0], [39.2, 6.0], [39.3, 6.0], [39.4, 6.0], [39.5, 6.0], [39.6, 6.0], [39.7, 7.0], [39.8, 7.0], [39.9, 7.0], [40.0, 7.0], [40.1, 7.0], [40.2, 7.0], [40.3, 7.0], [40.4, 7.0], [40.5, 7.0], [40.6, 7.0], [40.7, 7.0], [40.8, 7.0], [40.9, 7.0], [41.0, 7.0], [41.1, 7.0], [41.2, 7.0], [41.3, 7.0], [41.4, 7.0], [41.5, 7.0], [41.6, 7.0], [41.7, 7.0], [41.8, 7.0], [41.9, 7.0], [42.0, 7.0], [42.1, 7.0], [42.2, 7.0], [42.3, 7.0], [42.4, 7.0], [42.5, 7.0], [42.6, 7.0], [42.7, 7.0], [42.8, 7.0], [42.9, 7.0], [43.0, 7.0], [43.1, 7.0], [43.2, 7.0], [43.3, 7.0], [43.4, 7.0], [43.5, 7.0], [43.6, 7.0], [43.7, 7.0], [43.8, 7.0], [43.9, 7.0], [44.0, 7.0], [44.1, 7.0], [44.2, 8.0], [44.3, 8.0], [44.4, 8.0], [44.5, 8.0], [44.6, 8.0], [44.7, 8.0], [44.8, 8.0], [44.9, 8.0], [45.0, 8.0], [45.1, 8.0], [45.2, 8.0], [45.3, 8.0], [45.4, 8.0], [45.5, 8.0], [45.6, 8.0], [45.7, 8.0], [45.8, 8.0], [45.9, 8.0], [46.0, 8.0], [46.1, 8.0], [46.2, 8.0], [46.3, 8.0], [46.4, 8.0], [46.5, 8.0], [46.6, 8.0], [46.7, 8.0], [46.8, 8.0], [46.9, 8.0], [47.0, 8.0], [47.1, 8.0], [47.2, 8.0], [47.3, 8.0], [47.4, 8.0], [47.5, 8.0], [47.6, 9.0], [47.7, 9.0], [47.8, 9.0], [47.9, 9.0], [48.0, 9.0], [48.1, 9.0], [48.2, 9.0], [48.3, 9.0], [48.4, 9.0], [48.5, 9.0], [48.6, 9.0], [48.7, 9.0], [48.8, 9.0], [48.9, 9.0], [49.0, 9.0], [49.1, 9.0], [49.2, 9.0], [49.3, 9.0], [49.4, 9.0], [49.5, 9.0], [49.6, 9.0], [49.7, 9.0], [49.8, 9.0], [49.9, 9.0], [50.0, 9.0], [50.1, 9.0], [50.2, 9.0], [50.3, 9.0], [50.4, 9.0], [50.5, 9.0], [50.6, 9.0], [50.7, 9.0], [50.8, 9.0], [50.9, 9.0], [51.0, 9.0], [51.1, 10.0], [51.2, 10.0], [51.3, 10.0], [51.4, 10.0], [51.5, 10.0], [51.6, 10.0], [51.7, 10.0], [51.8, 10.0], [51.9, 10.0], [52.0, 10.0], [52.1, 10.0], [52.2, 10.0], [52.3, 10.0], [52.4, 10.0], [52.5, 10.0], [52.6, 10.0], [52.7, 10.0], [52.8, 10.0], [52.9, 10.0], [53.0, 10.0], [53.1, 10.0], [53.2, 10.0], [53.3, 10.0], [53.4, 10.0], [53.5, 10.0], [53.6, 10.0], [53.7, 10.0], [53.8, 10.0], [53.9, 10.0], [54.0, 11.0], [54.1, 11.0], [54.2, 11.0], [54.3, 11.0], [54.4, 11.0], [54.5, 11.0], [54.6, 11.0], [54.7, 11.0], [54.8, 11.0], [54.9, 11.0], [55.0, 11.0], [55.1, 11.0], [55.2, 11.0], [55.3, 11.0], [55.4, 11.0], [55.5, 11.0], [55.6, 11.0], [55.7, 11.0], [55.8, 11.0], [55.9, 11.0], [56.0, 11.0], [56.1, 11.0], [56.2, 11.0], [56.3, 11.0], [56.4, 11.0], [56.5, 11.0], [56.6, 11.0], [56.7, 11.0], [56.8, 11.0], [56.9, 11.0], [57.0, 11.0], [57.1, 11.0], [57.2, 11.0], [57.3, 12.0], [57.4, 12.0], [57.5, 12.0], [57.6, 12.0], [57.7, 12.0], [57.8, 12.0], [57.9, 12.0], [58.0, 12.0], [58.1, 12.0], [58.2, 12.0], [58.3, 12.0], [58.4, 12.0], [58.5, 12.0], [58.6, 12.0], [58.7, 12.0], [58.8, 12.0], [58.9, 12.0], [59.0, 12.0], [59.1, 12.0], [59.2, 12.0], [59.3, 12.0], [59.4, 12.0], [59.5, 12.0], [59.6, 12.0], [59.7, 12.0], [59.8, 13.0], [59.9, 13.0], [60.0, 13.0], [60.1, 13.0], [60.2, 13.0], [60.3, 13.0], [60.4, 13.0], [60.5, 13.0], [60.6, 13.0], [60.7, 13.0], [60.8, 13.0], [60.9, 13.0], [61.0, 13.0], [61.1, 13.0], [61.2, 13.0], [61.3, 13.0], [61.4, 13.0], [61.5, 13.0], [61.6, 13.0], [61.7, 13.0], [61.8, 13.0], [61.9, 13.0], [62.0, 13.0], [62.1, 14.0], [62.2, 14.0], [62.3, 14.0], [62.4, 14.0], [62.5, 14.0], [62.6, 14.0], [62.7, 14.0], [62.8, 14.0], [62.9, 14.0], [63.0, 14.0], [63.1, 14.0], [63.2, 14.0], [63.3, 14.0], [63.4, 14.0], [63.5, 14.0], [63.6, 14.0], [63.7, 14.0], [63.8, 15.0], [63.9, 15.0], [64.0, 15.0], [64.1, 15.0], [64.2, 15.0], [64.3, 15.0], [64.4, 15.0], [64.5, 15.0], [64.6, 15.0], [64.7, 15.0], [64.8, 15.0], [64.9, 15.0], [65.0, 15.0], [65.1, 15.0], [65.2, 15.0], [65.3, 15.0], [65.4, 15.0], [65.5, 15.0], [65.6, 15.0], [65.7, 15.0], [65.8, 15.0], [65.9, 15.0], [66.0, 16.0], [66.1, 16.0], [66.2, 16.0], [66.3, 16.0], [66.4, 16.0], [66.5, 16.0], [66.6, 16.0], [66.7, 16.0], [66.8, 16.0], [66.9, 16.0], [67.0, 16.0], [67.1, 16.0], [67.2, 16.0], [67.3, 16.0], [67.4, 16.0], [67.5, 16.0], [67.6, 16.0], [67.7, 16.0], [67.8, 16.0], [67.9, 17.0], [68.0, 17.0], [68.1, 17.0], [68.2, 17.0], [68.3, 17.0], [68.4, 17.0], [68.5, 17.0], [68.6, 17.0], [68.7, 17.0], [68.8, 17.0], [68.9, 17.0], [69.0, 17.0], [69.1, 17.0], [69.2, 17.0], [69.3, 17.0], [69.4, 17.0], [69.5, 17.0], [69.6, 17.0], [69.7, 18.0], [69.8, 18.0], [69.9, 18.0], [70.0, 18.0], [70.1, 18.0], [70.2, 18.0], [70.3, 18.0], [70.4, 18.0], [70.5, 18.0], [70.6, 18.0], [70.7, 18.0], [70.8, 18.0], [70.9, 18.0], [71.0, 18.0], [71.1, 18.0], [71.2, 18.0], [71.3, 18.0], [71.4, 18.0], [71.5, 19.0], [71.6, 19.0], [71.7, 19.0], [71.8, 19.0], [71.9, 19.0], [72.0, 19.0], [72.1, 19.0], [72.2, 19.0], [72.3, 19.0], [72.4, 19.0], [72.5, 19.0], [72.6, 19.0], [72.7, 19.0], [72.8, 19.0], [72.9, 20.0], [73.0, 20.0], [73.1, 20.0], [73.2, 20.0], [73.3, 20.0], [73.4, 20.0], [73.5, 20.0], [73.6, 20.0], [73.7, 20.0], [73.8, 20.0], [73.9, 20.0], [74.0, 21.0], [74.1, 21.0], [74.2, 21.0], [74.3, 21.0], [74.4, 21.0], [74.5, 21.0], [74.6, 21.0], [74.7, 21.0], [74.8, 21.0], [74.9, 22.0], [75.0, 22.0], [75.1, 22.0], [75.2, 22.0], [75.3, 22.0], [75.4, 22.0], [75.5, 22.0], [75.6, 23.0], [75.7, 23.0], [75.8, 23.0], [75.9, 23.0], [76.0, 23.0], [76.1, 23.0], [76.2, 23.0], [76.3, 23.0], [76.4, 23.0], [76.5, 24.0], [76.6, 24.0], [76.7, 24.0], [76.8, 24.0], [76.9, 24.0], [77.0, 24.0], [77.1, 25.0], [77.2, 25.0], [77.3, 25.0], [77.4, 25.0], [77.5, 26.0], [77.6, 26.0], [77.7, 26.0], [77.8, 26.0], [77.9, 26.0], [78.0, 27.0], [78.1, 27.0], [78.2, 27.0], [78.3, 27.0], [78.4, 27.0], [78.5, 27.0], [78.6, 27.0], [78.7, 28.0], [78.8, 28.0], [78.9, 28.0], [79.0, 28.0], [79.1, 28.0], [79.2, 29.0], [79.3, 29.0], [79.4, 29.0], [79.5, 29.0], [79.6, 30.0], [79.7, 30.0], [79.8, 30.0], [79.9, 30.0], [80.0, 31.0], [80.1, 31.0], [80.2, 31.0], [80.3, 31.0], [80.4, 32.0], [80.5, 32.0], [80.6, 32.0], [80.7, 32.0], [80.8, 33.0], [80.9, 33.0], [81.0, 33.0], [81.1, 33.0], [81.2, 33.0], [81.3, 34.0], [81.4, 34.0], [81.5, 34.0], [81.6, 34.0], [81.7, 35.0], [81.8, 35.0], [81.9, 36.0], [82.0, 36.0], [82.1, 36.0], [82.2, 36.0], [82.3, 36.0], [82.4, 37.0], [82.5, 37.0], [82.6, 37.0], [82.7, 37.0], [82.8, 38.0], [82.9, 39.0], [83.0, 40.0], [83.1, 40.0], [83.2, 40.0], [83.3, 41.0], [83.4, 42.0], [83.5, 43.0], [83.6, 44.0], [83.7, 44.0], [83.8, 45.0], [83.9, 45.0], [84.0, 46.0], [84.1, 47.0], [84.2, 48.0], [84.3, 48.0], [84.4, 49.0], [84.5, 50.0], [84.6, 51.0], [84.7, 52.0], [84.8, 53.0], [84.9, 54.0], [85.0, 54.0], [85.1, 59.0], [85.2, 60.0], [85.3, 62.0], [85.4, 62.0], [85.5, 65.0], [85.6, 67.0], [85.7, 71.0], [85.8, 72.0], [85.9, 74.0], [86.0, 76.0], [86.1, 77.0], [86.2, 78.0], [86.3, 81.0], [86.4, 82.0], [86.5, 83.0], [86.6, 84.0], [86.7, 85.0], [86.8, 86.0], [86.9, 87.0], [87.0, 87.0], [87.1, 87.0], [87.2, 88.0], [87.3, 89.0], [87.4, 89.0], [87.5, 91.0], [87.6, 92.0], [87.7, 92.0], [87.8, 93.0], [87.9, 93.0], [88.0, 94.0], [88.1, 94.0], [88.2, 95.0], [88.3, 97.0], [88.4, 98.0], [88.5, 98.0], [88.6, 99.0], [88.7, 99.0], [88.8, 101.0], [88.9, 102.0], [89.0, 104.0], [89.1, 105.0], [89.2, 105.0], [89.3, 108.0], [89.4, 109.0], [89.5, 110.0], [89.6, 111.0], [89.7, 111.0], [89.8, 112.0], [89.9, 114.0], [90.0, 115.0], [90.1, 115.0], [90.2, 116.0], [90.3, 117.0], [90.4, 118.0], [90.5, 119.0], [90.6, 120.0], [90.7, 122.0], [90.8, 127.0], [90.9, 127.0], [91.0, 128.0], [91.1, 129.0], [91.2, 130.0], [91.3, 130.0], [91.4, 135.0], [91.5, 136.0], [91.6, 137.0], [91.7, 138.0], [91.8, 139.0], [91.9, 142.0], [92.0, 145.0], [92.1, 145.0], [92.2, 146.0], [92.3, 147.0], [92.4, 148.0], [92.5, 149.0], [92.6, 149.0], [92.7, 150.0], [92.8, 151.0], [92.9, 153.0], [93.0, 154.0], [93.1, 156.0], [93.2, 157.0], [93.3, 159.0], [93.4, 164.0], [93.5, 166.0], [93.6, 170.0], [93.7, 171.0], [93.8, 174.0], [93.9, 177.0], [94.0, 180.0], [94.1, 182.0], [94.2, 185.0], [94.3, 187.0], [94.4, 187.0], [94.5, 191.0], [94.6, 192.0], [94.7, 195.0], [94.8, 195.0], [94.9, 196.0], [95.0, 197.0], [95.1, 198.0], [95.2, 201.0], [95.3, 202.0], [95.4, 208.0], [95.5, 211.0], [95.6, 216.0], [95.7, 219.0], [95.8, 220.0], [95.9, 221.0], [96.0, 222.0], [96.1, 224.0], [96.2, 231.0], [96.3, 232.0], [96.4, 233.0], [96.5, 234.0], [96.6, 235.0], [96.7, 238.0], [96.8, 240.0], [96.9, 241.0], [97.0, 242.0], [97.1, 244.0], [97.2, 246.0], [97.3, 248.0], [97.4, 249.0], [97.5, 252.0], [97.6, 257.0], [97.7, 259.0], [97.8, 261.0], [97.9, 261.0], [98.0, 263.0], [98.1, 268.0], [98.2, 271.0], [98.3, 271.0], [98.4, 272.0], [98.5, 272.0], [98.6, 273.0], [98.7, 275.0], [98.8, 277.0], [98.9, 282.0], [99.0, 282.0], [99.1, 287.0], [99.2, 289.0], [99.3, 296.0], [99.4, 298.0], [99.5, 303.0], [99.6, 318.0], [99.7, 385.0], [99.8, 395.0], [99.9, 405.0], [100.0, 407.0]], "isOverall": false, "label": "gateway_cl/helloauth-1", "isController": false}, {"data": [[0.0, 30.0], [0.1, 84.0], [0.2, 116.0], [0.3, 166.0], [0.4, 215.0], [0.5, 240.0], [0.6, 245.0], [0.7, 262.0], [0.8, 272.0], [0.9, 287.0], [1.0, 322.0], [1.1, 324.0], [1.2, 342.0], [1.3, 357.0], [1.4, 361.0], [1.5, 368.0], [1.6, 368.0], [1.7, 372.0], [1.8, 381.0], [1.9, 384.0], [2.0, 389.0], [2.1, 390.0], [2.2, 395.0], [2.3, 398.0], [2.4, 400.0], [2.5, 409.0], [2.6, 418.0], [2.7, 420.0], [2.8, 425.0], [2.9, 428.0], [3.0, 439.0], [3.1, 441.0], [3.2, 442.0], [3.3, 446.0], [3.4, 447.0], [3.5, 450.0], [3.6, 455.0], [3.7, 457.0], [3.8, 462.0], [3.9, 463.0], [4.0, 466.0], [4.1, 468.0], [4.2, 470.0], [4.3, 473.0], [4.4, 477.0], [4.5, 478.0], [4.6, 481.0], [4.7, 483.0], [4.8, 483.0], [4.9, 485.0], [5.0, 489.0], [5.1, 492.0], [5.2, 495.0], [5.3, 496.0], [5.4, 498.0], [5.5, 499.0], [5.6, 501.0], [5.7, 503.0], [5.8, 503.0], [5.9, 504.0], [6.0, 507.0], [6.1, 508.0], [6.2, 513.0], [6.3, 515.0], [6.4, 515.0], [6.5, 515.0], [6.6, 516.0], [6.7, 518.0], [6.8, 518.0], [6.9, 519.0], [7.0, 520.0], [7.1, 523.0], [7.2, 525.0], [7.3, 527.0], [7.4, 528.0], [7.5, 528.0], [7.6, 529.0], [7.7, 529.0], [7.8, 532.0], [7.9, 534.0], [8.0, 536.0], [8.1, 538.0], [8.2, 540.0], [8.3, 540.0], [8.4, 542.0], [8.5, 543.0], [8.6, 544.0], [8.7, 546.0], [8.8, 547.0], [8.9, 550.0], [9.0, 550.0], [9.1, 552.0], [9.2, 554.0], [9.3, 558.0], [9.4, 559.0], [9.5, 561.0], [9.6, 566.0], [9.7, 567.0], [9.8, 571.0], [9.9, 572.0], [10.0, 577.0], [10.1, 578.0], [10.2, 582.0], [10.3, 582.0], [10.4, 583.0], [10.5, 586.0], [10.6, 591.0], [10.7, 591.0], [10.8, 594.0], [10.9, 597.0], [11.0, 600.0], [11.1, 600.0], [11.2, 601.0], [11.3, 602.0], [11.4, 604.0], [11.5, 605.0], [11.6, 607.0], [11.7, 607.0], [11.8, 610.0], [11.9, 611.0], [12.0, 612.0], [12.1, 613.0], [12.2, 614.0], [12.3, 616.0], [12.4, 618.0], [12.5, 620.0], [12.6, 622.0], [12.7, 622.0], [12.8, 625.0], [12.9, 626.0], [13.0, 630.0], [13.1, 631.0], [13.2, 631.0], [13.3, 637.0], [13.4, 639.0], [13.5, 642.0], [13.6, 644.0], [13.7, 645.0], [13.8, 648.0], [13.9, 650.0], [14.0, 654.0], [14.1, 655.0], [14.2, 658.0], [14.3, 658.0], [14.4, 663.0], [14.5, 665.0], [14.6, 667.0], [14.7, 669.0], [14.8, 669.0], [14.9, 670.0], [15.0, 672.0], [15.1, 674.0], [15.2, 676.0], [15.3, 677.0], [15.4, 677.0], [15.5, 681.0], [15.6, 683.0], [15.7, 684.0], [15.8, 684.0], [15.9, 688.0], [16.0, 688.0], [16.1, 690.0], [16.2, 690.0], [16.3, 695.0], [16.4, 695.0], [16.5, 697.0], [16.6, 697.0], [16.7, 701.0], [16.8, 703.0], [16.9, 705.0], [17.0, 705.0], [17.1, 705.0], [17.2, 708.0], [17.3, 711.0], [17.4, 712.0], [17.5, 715.0], [17.6, 715.0], [17.7, 719.0], [17.8, 720.0], [17.9, 720.0], [18.0, 724.0], [18.1, 725.0], [18.2, 730.0], [18.3, 732.0], [18.4, 733.0], [18.5, 733.0], [18.6, 734.0], [18.7, 735.0], [18.8, 738.0], [18.9, 740.0], [19.0, 742.0], [19.1, 743.0], [19.2, 744.0], [19.3, 747.0], [19.4, 748.0], [19.5, 750.0], [19.6, 755.0], [19.7, 756.0], [19.8, 762.0], [19.9, 763.0], [20.0, 773.0], [20.1, 773.0], [20.2, 775.0], [20.3, 778.0], [20.4, 784.0], [20.5, 785.0], [20.6, 785.0], [20.7, 786.0], [20.8, 789.0], [20.9, 791.0], [21.0, 795.0], [21.1, 796.0], [21.2, 797.0], [21.3, 800.0], [21.4, 803.0], [21.5, 806.0], [21.6, 806.0], [21.7, 809.0], [21.8, 811.0], [21.9, 815.0], [22.0, 818.0], [22.1, 823.0], [22.2, 824.0], [22.3, 826.0], [22.4, 827.0], [22.5, 827.0], [22.6, 831.0], [22.7, 833.0], [22.8, 839.0], [22.9, 842.0], [23.0, 844.0], [23.1, 845.0], [23.2, 846.0], [23.3, 846.0], [23.4, 852.0], [23.5, 853.0], [23.6, 859.0], [23.7, 860.0], [23.8, 862.0], [23.9, 863.0], [24.0, 869.0], [24.1, 874.0], [24.2, 875.0], [24.3, 875.0], [24.4, 876.0], [24.5, 878.0], [24.6, 882.0], [24.7, 884.0], [24.8, 885.0], [24.9, 889.0], [25.0, 895.0], [25.1, 902.0], [25.2, 903.0], [25.3, 904.0], [25.4, 907.0], [25.5, 913.0], [25.6, 915.0], [25.7, 919.0], [25.8, 919.0], [25.9, 919.0], [26.0, 920.0], [26.1, 922.0], [26.2, 924.0], [26.3, 932.0], [26.4, 933.0], [26.5, 935.0], [26.6, 936.0], [26.7, 939.0], [26.8, 942.0], [26.9, 943.0], [27.0, 943.0], [27.1, 948.0], [27.2, 949.0], [27.3, 953.0], [27.4, 955.0], [27.5, 960.0], [27.6, 965.0], [27.7, 968.0], [27.8, 970.0], [27.9, 976.0], [28.0, 979.0], [28.1, 986.0], [28.2, 987.0], [28.3, 988.0], [28.4, 990.0], [28.5, 992.0], [28.6, 995.0], [28.7, 1001.0], [28.8, 1005.0], [28.9, 1008.0], [29.0, 1014.0], [29.1, 1019.0], [29.2, 1022.0], [29.3, 1023.0], [29.4, 1028.0], [29.5, 1029.0], [29.6, 1031.0], [29.7, 1033.0], [29.8, 1038.0], [29.9, 1038.0], [30.0, 1039.0], [30.1, 1039.0], [30.2, 1042.0], [30.3, 1042.0], [30.4, 1043.0], [30.5, 1044.0], [30.6, 1044.0], [30.7, 1047.0], [30.8, 1052.0], [30.9, 1054.0], [31.0, 1056.0], [31.1, 1057.0], [31.2, 1060.0], [31.3, 1067.0], [31.4, 1070.0], [31.5, 1072.0], [31.6, 1072.0], [31.7, 1072.0], [31.8, 1074.0], [31.9, 1079.0], [32.0, 1085.0], [32.1, 1086.0], [32.2, 1088.0], [32.3, 1092.0], [32.4, 1095.0], [32.5, 1098.0], [32.6, 1101.0], [32.7, 1102.0], [32.8, 1104.0], [32.9, 1106.0], [33.0, 1107.0], [33.1, 1108.0], [33.2, 1108.0], [33.3, 1110.0], [33.4, 1111.0], [33.5, 1113.0], [33.6, 1115.0], [33.7, 1117.0], [33.8, 1118.0], [33.9, 1119.0], [34.0, 1123.0], [34.1, 1124.0], [34.2, 1128.0], [34.3, 1132.0], [34.4, 1133.0], [34.5, 1135.0], [34.6, 1139.0], [34.7, 1142.0], [34.8, 1145.0], [34.9, 1146.0], [35.0, 1147.0], [35.1, 1151.0], [35.2, 1153.0], [35.3, 1155.0], [35.4, 1159.0], [35.5, 1160.0], [35.6, 1161.0], [35.7, 1162.0], [35.8, 1165.0], [35.9, 1166.0], [36.0, 1171.0], [36.1, 1172.0], [36.2, 1176.0], [36.3, 1178.0], [36.4, 1178.0], [36.5, 1178.0], [36.6, 1180.0], [36.7, 1181.0], [36.8, 1183.0], [36.9, 1185.0], [37.0, 1186.0], [37.1, 1187.0], [37.2, 1189.0], [37.3, 1190.0], [37.4, 1191.0], [37.5, 1194.0], [37.6, 1199.0], [37.7, 1203.0], [37.8, 1204.0], [37.9, 1204.0], [38.0, 1209.0], [38.1, 1211.0], [38.2, 1213.0], [38.3, 1214.0], [38.4, 1219.0], [38.5, 1220.0], [38.6, 1221.0], [38.7, 1222.0], [38.8, 1223.0], [38.9, 1225.0], [39.0, 1225.0], [39.1, 1228.0], [39.2, 1229.0], [39.3, 1230.0], [39.4, 1231.0], [39.5, 1231.0], [39.6, 1236.0], [39.7, 1237.0], [39.8, 1240.0], [39.9, 1247.0], [40.0, 1247.0], [40.1, 1249.0], [40.2, 1254.0], [40.3, 1255.0], [40.4, 1259.0], [40.5, 1261.0], [40.6, 1262.0], [40.7, 1266.0], [40.8, 1268.0], [40.9, 1270.0], [41.0, 1272.0], [41.1, 1274.0], [41.2, 1275.0], [41.3, 1276.0], [41.4, 1278.0], [41.5, 1279.0], [41.6, 1279.0], [41.7, 1282.0], [41.8, 1287.0], [41.9, 1290.0], [42.0, 1292.0], [42.1, 1294.0], [42.2, 1295.0], [42.3, 1296.0], [42.4, 1302.0], [42.5, 1303.0], [42.6, 1304.0], [42.7, 1306.0], [42.8, 1308.0], [42.9, 1309.0], [43.0, 1313.0], [43.1, 1316.0], [43.2, 1316.0], [43.3, 1319.0], [43.4, 1322.0], [43.5, 1325.0], [43.6, 1326.0], [43.7, 1327.0], [43.8, 1331.0], [43.9, 1334.0], [44.0, 1335.0], [44.1, 1336.0], [44.2, 1338.0], [44.3, 1338.0], [44.4, 1339.0], [44.5, 1340.0], [44.6, 1340.0], [44.7, 1341.0], [44.8, 1341.0], [44.9, 1345.0], [45.0, 1347.0], [45.1, 1348.0], [45.2, 1349.0], [45.3, 1349.0], [45.4, 1351.0], [45.5, 1352.0], [45.6, 1354.0], [45.7, 1354.0], [45.8, 1355.0], [45.9, 1356.0], [46.0, 1356.0], [46.1, 1358.0], [46.2, 1361.0], [46.3, 1364.0], [46.4, 1365.0], [46.5, 1367.0], [46.6, 1371.0], [46.7, 1372.0], [46.8, 1375.0], [46.9, 1375.0], [47.0, 1377.0], [47.1, 1378.0], [47.2, 1385.0], [47.3, 1387.0], [47.4, 1389.0], [47.5, 1392.0], [47.6, 1393.0], [47.7, 1399.0], [47.8, 1401.0], [47.9, 1401.0], [48.0, 1402.0], [48.1, 1405.0], [48.2, 1405.0], [48.3, 1407.0], [48.4, 1410.0], [48.5, 1413.0], [48.6, 1417.0], [48.7, 1418.0], [48.8, 1419.0], [48.9, 1420.0], [49.0, 1420.0], [49.1, 1423.0], [49.2, 1424.0], [49.3, 1426.0], [49.4, 1432.0], [49.5, 1432.0], [49.6, 1435.0], [49.7, 1440.0], [49.8, 1442.0], [49.9, 1444.0], [50.0, 1448.0], [50.1, 1453.0], [50.2, 1456.0], [50.3, 1458.0], [50.4, 1459.0], [50.5, 1461.0], [50.6, 1462.0], [50.7, 1465.0], [50.8, 1469.0], [50.9, 1472.0], [51.0, 1474.0], [51.1, 1476.0], [51.2, 1479.0], [51.3, 1482.0], [51.4, 1483.0], [51.5, 1489.0], [51.6, 1489.0], [51.7, 1494.0], [51.8, 1502.0], [51.9, 1502.0], [52.0, 1507.0], [52.1, 1509.0], [52.2, 1510.0], [52.3, 1516.0], [52.4, 1517.0], [52.5, 1518.0], [52.6, 1522.0], [52.7, 1522.0], [52.8, 1524.0], [52.9, 1528.0], [53.0, 1532.0], [53.1, 1534.0], [53.2, 1534.0], [53.3, 1536.0], [53.4, 1539.0], [53.5, 1543.0], [53.6, 1549.0], [53.7, 1550.0], [53.8, 1551.0], [53.9, 1555.0], [54.0, 1556.0], [54.1, 1558.0], [54.2, 1559.0], [54.3, 1559.0], [54.4, 1560.0], [54.5, 1561.0], [54.6, 1561.0], [54.7, 1562.0], [54.8, 1563.0], [54.9, 1564.0], [55.0, 1569.0], [55.1, 1570.0], [55.2, 1571.0], [55.3, 1571.0], [55.4, 1572.0], [55.5, 1575.0], [55.6, 1581.0], [55.7, 1583.0], [55.8, 1586.0], [55.9, 1588.0], [56.0, 1592.0], [56.1, 1595.0], [56.2, 1597.0], [56.3, 1602.0], [56.4, 1603.0], [56.5, 1606.0], [56.6, 1606.0], [56.7, 1610.0], [56.8, 1615.0], [56.9, 1616.0], [57.0, 1617.0], [57.1, 1617.0], [57.2, 1618.0], [57.3, 1619.0], [57.4, 1619.0], [57.5, 1621.0], [57.6, 1625.0], [57.7, 1633.0], [57.8, 1636.0], [57.9, 1637.0], [58.0, 1640.0], [58.1, 1641.0], [58.2, 1643.0], [58.3, 1645.0], [58.4, 1647.0], [58.5, 1647.0], [58.6, 1648.0], [58.7, 1649.0], [58.8, 1651.0], [58.9, 1657.0], [59.0, 1657.0], [59.1, 1664.0], [59.2, 1670.0], [59.3, 1676.0], [59.4, 1678.0], [59.5, 1678.0], [59.6, 1683.0], [59.7, 1687.0], [59.8, 1689.0], [59.9, 1692.0], [60.0, 1693.0], [60.1, 1693.0], [60.2, 1696.0], [60.3, 1697.0], [60.4, 1700.0], [60.5, 1707.0], [60.6, 1709.0], [60.7, 1710.0], [60.8, 1710.0], [60.9, 1712.0], [61.0, 1713.0], [61.1, 1713.0], [61.2, 1715.0], [61.3, 1717.0], [61.4, 1720.0], [61.5, 1721.0], [61.6, 1723.0], [61.7, 1725.0], [61.8, 1726.0], [61.9, 1727.0], [62.0, 1734.0], [62.1, 1736.0], [62.2, 1737.0], [62.3, 1739.0], [62.4, 1742.0], [62.5, 1748.0], [62.6, 1749.0], [62.7, 1750.0], [62.8, 1753.0], [62.9, 1754.0], [63.0, 1756.0], [63.1, 1756.0], [63.2, 1761.0], [63.3, 1762.0], [63.4, 1767.0], [63.5, 1768.0], [63.6, 1772.0], [63.7, 1776.0], [63.8, 1776.0], [63.9, 1780.0], [64.0, 1781.0], [64.1, 1786.0], [64.2, 1791.0], [64.3, 1799.0], [64.4, 1800.0], [64.5, 1807.0], [64.6, 1811.0], [64.7, 1813.0], [64.8, 1813.0], [64.9, 1817.0], [65.0, 1818.0], [65.1, 1821.0], [65.2, 1825.0], [65.3, 1828.0], [65.4, 1832.0], [65.5, 1836.0], [65.6, 1837.0], [65.7, 1839.0], [65.8, 1840.0], [65.9, 1841.0], [66.0, 1845.0], [66.1, 1849.0], [66.2, 1850.0], [66.3, 1854.0], [66.4, 1854.0], [66.5, 1856.0], [66.6, 1857.0], [66.7, 1862.0], [66.8, 1866.0], [66.9, 1868.0], [67.0, 1870.0], [67.1, 1878.0], [67.2, 1878.0], [67.3, 1878.0], [67.4, 1881.0], [67.5, 1882.0], [67.6, 1882.0], [67.7, 1883.0], [67.8, 1887.0], [67.9, 1887.0], [68.0, 1891.0], [68.1, 1897.0], [68.2, 1899.0], [68.3, 1900.0], [68.4, 1904.0], [68.5, 1904.0], [68.6, 1905.0], [68.7, 1905.0], [68.8, 1907.0], [68.9, 1907.0], [69.0, 1907.0], [69.1, 1911.0], [69.2, 1915.0], [69.3, 1916.0], [69.4, 1917.0], [69.5, 1917.0], [69.6, 1920.0], [69.7, 1922.0], [69.8, 1924.0], [69.9, 1928.0], [70.0, 1930.0], [70.1, 1933.0], [70.2, 1933.0], [70.3, 1935.0], [70.4, 1936.0], [70.5, 1937.0], [70.6, 1938.0], [70.7, 1942.0], [70.8, 1943.0], [70.9, 1954.0], [71.0, 1955.0], [71.1, 1956.0], [71.2, 1961.0], [71.3, 1963.0], [71.4, 1965.0], [71.5, 1974.0], [71.6, 1975.0], [71.7, 1978.0], [71.8, 1979.0], [71.9, 1980.0], [72.0, 1983.0], [72.1, 1985.0], [72.2, 1985.0], [72.3, 1991.0], [72.4, 1995.0], [72.5, 1998.0], [72.6, 2002.0], [72.7, 2002.0], [72.8, 2004.0], [72.9, 2010.0], [73.0, 2014.0], [73.1, 2016.0], [73.2, 2016.0], [73.3, 2024.0], [73.4, 2032.0], [73.5, 2035.0], [73.6, 2040.0], [73.7, 2043.0], [73.8, 2045.0], [73.9, 2050.0], [74.0, 2055.0], [74.1, 2058.0], [74.2, 2062.0], [74.3, 2062.0], [74.4, 2073.0], [74.5, 2077.0], [74.6, 2080.0], [74.7, 2084.0], [74.8, 2086.0], [74.9, 2088.0], [75.0, 2089.0], [75.1, 2093.0], [75.2, 2095.0], [75.3, 2097.0], [75.4, 2099.0], [75.5, 2105.0], [75.6, 2108.0], [75.7, 2119.0], [75.8, 2122.0], [75.9, 2125.0], [76.0, 2125.0], [76.1, 2130.0], [76.2, 2133.0], [76.3, 2136.0], [76.4, 2143.0], [76.5, 2147.0], [76.6, 2149.0], [76.7, 2156.0], [76.8, 2160.0], [76.9, 2161.0], [77.0, 2164.0], [77.1, 2167.0], [77.2, 2182.0], [77.3, 2192.0], [77.4, 2193.0], [77.5, 2196.0], [77.6, 2197.0], [77.7, 2199.0], [77.8, 2201.0], [77.9, 2201.0], [78.0, 2204.0], [78.1, 2207.0], [78.2, 2209.0], [78.3, 2210.0], [78.4, 2210.0], [78.5, 2210.0], [78.6, 2212.0], [78.7, 2212.0], [78.8, 2222.0], [78.9, 2222.0], [79.0, 2227.0], [79.1, 2236.0], [79.2, 2236.0], [79.3, 2237.0], [79.4, 2237.0], [79.5, 2238.0], [79.6, 2241.0], [79.7, 2242.0], [79.8, 2245.0], [79.9, 2246.0], [80.0, 2249.0], [80.1, 2250.0], [80.2, 2252.0], [80.3, 2255.0], [80.4, 2259.0], [80.5, 2260.0], [80.6, 2261.0], [80.7, 2261.0], [80.8, 2263.0], [80.9, 2264.0], [81.0, 2265.0], [81.1, 2266.0], [81.2, 2266.0], [81.3, 2269.0], [81.4, 2274.0], [81.5, 2275.0], [81.6, 2277.0], [81.7, 2281.0], [81.8, 2283.0], [81.9, 2285.0], [82.0, 2286.0], [82.1, 2291.0], [82.2, 2291.0], [82.3, 2298.0], [82.4, 2298.0], [82.5, 2302.0], [82.6, 2303.0], [82.7, 2305.0], [82.8, 2314.0], [82.9, 2315.0], [83.0, 2320.0], [83.1, 2321.0], [83.2, 2323.0], [83.3, 2329.0], [83.4, 2331.0], [83.5, 2344.0], [83.6, 2348.0], [83.7, 2351.0], [83.8, 2353.0], [83.9, 2360.0], [84.0, 2368.0], [84.1, 2371.0], [84.2, 2371.0], [84.3, 2372.0], [84.4, 2375.0], [84.5, 2377.0], [84.6, 2379.0], [84.7, 2381.0], [84.8, 2382.0], [84.9, 2384.0], [85.0, 2385.0], [85.1, 2392.0], [85.2, 2405.0], [85.3, 2409.0], [85.4, 2413.0], [85.5, 2415.0], [85.6, 2415.0], [85.7, 2422.0], [85.8, 2423.0], [85.9, 2426.0], [86.0, 2431.0], [86.1, 2438.0], [86.2, 2451.0], [86.3, 2458.0], [86.4, 2461.0], [86.5, 2464.0], [86.6, 2466.0], [86.7, 2470.0], [86.8, 2480.0], [86.9, 2481.0], [87.0, 2485.0], [87.1, 2487.0], [87.2, 2488.0], [87.3, 2490.0], [87.4, 2490.0], [87.5, 2493.0], [87.6, 2511.0], [87.7, 2527.0], [87.8, 2536.0], [87.9, 2538.0], [88.0, 2541.0], [88.1, 2545.0], [88.2, 2562.0], [88.3, 2569.0], [88.4, 2572.0], [88.5, 2574.0], [88.6, 2588.0], [88.7, 2595.0], [88.8, 2618.0], [88.9, 2628.0], [89.0, 2631.0], [89.1, 2640.0], [89.2, 2650.0], [89.3, 2656.0], [89.4, 2667.0], [89.5, 2672.0], [89.6, 2673.0], [89.7, 2684.0], [89.8, 2695.0], [89.9, 2701.0], [90.0, 2701.0], [90.1, 2703.0], [90.2, 2726.0], [90.3, 2731.0], [90.4, 2745.0], [90.5, 2759.0], [90.6, 2767.0], [90.7, 2781.0], [90.8, 2786.0], [90.9, 2790.0], [91.0, 2793.0], [91.1, 2794.0], [91.2, 2806.0], [91.3, 2818.0], [91.4, 2830.0], [91.5, 2838.0], [91.6, 2839.0], [91.7, 2842.0], [91.8, 2858.0], [91.9, 2862.0], [92.0, 2868.0], [92.1, 2878.0], [92.2, 2883.0], [92.3, 2890.0], [92.4, 2894.0], [92.5, 2897.0], [92.6, 2898.0], [92.7, 2900.0], [92.8, 2903.0], [92.9, 2906.0], [93.0, 2913.0], [93.1, 2928.0], [93.2, 2934.0], [93.3, 2941.0], [93.4, 2953.0], [93.5, 2962.0], [93.6, 2971.0], [93.7, 2978.0], [93.8, 2983.0], [93.9, 2985.0], [94.0, 2995.0], [94.1, 2998.0], [94.2, 3008.0], [94.3, 3008.0], [94.4, 3021.0], [94.5, 3041.0], [94.6, 3045.0], [94.7, 3052.0], [94.8, 3070.0], [94.9, 3074.0], [95.0, 3088.0], [95.1, 3094.0], [95.2, 3118.0], [95.3, 3124.0], [95.4, 3136.0], [95.5, 3168.0], [95.6, 3190.0], [95.7, 3205.0], [95.8, 3211.0], [95.9, 3240.0], [96.0, 3252.0], [96.1, 3253.0], [96.2, 3257.0], [96.3, 3262.0], [96.4, 3264.0], [96.5, 3270.0], [96.6, 3325.0], [96.7, 3328.0], [96.8, 3343.0], [96.9, 3349.0], [97.0, 3379.0], [97.1, 3395.0], [97.2, 3418.0], [97.3, 3423.0], [97.4, 3449.0], [97.5, 3462.0], [97.6, 3478.0], [97.7, 3486.0], [97.8, 3489.0], [97.9, 3491.0], [98.0, 3544.0], [98.1, 3582.0], [98.2, 3594.0], [98.3, 3636.0], [98.4, 3672.0], [98.5, 3673.0], [98.6, 3773.0], [98.7, 3814.0], [98.8, 3850.0], [98.9, 3969.0], [99.0, 4009.0], [99.1, 4029.0], [99.2, 4182.0], [99.3, 4273.0], [99.4, 4283.0], [99.5, 4334.0], [99.6, 4438.0], [99.7, 4461.0], [99.8, 4680.0], [99.9, 4913.0], [100.0, 5318.0]], "isOverall": false, "label": "gateway_cl/helloauth", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1606.0, "series": [{"data": [[0.0, 13.0], [600.0, 101.0], [700.0, 91.0], [800.0, 77.0], [900.0, 68.0], [1000.0, 75.0], [1100.0, 115.0], [1200.0, 84.0], [1300.0, 103.0], [1400.0, 96.0], [1500.0, 98.0], [100.0, 20.0], [1600.0, 85.0], [1700.0, 74.0], [1800.0, 52.0], [1900.0, 54.0], [2000.0, 48.0], [2100.0, 24.0], [2300.0, 28.0], [2200.0, 39.0], [2400.0, 22.0], [2500.0, 28.0], [2600.0, 20.0], [2700.0, 18.0], [2800.0, 24.0], [2900.0, 22.0], [3000.0, 18.0], [3100.0, 8.0], [200.0, 16.0], [3200.0, 10.0], [3300.0, 9.0], [3400.0, 10.0], [3500.0, 7.0], [3700.0, 7.0], [3600.0, 4.0], [3800.0, 1.0], [3900.0, 4.0], [4000.0, 1.0], [4100.0, 1.0], [4200.0, 2.0], [4300.0, 1.0], [4400.0, 2.0], [300.0, 45.0], [400.0, 71.0], [500.0, 114.0]], "isOverall": false, "label": "gateway_cl/helloauth-2", "isController": false}, {"data": [[0.0, 1473.0], [300.0, 22.0], [600.0, 121.0], [700.0, 42.0], [200.0, 23.0], [100.0, 30.0], [400.0, 22.0], [800.0, 16.0], [500.0, 61.0]], "isOverall": false, "label": "gateway_cl/helloauth-0", "isController": false}, {"data": [[0.0, 1606.0], [300.0, 7.0], [200.0, 77.0], [100.0, 117.0], [400.0, 3.0]], "isOverall": false, "label": "gateway_cl/helloauth-1", "isController": false}, {"data": [[0.0, 3.0], [600.0, 102.0], [700.0, 84.0], [800.0, 69.0], [900.0, 64.0], [1000.0, 71.0], [1100.0, 92.0], [1200.0, 86.0], [1300.0, 98.0], [1400.0, 72.0], [1500.0, 82.0], [1600.0, 73.0], [100.0, 3.0], [1700.0, 73.0], [1800.0, 70.0], [1900.0, 78.0], [2000.0, 52.0], [2100.0, 42.0], [2200.0, 86.0], [2300.0, 49.0], [2400.0, 42.0], [2500.0, 22.0], [2600.0, 21.0], [2700.0, 22.0], [2800.0, 28.0], [2900.0, 27.0], [3000.0, 19.0], [3100.0, 9.0], [200.0, 12.0], [3200.0, 16.0], [3300.0, 10.0], [3400.0, 14.0], [3500.0, 6.0], [3600.0, 6.0], [3700.0, 1.0], [3800.0, 5.0], [3900.0, 1.0], [4000.0, 3.0], [4100.0, 2.0], [4200.0, 4.0], [4300.0, 2.0], [4400.0, 3.0], [4600.0, 3.0], [300.0, 24.0], [4900.0, 1.0], [5300.0, 1.0], [400.0, 58.0], [500.0, 99.0]], "isOverall": false, "label": "gateway_cl/helloauth", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 5300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1594.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3646.0, "series": [{"data": [[0.0, 3646.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2000.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1594.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 199.4780426599752, "minX": 1.68578958E12, "maxY": 296.6957137796673, "series": [{"data": [[1.68578964E12, 199.4780426599752], [1.68578958E12, 296.6957137796673]], "isOverall": false, "label": "gateway_cl/helloauth", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68578964E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 2.0, "maxY": 3636.0, "series": [{"data": [[2.0, 1431.5], [3.0, 1411.0], [4.0, 1205.0], [5.0, 1339.0], [6.0, 1114.0], [7.0, 1195.0], [8.0, 1203.0], [10.0, 2123.5], [12.0, 1196.5], [13.0, 2840.0], [14.0, 2761.0], [16.0, 1588.5], [20.0, 2136.0], [21.0, 1550.0], [22.0, 1138.0], [23.0, 1128.0], [26.0, 1081.0], [28.0, 1002.5], [29.0, 1705.0], [30.0, 1062.0], [32.0, 1213.5], [35.0, 1294.0], [34.0, 1410.0], [36.0, 1111.0], [41.0, 1516.4], [42.0, 1243.0], [46.0, 1930.25], [48.0, 1658.5], [51.0, 1390.0], [50.0, 1421.0], [53.0, 1208.0], [52.0, 2540.0], [55.0, 1356.5], [57.0, 2884.0], [56.0, 1835.0], [58.0, 1650.0], [62.0, 1959.0], [67.0, 1593.0], [66.0, 2499.75], [71.0, 2637.0], [70.0, 2924.0], [69.0, 2004.0], [68.0, 1679.0], [74.0, 2631.0], [73.0, 2909.0], [72.0, 902.0], [79.0, 1623.0], [83.0, 2815.0], [82.0, 839.0], [81.0, 1724.0], [80.0, 1261.0], [87.0, 1265.5], [85.0, 1031.5], [90.0, 913.0], [89.0, 832.0], [88.0, 3152.0], [95.0, 1531.0], [94.0, 739.0], [93.0, 1621.0], [92.0, 2191.0], [99.0, 1883.0], [98.0, 1600.0], [97.0, 1246.0], [103.0, 1517.0], [102.0, 874.0], [101.0, 1712.0], [107.0, 959.5], [105.0, 838.0], [104.0, 855.0], [111.0, 1477.0], [110.0, 1463.0], [109.0, 2548.0], [108.0, 2623.0], [115.0, 2646.0], [114.0, 2474.0], [113.0, 1048.5], [118.0, 2399.0], [117.0, 1180.0], [116.0, 1169.0], [123.0, 1750.8], [126.0, 1698.5], [124.0, 1367.0], [135.0, 1205.0], [133.0, 2107.0], [132.0, 1137.0], [131.0, 2300.0], [130.0, 1207.5], [128.0, 1222.0], [143.0, 1062.0], [142.0, 1751.0], [141.0, 1620.0], [140.0, 1565.0], [139.0, 1181.0], [138.0, 1952.0], [137.0, 2002.0], [136.0, 1137.0], [149.0, 1532.5], [145.0, 1817.0], [144.0, 1791.0], [158.0, 2400.0], [157.0, 1897.5], [155.0, 1945.0], [153.0, 1370.5], [152.0, 1505.0], [167.0, 524.0], [166.0, 2198.5], [164.0, 1052.0], [163.0, 2571.0], [161.0, 1580.0], [160.0, 2049.0], [175.0, 1412.0], [174.0, 918.0], [173.0, 1011.5], [171.0, 989.0], [170.0, 1033.0], [169.0, 944.0], [168.0, 1443.0], [182.0, 1411.0], [181.0, 1703.3333333333335], [191.0, 481.0], [190.0, 1680.5], [188.0, 2968.0], [187.0, 964.0], [186.0, 929.0], [185.0, 1691.0], [199.0, 565.0], [197.0, 527.0], [196.0, 1254.5], [194.0, 603.0], [193.0, 1406.0], [192.0, 587.0], [205.0, 1247.0], [204.0, 1225.0], [203.0, 2914.0], [202.0, 1259.0], [201.0, 1745.6666666666665], [215.0, 424.0], [214.0, 2244.0], [213.0, 464.0], [212.0, 2650.0], [211.0, 1147.0], [210.0, 1711.5], [208.0, 1042.6666666666667], [223.0, 582.0], [222.0, 1605.0], [221.0, 599.0], [220.0, 1156.0], [217.0, 3542.0], [216.0, 573.0], [231.0, 630.0], [230.0, 1536.0], [229.0, 935.0], [228.0, 1366.25], [224.0, 1556.0], [239.0, 421.5], [237.0, 371.0], [236.0, 393.0], [235.0, 383.0], [234.0, 376.0], [233.0, 1477.0], [232.0, 413.0], [246.0, 1757.0], [245.0, 401.0], [244.0, 447.0], [243.0, 2356.0], [242.0, 1687.0], [241.0, 535.0], [240.0, 452.0], [255.0, 1915.0], [254.0, 1810.0], [253.0, 2198.5], [251.0, 1682.0], [249.0, 909.3333333333334], [264.0, 2235.0], [270.0, 1264.0], [267.0, 342.0], [266.0, 3296.0], [265.0, 1837.0], [263.0, 3451.0], [262.0, 1643.5], [260.0, 1452.0], [259.0, 1350.0], [258.0, 3215.0], [257.0, 1678.0], [256.0, 1364.0], [286.0, 585.0], [287.0, 1167.0], [285.0, 1374.0], [284.0, 311.0], [283.0, 1228.0], [282.0, 1777.5], [280.0, 1906.0], [278.0, 3191.0], [272.0, 1564.0], [274.0, 1736.0], [273.0, 1437.0], [277.0, 1422.0], [276.0, 1777.5], [296.0, 486.0], [300.0, 1393.4208776595754], [299.0, 1191.6666666666667], [298.0, 936.6666666666666], [297.0, 537.0], [295.0, 490.0], [294.0, 1179.0], [293.0, 497.0], [292.0, 1902.3333333333333], [290.0, 1298.0], [289.0, 1493.0], [288.0, 1145.0]], "isOverall": false, "label": "gateway_cl/helloauth-2", "isController": false}, {"data": [[275.2917127071822, 1411.9546961325968]], "isOverall": false, "label": "gateway_cl/helloauth-2-Aggregated", "isController": false}, {"data": [[2.0, 7.0], [3.0, 4.0], [4.0, 26.0], [5.0, 7.0], [6.0, 8.0], [7.0, 43.0], [8.0, 44.0], [10.0, 34.0], [12.0, 11.0], [13.0, 22.0], [14.0, 24.0], [16.0, 15.5], [20.0, 15.75], [21.0, 23.0], [22.0, 59.0], [23.0, 85.0], [26.0, 34.333333333333336], [28.0, 16.0], [29.0, 6.0], [30.0, 25.0], [32.0, 13.0], [35.0, 7.0], [34.0, 37.0], [36.0, 42.0], [41.0, 30.4], [42.0, 4.0], [46.0, 24.5], [48.0, 12.0], [51.0, 14.0], [50.0, 29.5], [53.0, 8.0], [52.0, 30.0], [55.0, 23.0], [57.0, 10.0], [56.0, 19.0], [58.0, 8.0], [62.0, 12.5], [67.0, 8.0], [66.0, 25.75], [71.0, 44.0], [70.0, 21.0], [69.0, 17.0], [68.0, 13.0], [74.0, 50.0], [73.0, 22.0], [72.0, 11.0], [79.0, 25.0], [83.0, 14.0], [82.0, 6.0], [81.0, 26.0], [80.0, 31.0], [87.0, 35.0], [85.0, 9.0], [90.0, 23.0], [89.0, 14.0], [88.0, 9.0], [95.0, 22.0], [94.0, 6.0], [93.0, 23.0], [92.0, 9.0], [99.0, 19.0], [98.0, 15.0], [97.0, 12.5], [103.0, 16.0], [102.0, 52.0], [101.0, 19.5], [107.0, 13.5], [105.0, 26.0], [104.0, 73.0], [111.0, 9.0], [110.0, 5.0], [109.0, 25.0], [108.0, 7.0], [115.0, 6.0], [114.0, 64.0], [113.0, 39.5], [118.0, 16.0], [117.0, 20.0], [116.0, 10.0], [123.0, 17.0], [126.0, 5.5], [124.0, 9.0], [135.0, 17.0], [133.0, 14.0], [132.0, 21.0], [131.0, 16.0], [130.0, 12.0], [128.0, 14.0], [143.0, 21.0], [142.0, 25.0], [141.0, 8.0], [140.0, 15.0], [139.0, 12.0], [138.0, 9.0], [137.0, 11.0], [136.0, 17.0], [149.0, 20.0], [145.0, 8.0], [144.0, 17.0], [158.0, 27.0], [157.0, 18.5], [155.0, 32.0], [153.0, 10.75], [152.0, 31.0], [167.0, 6.0], [166.0, 22.5], [164.0, 20.0], [163.0, 14.0], [161.0, 7.0], [160.0, 18.0], [175.0, 47.0], [174.0, 10.0], [173.0, 25.5], [171.0, 15.0], [170.0, 10.0], [169.0, 10.0], [168.0, 25.0], [182.0, 25.0], [181.0, 25.0], [191.0, 9.0], [190.0, 10.5], [188.0, 8.0], [187.0, 10.0], [186.0, 10.0], [185.0, 23.0], [199.0, 86.0], [197.0, 9.0], [196.0, 16.0], [194.0, 41.0], [193.0, 14.0], [192.0, 38.0], [205.0, 18.0], [204.0, 24.0], [203.0, 11.0], [202.0, 6.0], [201.0, 15.666666666666666], [215.0, 31.0], [214.0, 5.0], [213.0, 28.0], [212.0, 16.0], [211.0, 18.0], [210.0, 15.5], [208.0, 15.0], [223.0, 9.0], [222.0, 9.0], [221.0, 8.0], [220.0, 25.666666666666664], [217.0, 78.0], [216.0, 8.0], [231.0, 22.0], [230.0, 10.0], [229.0, 6.0], [228.0, 17.0], [224.0, 7.0], [239.0, 33.5], [237.0, 49.0], [236.0, 33.0], [235.0, 66.0], [234.0, 79.0], [233.0, 7.0], [232.0, 43.0], [246.0, 8.0], [245.0, 33.0], [244.0, 15.0], [243.0, 18.0], [242.0, 7.0], [241.0, 6.0], [240.0, 15.0], [255.0, 37.0], [254.0, 19.0], [253.0, 11.5], [251.0, 6.5], [249.0, 16.666666666666668], [264.0, 23.0], [270.0, 12.666666666666666], [267.0, 20.0], [266.0, 14.0], [265.0, 10.0], [263.0, 23.0], [262.0, 10.0], [260.0, 5.0], [259.0, 17.0], [258.0, 10.0], [257.0, 6.0], [256.0, 16.0], [286.0, 13.0], [287.0, 15.0], [285.0, 15.0], [284.0, 6.0], [283.0, 16.0], [282.0, 14.0], [280.0, 10.0], [278.0, 10.0], [272.0, 4.0], [274.0, 11.0], [273.0, 22.5], [277.0, 5.0], [276.0, 15.0], [296.0, 19.5], [300.0, 140.04188829787216], [299.0, 10.333333333333334], [298.0, 23.666666666666668], [297.0, 20.0], [295.0, 19.0], [294.0, 20.0], [293.0, 12.0], [292.0, 20.666666666666668], [290.0, 7.0], [289.0, 7.0], [288.0, 12.0]], "isOverall": false, "label": "gateway_cl/helloauth-0", "isController": false}, {"data": [[275.2917127071822, 119.68121546961306]], "isOverall": false, "label": "gateway_cl/helloauth-0-Aggregated", "isController": false}, {"data": [[2.0, 6.0], [3.0, 2.0], [4.0, 16.0], [5.0, 3.0], [6.0, 6.0], [7.0, 21.0], [8.0, 12.0], [10.0, 13.0], [12.0, 7.5], [13.0, 6.0], [14.0, 8.0], [16.0, 5.5], [20.0, 7.75], [21.0, 2.0], [22.0, 24.0], [23.0, 11.0], [26.0, 16.333333333333332], [28.0, 7.5], [29.0, 2.0], [30.0, 22.0], [32.0, 14.0], [35.0, 2.0], [34.0, 12.5], [36.0, 26.0], [41.0, 10.0], [42.0, 1.0], [46.0, 10.0], [48.0, 14.0], [51.0, 6.0], [50.0, 29.5], [53.0, 3.0], [52.0, 4.0], [55.0, 10.0], [57.0, 3.0], [56.0, 8.0], [58.0, 5.0], [62.0, 6.25], [67.0, 2.0], [66.0, 18.75], [71.0, 19.0], [70.0, 10.0], [69.0, 18.0], [68.0, 15.0], [74.0, 22.0], [73.0, 9.0], [72.0, 9.0], [79.0, 10.8], [83.0, 13.0], [82.0, 18.0], [81.0, 26.0], [80.0, 3.0], [87.0, 5.5], [85.0, 12.5], [90.0, 13.0], [89.0, 7.0], [88.0, 3.0], [95.0, 6.0], [94.0, 3.0], [93.0, 9.0], [92.0, 13.0], [99.0, 3.0], [98.0, 2.0], [97.0, 5.5], [103.0, 7.0], [102.0, 15.0], [101.0, 5.0], [107.0, 6.5], [105.0, 13.0], [104.0, 21.0], [111.0, 4.0], [110.0, 3.0], [109.0, 15.0], [108.0, 5.0], [115.0, 4.0], [114.0, 24.0], [113.0, 9.0], [118.0, 8.0], [117.0, 9.0], [116.0, 11.0], [123.0, 10.4], [126.0, 4.5], [124.0, 2.0], [135.0, 8.5], [133.0, 4.0], [132.0, 10.0], [131.0, 2.0], [130.0, 5.5], [128.0, 7.0], [143.0, 9.0], [142.0, 5.0], [141.0, 5.0], [140.0, 1.0], [139.0, 2.0], [138.0, 2.0], [137.0, 1.0], [136.0, 6.0], [149.0, 11.0], [145.0, 3.0], [144.0, 10.0], [158.0, 10.0], [157.0, 6.0], [155.0, 25.0], [153.0, 5.75], [152.0, 12.0], [167.0, 2.0], [166.0, 21.0], [164.0, 8.5], [163.0, 6.0], [161.0, 4.0], [160.0, 14.5], [175.0, 13.0], [174.0, 5.0], [173.0, 14.5], [171.0, 10.0], [170.0, 8.0], [169.0, 6.0], [168.0, 15.0], [182.0, 28.0], [181.0, 12.5], [191.0, 6.0], [190.0, 4.5], [188.0, 21.0], [187.0, 13.0], [186.0, 4.0], [185.0, 24.0], [199.0, 18.0], [197.0, 3.0], [196.0, 7.0], [194.0, 23.0], [193.0, 5.0], [192.0, 15.0], [205.0, 6.0], [204.0, 28.0], [203.0, 9.0], [202.0, 35.0], [201.0, 5.666666666666667], [215.0, 7.0], [214.0, 1.0], [213.0, 11.0], [212.0, 6.0], [211.0, 6.0], [210.0, 4.5], [208.0, 11.333333333333334], [223.0, 3.0], [222.0, 2.0], [221.0, 2.0], [220.0, 6.333333333333333], [217.0, 16.0], [216.0, 2.0], [231.0, 2.0], [230.0, 2.0], [229.0, 7.0], [228.0, 10.25], [224.0, 5.0], [239.0, 9.0], [237.0, 21.0], [236.0, 26.0], [235.0, 14.0], [234.0, 13.0], [233.0, 5.0], [232.0, 25.0], [246.0, 2.0], [245.0, 11.0], [244.0, 4.0], [243.0, 5.0], [242.0, 2.0], [241.0, 2.0], [240.0, 11.0], [255.0, 2.0], [254.0, 7.0], [253.0, 3.0], [251.0, 2.5], [249.0, 6.0], [264.0, 11.0], [270.0, 7.666666666666666], [267.0, 27.0], [266.0, 14.0], [265.0, 2.0], [263.0, 4.0], [262.0, 5.0], [260.0, 2.0], [259.0, 10.0], [258.0, 3.0], [257.0, 3.0], [256.0, 5.0], [286.0, 4.0], [287.0, 12.0], [285.0, 4.0], [284.0, 5.0], [283.0, 11.0], [282.0, 3.0], [280.0, 3.5], [278.0, 4.0], [272.0, 1.0], [274.0, 3.0], [273.0, 8.0], [277.0, 4.0], [276.0, 7.0], [296.0, 9.0], [300.0, 39.18284574468088], [299.0, 6.0], [298.0, 9.333333333333334], [297.0, 2.0], [295.0, 14.0], [294.0, 12.0], [293.0, 9.0], [292.0, 4.666666666666667], [290.0, 10.5], [289.0, 16.0], [288.0, 3.0]], "isOverall": false, "label": "gateway_cl/helloauth-1", "isController": false}, {"data": [[275.2917127071822, 34.129834254143724]], "isOverall": false, "label": "gateway_cl/helloauth-1-Aggregated", "isController": false}, {"data": [[2.0, 1444.5], [3.0, 1417.0], [4.0, 1247.0], [5.0, 1349.0], [6.0, 1128.0], [7.0, 1259.0], [8.0, 1259.0], [10.0, 2170.5], [12.0, 1215.5], [13.0, 2868.0], [14.0, 2793.0], [16.0, 1609.5], [20.0, 2159.5], [21.0, 1575.0], [22.0, 1221.0], [23.0, 1224.0], [26.0, 1132.0], [28.0, 1026.0], [29.0, 1713.0], [30.0, 1109.0], [32.0, 1240.5], [35.0, 1303.0], [34.0, 1459.5], [36.0, 1179.0], [41.0, 1556.8], [42.0, 1249.0], [46.0, 1964.75], [48.0, 1684.5], [51.0, 1410.0], [50.0, 1480.5], [53.0, 1219.0], [52.0, 2574.0], [55.0, 1389.5], [57.0, 2898.0], [56.0, 1862.0], [58.0, 1664.0], [62.0, 1978.0], [67.0, 1603.0], [66.0, 2544.25], [71.0, 2701.0], [70.0, 2955.0], [69.0, 2039.0], [68.0, 1707.0], [74.0, 2703.0], [73.0, 2941.0], [72.0, 922.0], [79.0, 1658.8], [83.0, 2842.0], [82.0, 863.0], [81.0, 1776.0], [80.0, 1295.0], [87.0, 1306.0], [85.0, 1053.5], [90.0, 949.0], [89.0, 853.0], [88.0, 3164.0], [95.0, 1559.0], [94.0, 748.0], [93.0, 1653.0], [92.0, 2213.0], [99.0, 1905.0], [98.0, 1617.0], [97.0, 1264.5], [103.0, 1540.0], [102.0, 942.0], [101.0, 1736.5], [107.0, 979.5], [105.0, 877.0], [104.0, 949.0], [111.0, 1491.0], [110.0, 1471.0], [109.0, 2588.0], [108.0, 2635.0], [115.0, 2656.0], [114.0, 2562.0], [113.0, 1097.0], [118.0, 2423.0], [117.0, 1210.0], [116.0, 1190.0], [123.0, 1778.6], [126.0, 1708.5], [124.0, 1378.0], [135.0, 1230.5], [133.0, 2125.0], [132.0, 1168.0], [131.0, 2318.0], [130.0, 1225.5], [128.0, 1244.0], [143.0, 1093.0], [142.0, 1781.0], [141.0, 1633.0], [140.0, 1581.0], [139.0, 1195.0], [138.0, 1963.0], [137.0, 2014.0], [136.0, 1160.0], [149.0, 1563.5], [145.0, 1828.0], [144.0, 1818.0], [158.0, 2437.0], [157.0, 1922.5], [155.0, 2002.0], [153.0, 1387.25], [152.0, 1548.5], [167.0, 532.0], [166.0, 2242.0], [164.0, 1080.5], [163.0, 2592.0], [161.0, 1592.0], [160.0, 2081.5], [175.0, 1472.0], [174.0, 933.0], [173.0, 1052.0], [171.0, 1014.0], [170.0, 1051.0], [169.0, 960.0], [168.0, 1483.0], [182.0, 1464.0], [181.0, 1740.8333333333335], [191.0, 496.0], [190.0, 1695.5], [188.0, 2998.0], [187.0, 987.0], [186.0, 943.0], [185.0, 1738.0], [199.0, 669.0], [197.0, 539.0], [196.0, 1278.0], [194.0, 668.0], [193.0, 1425.0], [192.0, 640.0], [205.0, 1272.0], [204.0, 1278.0], [203.0, 2934.0], [202.0, 1302.0], [201.0, 1767.0], [215.0, 462.0], [214.0, 2250.0], [213.0, 503.0], [212.0, 2672.0], [211.0, 1171.0], [210.0, 1731.5], [208.0, 1069.0], [223.0, 594.0], [222.0, 1616.0], [221.0, 609.0], [220.0, 1188.3333333333333], [217.0, 3636.0], [216.0, 583.0], [231.0, 654.0], [230.0, 1548.0], [229.0, 948.0], [228.0, 1393.75], [224.0, 1568.0], [239.0, 464.5], [237.0, 442.0], [236.0, 452.0], [235.0, 463.0], [234.0, 468.0], [233.0, 1489.0], [232.0, 481.0], [246.0, 1767.0], [245.0, 446.0], [244.0, 466.0], [243.0, 2379.0], [242.0, 1697.0], [241.0, 543.0], [240.0, 478.0], [255.0, 1954.0], [254.0, 1836.0], [253.0, 2213.0], [251.0, 1691.0], [249.0, 932.0], [264.0, 2269.0], [270.0, 1284.6666666666667], [267.0, 390.0], [266.0, 3325.0], [265.0, 1849.0], [263.0, 3478.0], [262.0, 1658.5], [260.0, 1460.0], [259.0, 1377.0], [258.0, 3228.0], [257.0, 1687.0], [256.0, 1385.0], [286.0, 602.0], [287.0, 1194.0], [285.0, 1393.0], [284.0, 322.0], [283.0, 1255.0], [282.0, 1794.5], [280.0, 1919.5], [278.0, 3205.0], [272.0, 1569.0], [274.0, 1750.0], [273.0, 1467.5], [277.0, 1432.0], [276.0, 1799.5], [296.0, 514.5], [300.0, 1573.2626329787201], [299.0, 1208.0], [298.0, 970.0], [297.0, 559.0], [295.0, 525.0], [294.0, 1211.0], [293.0, 518.0], [292.0, 1928.0], [290.0, 1315.5], [289.0, 1516.0], [288.0, 1160.0]], "isOverall": false, "label": "gateway_cl/helloauth", "isController": false}, {"data": [[275.2917127071822, 1566.3049723756878]], "isOverall": false, "label": "gateway_cl/helloauth-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 300.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 27487.416666666668, "minX": 1.68578958E12, "maxY": 241774.93333333332, "series": [{"data": [[1.68578964E12, 96891.73333333334], [1.68578958E12, 241774.93333333332]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68578964E12, 27487.416666666668], [1.68578958E12, 61109.916666666664]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68578964E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 9.004016064257025, "minX": 1.68578958E12, "maxY": 1662.0364963503646, "series": [{"data": [[1.68578964E12, 1635.0419708029194], [1.68578958E12, 1315.0832012678295]], "isOverall": false, "label": "gateway_cl/helloauth-2", "isController": false}, {"data": [[1.68578964E12, 19.26907630522088], [1.68578958E12, 135.6982703395256]], "isOverall": false, "label": "gateway_cl/helloauth-0", "isController": false}, {"data": [[1.68578964E12, 9.004016064257025], [1.68578958E12, 38.13773222293403]], "isOverall": false, "label": "gateway_cl/helloauth-1", "isController": false}, {"data": [[1.68578964E12, 1662.0364963503646], [1.68578958E12, 1524.7353407289997]], "isOverall": false, "label": "gateway_cl/helloauth", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68578964E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 9.004016064257025, "minX": 1.68578958E12, "maxY": 1635.0346715328471, "series": [{"data": [[1.68578964E12, 1635.0346715328471], [1.68578958E12, 1315.067353407289]], "isOverall": false, "label": "gateway_cl/helloauth-2", "isController": false}, {"data": [[1.68578964E12, 19.26907630522088], [1.68578958E12, 135.69058295964126]], "isOverall": false, "label": "gateway_cl/helloauth-0", "isController": false}, {"data": [[1.68578964E12, 9.004016064257025], [1.68578958E12, 38.136450992953264]], "isOverall": false, "label": "gateway_cl/helloauth-1", "isController": false}, {"data": [[1.68578964E12, 18.21350364963501], [1.68578958E12, 163.73217115689388]], "isOverall": false, "label": "gateway_cl/helloauth", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68578964E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68578958E12, "maxY": 39.448494453248735, "series": [{"data": [[1.68578964E12, 1.7372262773722635], [1.68578958E12, 2.3652931854199712]], "isOverall": false, "label": "gateway_cl/helloauth-2", "isController": false}, {"data": [[1.68578964E12, 2.0040160642570273], [1.68578958E12, 32.23062139654063]], "isOverall": false, "label": "gateway_cl/helloauth-0", "isController": false}, {"data": [[1.68578964E12, 0.0], [1.68578958E12, 0.0]], "isOverall": false, "label": "gateway_cl/helloauth-1", "isController": false}, {"data": [[1.68578964E12, 1.8740875912408752], [1.68578958E12, 39.448494453248735]], "isOverall": false, "label": "gateway_cl/helloauth", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68578964E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.68578958E12, "maxY": 5318.0, "series": [{"data": [[1.68578964E12, 4438.0], [1.68578958E12, 5318.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68578964E12, 1.0], [1.68578958E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68578964E12, 2549.0], [1.68578958E12, 1978.3000000000002]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68578964E12, 3795.1], [1.68578958E12, 3423.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68578964E12, 1134.5], [1.68578958E12, 243.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.68578964E12, 2927.25], [1.68578958E12, 2425.6499999999996]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68578964E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 25.5, "minX": 71.0, "maxY": 1480.0, "series": [{"data": [[71.0, 276.0], [577.0, 650.0], [655.0, 943.0], [362.0, 1480.0], [753.0, 77.0], [746.0, 511.5], [773.0, 33.0], [821.0, 409.0], [818.0, 25.5], [808.0, 52.5], [856.0, 272.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 856.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 14.5, "minX": 71.0, "maxY": 304.5, "series": [{"data": [[71.0, 243.0], [577.0, 16.0], [655.0, 21.0], [362.0, 304.5], [753.0, 39.0], [746.0, 16.0], [773.0, 20.0], [821.0, 84.0], [818.0, 15.0], [808.0, 14.5], [856.0, 267.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 856.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 16.6, "minX": 1.68578958E12, "maxY": 104.06666666666666, "series": [{"data": [[1.68578964E12, 16.6], [1.68578958E12, 104.06666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68578964E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 8.3, "minX": 1.68578958E12, "maxY": 52.03333333333333, "series": [{"data": [[1.68578964E12, 18.266666666666666], [1.68578958E12, 42.06666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68578964E12, 8.3], [1.68578958E12, 52.03333333333333]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68578964E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 4.15, "minX": 1.68578958E12, "maxY": 26.016666666666666, "series": [{"data": [[1.68578964E12, 4.15], [1.68578958E12, 26.016666666666666]], "isOverall": false, "label": "gateway_cl/helloauth-1-success", "isController": false}, {"data": [[1.68578964E12, 9.133333333333333], [1.68578958E12, 21.033333333333335]], "isOverall": false, "label": "gateway_cl/helloauth-2-success", "isController": false}, {"data": [[1.68578964E12, 4.15], [1.68578958E12, 26.016666666666666]], "isOverall": false, "label": "gateway_cl/helloauth-0-success", "isController": false}, {"data": [[1.68578964E12, 9.133333333333333], [1.68578958E12, 21.033333333333335]], "isOverall": false, "label": "gateway_cl/helloauth-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68578964E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 26.566666666666666, "minX": 1.68578958E12, "maxY": 94.1, "series": [{"data": [[1.68578964E12, 26.566666666666666], [1.68578958E12, 94.1]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68578964E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

