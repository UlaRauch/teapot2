/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 4134.0, "series": [{"data": [[0.0, 28.0], [0.1, 39.0], [0.2, 40.0], [0.3, 48.0], [0.4, 52.0], [0.5, 55.0], [0.6, 59.0], [0.7, 60.0], [0.8, 63.0], [0.9, 66.0], [1.0, 69.0], [1.1, 78.0], [1.2, 83.0], [1.3, 83.0], [1.4, 94.0], [1.5, 96.0], [1.6, 96.0], [1.7, 103.0], [1.8, 106.0], [1.9, 123.0], [2.0, 127.0], [2.1, 137.0], [2.2, 138.0], [2.3, 148.0], [2.4, 151.0], [2.5, 160.0], [2.6, 167.0], [2.7, 175.0], [2.8, 180.0], [2.9, 185.0], [3.0, 185.0], [3.1, 192.0], [3.2, 194.0], [3.3, 194.0], [3.4, 199.0], [3.5, 202.0], [3.6, 206.0], [3.7, 210.0], [3.8, 211.0], [3.9, 214.0], [4.0, 222.0], [4.1, 224.0], [4.2, 228.0], [4.3, 230.0], [4.4, 230.0], [4.5, 239.0], [4.6, 240.0], [4.7, 243.0], [4.8, 246.0], [4.9, 251.0], [5.0, 252.0], [5.1, 254.0], [5.2, 254.0], [5.3, 259.0], [5.4, 260.0], [5.5, 260.0], [5.6, 261.0], [5.7, 261.0], [5.8, 271.0], [5.9, 274.0], [6.0, 278.0], [6.1, 285.0], [6.2, 288.0], [6.3, 291.0], [6.4, 292.0], [6.5, 293.0], [6.6, 295.0], [6.7, 297.0], [6.8, 303.0], [6.9, 303.0], [7.0, 303.0], [7.1, 308.0], [7.2, 310.0], [7.3, 313.0], [7.4, 319.0], [7.5, 319.0], [7.6, 321.0], [7.7, 321.0], [7.8, 322.0], [7.9, 324.0], [8.0, 325.0], [8.1, 328.0], [8.2, 329.0], [8.3, 329.0], [8.4, 329.0], [8.5, 332.0], [8.6, 333.0], [8.7, 333.0], [8.8, 333.0], [8.9, 334.0], [9.0, 337.0], [9.1, 338.0], [9.2, 339.0], [9.3, 341.0], [9.4, 343.0], [9.5, 344.0], [9.6, 345.0], [9.7, 350.0], [9.8, 351.0], [9.9, 352.0], [10.0, 352.0], [10.1, 356.0], [10.2, 356.0], [10.3, 357.0], [10.4, 358.0], [10.5, 359.0], [10.6, 359.0], [10.7, 361.0], [10.8, 361.0], [10.9, 363.0], [11.0, 364.0], [11.1, 368.0], [11.2, 369.0], [11.3, 373.0], [11.4, 373.0], [11.5, 373.0], [11.6, 374.0], [11.7, 374.0], [11.8, 374.0], [11.9, 375.0], [12.0, 378.0], [12.1, 378.0], [12.2, 378.0], [12.3, 378.0], [12.4, 378.0], [12.5, 379.0], [12.6, 380.0], [12.7, 380.0], [12.8, 382.0], [12.9, 384.0], [13.0, 385.0], [13.1, 386.0], [13.2, 387.0], [13.3, 387.0], [13.4, 388.0], [13.5, 388.0], [13.6, 388.0], [13.7, 388.0], [13.8, 389.0], [13.9, 389.0], [14.0, 396.0], [14.1, 398.0], [14.2, 400.0], [14.3, 408.0], [14.4, 409.0], [14.5, 411.0], [14.6, 412.0], [14.7, 412.0], [14.8, 412.0], [14.9, 413.0], [15.0, 415.0], [15.1, 416.0], [15.2, 418.0], [15.3, 419.0], [15.4, 419.0], [15.5, 425.0], [15.6, 426.0], [15.7, 430.0], [15.8, 430.0], [15.9, 434.0], [16.0, 434.0], [16.1, 441.0], [16.2, 446.0], [16.3, 447.0], [16.4, 453.0], [16.5, 454.0], [16.6, 456.0], [16.7, 460.0], [16.8, 460.0], [16.9, 461.0], [17.0, 467.0], [17.1, 470.0], [17.2, 472.0], [17.3, 474.0], [17.4, 475.0], [17.5, 478.0], [17.6, 481.0], [17.7, 483.0], [17.8, 483.0], [17.9, 487.0], [18.0, 488.0], [18.1, 498.0], [18.2, 500.0], [18.3, 503.0], [18.4, 508.0], [18.5, 508.0], [18.6, 509.0], [18.7, 510.0], [18.8, 511.0], [18.9, 512.0], [19.0, 514.0], [19.1, 514.0], [19.2, 517.0], [19.3, 517.0], [19.4, 518.0], [19.5, 519.0], [19.6, 522.0], [19.7, 522.0], [19.8, 523.0], [19.9, 523.0], [20.0, 523.0], [20.1, 525.0], [20.2, 526.0], [20.3, 531.0], [20.4, 533.0], [20.5, 535.0], [20.6, 539.0], [20.7, 539.0], [20.8, 539.0], [20.9, 539.0], [21.0, 541.0], [21.1, 541.0], [21.2, 544.0], [21.3, 545.0], [21.4, 549.0], [21.5, 552.0], [21.6, 552.0], [21.7, 554.0], [21.8, 555.0], [21.9, 557.0], [22.0, 559.0], [22.1, 561.0], [22.2, 566.0], [22.3, 569.0], [22.4, 570.0], [22.5, 572.0], [22.6, 573.0], [22.7, 574.0], [22.8, 575.0], [22.9, 575.0], [23.0, 576.0], [23.1, 577.0], [23.2, 578.0], [23.3, 581.0], [23.4, 582.0], [23.5, 582.0], [23.6, 584.0], [23.7, 584.0], [23.8, 586.0], [23.9, 588.0], [24.0, 588.0], [24.1, 589.0], [24.2, 594.0], [24.3, 594.0], [24.4, 595.0], [24.5, 595.0], [24.6, 596.0], [24.7, 597.0], [24.8, 598.0], [24.9, 599.0], [25.0, 600.0], [25.1, 601.0], [25.2, 604.0], [25.3, 604.0], [25.4, 605.0], [25.5, 605.0], [25.6, 608.0], [25.7, 608.0], [25.8, 608.0], [25.9, 608.0], [26.0, 610.0], [26.1, 615.0], [26.2, 618.0], [26.3, 620.0], [26.4, 620.0], [26.5, 624.0], [26.6, 624.0], [26.7, 626.0], [26.8, 626.0], [26.9, 627.0], [27.0, 627.0], [27.1, 630.0], [27.2, 631.0], [27.3, 631.0], [27.4, 632.0], [27.5, 633.0], [27.6, 633.0], [27.7, 635.0], [27.8, 637.0], [27.9, 639.0], [28.0, 640.0], [28.1, 640.0], [28.2, 642.0], [28.3, 644.0], [28.4, 646.0], [28.5, 646.0], [28.6, 653.0], [28.7, 654.0], [28.8, 655.0], [28.9, 656.0], [29.0, 656.0], [29.1, 657.0], [29.2, 659.0], [29.3, 659.0], [29.4, 663.0], [29.5, 664.0], [29.6, 665.0], [29.7, 666.0], [29.8, 671.0], [29.9, 671.0], [30.0, 672.0], [30.1, 672.0], [30.2, 672.0], [30.3, 672.0], [30.4, 674.0], [30.5, 676.0], [30.6, 677.0], [30.7, 678.0], [30.8, 679.0], [30.9, 680.0], [31.0, 680.0], [31.1, 680.0], [31.2, 681.0], [31.3, 684.0], [31.4, 684.0], [31.5, 684.0], [31.6, 685.0], [31.7, 686.0], [31.8, 689.0], [31.9, 690.0], [32.0, 692.0], [32.1, 692.0], [32.2, 692.0], [32.3, 693.0], [32.4, 693.0], [32.5, 698.0], [32.6, 699.0], [32.7, 702.0], [32.8, 706.0], [32.9, 706.0], [33.0, 707.0], [33.1, 708.0], [33.2, 710.0], [33.3, 712.0], [33.4, 712.0], [33.5, 714.0], [33.6, 714.0], [33.7, 715.0], [33.8, 715.0], [33.9, 716.0], [34.0, 717.0], [34.1, 717.0], [34.2, 719.0], [34.3, 719.0], [34.4, 719.0], [34.5, 721.0], [34.6, 724.0], [34.7, 724.0], [34.8, 724.0], [34.9, 725.0], [35.0, 727.0], [35.1, 728.0], [35.2, 728.0], [35.3, 729.0], [35.4, 729.0], [35.5, 731.0], [35.6, 732.0], [35.7, 735.0], [35.8, 736.0], [35.9, 739.0], [36.0, 740.0], [36.1, 741.0], [36.2, 741.0], [36.3, 742.0], [36.4, 742.0], [36.5, 743.0], [36.6, 743.0], [36.7, 744.0], [36.8, 746.0], [36.9, 746.0], [37.0, 748.0], [37.1, 748.0], [37.2, 755.0], [37.3, 755.0], [37.4, 759.0], [37.5, 760.0], [37.6, 766.0], [37.7, 766.0], [37.8, 768.0], [37.9, 769.0], [38.0, 769.0], [38.1, 769.0], [38.2, 770.0], [38.3, 770.0], [38.4, 770.0], [38.5, 771.0], [38.6, 772.0], [38.7, 772.0], [38.8, 773.0], [38.9, 775.0], [39.0, 780.0], [39.1, 781.0], [39.2, 783.0], [39.3, 785.0], [39.4, 786.0], [39.5, 788.0], [39.6, 788.0], [39.7, 789.0], [39.8, 792.0], [39.9, 794.0], [40.0, 794.0], [40.1, 795.0], [40.2, 797.0], [40.3, 798.0], [40.4, 801.0], [40.5, 802.0], [40.6, 804.0], [40.7, 804.0], [40.8, 805.0], [40.9, 807.0], [41.0, 807.0], [41.1, 812.0], [41.2, 814.0], [41.3, 816.0], [41.4, 816.0], [41.5, 818.0], [41.6, 819.0], [41.7, 820.0], [41.8, 820.0], [41.9, 821.0], [42.0, 823.0], [42.1, 824.0], [42.2, 824.0], [42.3, 827.0], [42.4, 827.0], [42.5, 828.0], [42.6, 830.0], [42.7, 830.0], [42.8, 832.0], [42.9, 835.0], [43.0, 835.0], [43.1, 838.0], [43.2, 838.0], [43.3, 838.0], [43.4, 838.0], [43.5, 841.0], [43.6, 844.0], [43.7, 844.0], [43.8, 845.0], [43.9, 847.0], [44.0, 847.0], [44.1, 851.0], [44.2, 854.0], [44.3, 855.0], [44.4, 856.0], [44.5, 858.0], [44.6, 859.0], [44.7, 859.0], [44.8, 860.0], [44.9, 861.0], [45.0, 862.0], [45.1, 863.0], [45.2, 863.0], [45.3, 864.0], [45.4, 865.0], [45.5, 867.0], [45.6, 868.0], [45.7, 869.0], [45.8, 869.0], [45.9, 870.0], [46.0, 872.0], [46.1, 873.0], [46.2, 876.0], [46.3, 877.0], [46.4, 878.0], [46.5, 878.0], [46.6, 880.0], [46.7, 881.0], [46.8, 882.0], [46.9, 882.0], [47.0, 883.0], [47.1, 885.0], [47.2, 889.0], [47.3, 891.0], [47.4, 892.0], [47.5, 893.0], [47.6, 894.0], [47.7, 894.0], [47.8, 894.0], [47.9, 897.0], [48.0, 898.0], [48.1, 899.0], [48.2, 901.0], [48.3, 902.0], [48.4, 903.0], [48.5, 903.0], [48.6, 905.0], [48.7, 906.0], [48.8, 908.0], [48.9, 909.0], [49.0, 912.0], [49.1, 912.0], [49.2, 916.0], [49.3, 918.0], [49.4, 918.0], [49.5, 920.0], [49.6, 921.0], [49.7, 922.0], [49.8, 923.0], [49.9, 924.0], [50.0, 928.0], [50.1, 930.0], [50.2, 930.0], [50.3, 932.0], [50.4, 932.0], [50.5, 933.0], [50.6, 934.0], [50.7, 936.0], [50.8, 939.0], [50.9, 940.0], [51.0, 941.0], [51.1, 943.0], [51.2, 945.0], [51.3, 946.0], [51.4, 946.0], [51.5, 946.0], [51.6, 949.0], [51.7, 951.0], [51.8, 952.0], [51.9, 953.0], [52.0, 956.0], [52.1, 960.0], [52.2, 960.0], [52.3, 961.0], [52.4, 962.0], [52.5, 963.0], [52.6, 965.0], [52.7, 969.0], [52.8, 972.0], [52.9, 972.0], [53.0, 974.0], [53.1, 974.0], [53.2, 976.0], [53.3, 981.0], [53.4, 981.0], [53.5, 983.0], [53.6, 987.0], [53.7, 987.0], [53.8, 988.0], [53.9, 988.0], [54.0, 989.0], [54.1, 990.0], [54.2, 991.0], [54.3, 992.0], [54.4, 993.0], [54.5, 995.0], [54.6, 996.0], [54.7, 997.0], [54.8, 997.0], [54.9, 998.0], [55.0, 998.0], [55.1, 1003.0], [55.2, 1009.0], [55.3, 1010.0], [55.4, 1012.0], [55.5, 1013.0], [55.6, 1014.0], [55.7, 1015.0], [55.8, 1017.0], [55.9, 1018.0], [56.0, 1019.0], [56.1, 1022.0], [56.2, 1023.0], [56.3, 1023.0], [56.4, 1024.0], [56.5, 1028.0], [56.6, 1029.0], [56.7, 1033.0], [56.8, 1034.0], [56.9, 1035.0], [57.0, 1036.0], [57.1, 1036.0], [57.2, 1039.0], [57.3, 1040.0], [57.4, 1042.0], [57.5, 1049.0], [57.6, 1049.0], [57.7, 1049.0], [57.8, 1051.0], [57.9, 1051.0], [58.0, 1054.0], [58.1, 1057.0], [58.2, 1063.0], [58.3, 1067.0], [58.4, 1067.0], [58.5, 1069.0], [58.6, 1070.0], [58.7, 1076.0], [58.8, 1079.0], [58.9, 1082.0], [59.0, 1086.0], [59.1, 1089.0], [59.2, 1090.0], [59.3, 1091.0], [59.4, 1091.0], [59.5, 1092.0], [59.6, 1093.0], [59.7, 1096.0], [59.8, 1099.0], [59.9, 1099.0], [60.0, 1099.0], [60.1, 1105.0], [60.2, 1106.0], [60.3, 1107.0], [60.4, 1109.0], [60.5, 1110.0], [60.6, 1111.0], [60.7, 1115.0], [60.8, 1116.0], [60.9, 1117.0], [61.0, 1117.0], [61.1, 1126.0], [61.2, 1130.0], [61.3, 1131.0], [61.4, 1131.0], [61.5, 1131.0], [61.6, 1134.0], [61.7, 1135.0], [61.8, 1135.0], [61.9, 1137.0], [62.0, 1138.0], [62.1, 1139.0], [62.2, 1141.0], [62.3, 1142.0], [62.4, 1144.0], [62.5, 1146.0], [62.6, 1146.0], [62.7, 1147.0], [62.8, 1155.0], [62.9, 1155.0], [63.0, 1158.0], [63.1, 1159.0], [63.2, 1159.0], [63.3, 1160.0], [63.4, 1161.0], [63.5, 1162.0], [63.6, 1170.0], [63.7, 1170.0], [63.8, 1171.0], [63.9, 1175.0], [64.0, 1175.0], [64.1, 1179.0], [64.2, 1181.0], [64.3, 1182.0], [64.4, 1185.0], [64.5, 1191.0], [64.6, 1195.0], [64.7, 1195.0], [64.8, 1196.0], [64.9, 1198.0], [65.0, 1202.0], [65.1, 1205.0], [65.2, 1213.0], [65.3, 1214.0], [65.4, 1218.0], [65.5, 1220.0], [65.6, 1221.0], [65.7, 1222.0], [65.8, 1224.0], [65.9, 1227.0], [66.0, 1233.0], [66.1, 1237.0], [66.2, 1238.0], [66.3, 1240.0], [66.4, 1245.0], [66.5, 1249.0], [66.6, 1252.0], [66.7, 1254.0], [66.8, 1256.0], [66.9, 1259.0], [67.0, 1260.0], [67.1, 1266.0], [67.2, 1268.0], [67.3, 1269.0], [67.4, 1277.0], [67.5, 1280.0], [67.6, 1280.0], [67.7, 1283.0], [67.8, 1286.0], [67.9, 1288.0], [68.0, 1290.0], [68.1, 1291.0], [68.2, 1293.0], [68.3, 1296.0], [68.4, 1303.0], [68.5, 1305.0], [68.6, 1305.0], [68.7, 1307.0], [68.8, 1308.0], [68.9, 1310.0], [69.0, 1313.0], [69.1, 1320.0], [69.2, 1320.0], [69.3, 1322.0], [69.4, 1322.0], [69.5, 1333.0], [69.6, 1343.0], [69.7, 1347.0], [69.8, 1349.0], [69.9, 1350.0], [70.0, 1350.0], [70.1, 1351.0], [70.2, 1355.0], [70.3, 1355.0], [70.4, 1356.0], [70.5, 1363.0], [70.6, 1364.0], [70.7, 1364.0], [70.8, 1367.0], [70.9, 1368.0], [71.0, 1369.0], [71.1, 1373.0], [71.2, 1375.0], [71.3, 1377.0], [71.4, 1379.0], [71.5, 1389.0], [71.6, 1390.0], [71.7, 1392.0], [71.8, 1395.0], [71.9, 1398.0], [72.0, 1401.0], [72.1, 1405.0], [72.2, 1409.0], [72.3, 1409.0], [72.4, 1411.0], [72.5, 1412.0], [72.6, 1422.0], [72.7, 1428.0], [72.8, 1429.0], [72.9, 1433.0], [73.0, 1442.0], [73.1, 1445.0], [73.2, 1449.0], [73.3, 1449.0], [73.4, 1464.0], [73.5, 1466.0], [73.6, 1471.0], [73.7, 1487.0], [73.8, 1489.0], [73.9, 1492.0], [74.0, 1493.0], [74.1, 1497.0], [74.2, 1498.0], [74.3, 1501.0], [74.4, 1503.0], [74.5, 1507.0], [74.6, 1508.0], [74.7, 1512.0], [74.8, 1519.0], [74.9, 1520.0], [75.0, 1526.0], [75.1, 1529.0], [75.2, 1529.0], [75.3, 1533.0], [75.4, 1538.0], [75.5, 1540.0], [75.6, 1542.0], [75.7, 1542.0], [75.8, 1543.0], [75.9, 1546.0], [76.0, 1546.0], [76.1, 1547.0], [76.2, 1549.0], [76.3, 1551.0], [76.4, 1552.0], [76.5, 1552.0], [76.6, 1556.0], [76.7, 1564.0], [76.8, 1566.0], [76.9, 1567.0], [77.0, 1569.0], [77.1, 1569.0], [77.2, 1569.0], [77.3, 1574.0], [77.4, 1579.0], [77.5, 1580.0], [77.6, 1590.0], [77.7, 1595.0], [77.8, 1597.0], [77.9, 1599.0], [78.0, 1600.0], [78.1, 1604.0], [78.2, 1605.0], [78.3, 1608.0], [78.4, 1610.0], [78.5, 1611.0], [78.6, 1614.0], [78.7, 1618.0], [78.8, 1619.0], [78.9, 1621.0], [79.0, 1622.0], [79.1, 1623.0], [79.2, 1625.0], [79.3, 1626.0], [79.4, 1630.0], [79.5, 1632.0], [79.6, 1637.0], [79.7, 1640.0], [79.8, 1642.0], [79.9, 1642.0], [80.0, 1650.0], [80.1, 1653.0], [80.2, 1655.0], [80.3, 1657.0], [80.4, 1661.0], [80.5, 1666.0], [80.6, 1667.0], [80.7, 1669.0], [80.8, 1669.0], [80.9, 1672.0], [81.0, 1675.0], [81.1, 1677.0], [81.2, 1677.0], [81.3, 1679.0], [81.4, 1680.0], [81.5, 1681.0], [81.6, 1687.0], [81.7, 1692.0], [81.8, 1700.0], [81.9, 1703.0], [82.0, 1705.0], [82.1, 1706.0], [82.2, 1708.0], [82.3, 1716.0], [82.4, 1719.0], [82.5, 1719.0], [82.6, 1720.0], [82.7, 1721.0], [82.8, 1731.0], [82.9, 1740.0], [83.0, 1741.0], [83.1, 1744.0], [83.2, 1745.0], [83.3, 1746.0], [83.4, 1746.0], [83.5, 1751.0], [83.6, 1752.0], [83.7, 1756.0], [83.8, 1761.0], [83.9, 1766.0], [84.0, 1768.0], [84.1, 1770.0], [84.2, 1770.0], [84.3, 1771.0], [84.4, 1782.0], [84.5, 1787.0], [84.6, 1789.0], [84.7, 1792.0], [84.8, 1798.0], [84.9, 1803.0], [85.0, 1804.0], [85.1, 1810.0], [85.2, 1811.0], [85.3, 1839.0], [85.4, 1840.0], [85.5, 1845.0], [85.6, 1852.0], [85.7, 1856.0], [85.8, 1871.0], [85.9, 1873.0], [86.0, 1874.0], [86.1, 1877.0], [86.2, 1877.0], [86.3, 1885.0], [86.4, 1895.0], [86.5, 1896.0], [86.6, 1899.0], [86.7, 1899.0], [86.8, 1902.0], [86.9, 1910.0], [87.0, 1913.0], [87.1, 1914.0], [87.2, 1919.0], [87.3, 1919.0], [87.4, 1919.0], [87.5, 1922.0], [87.6, 1924.0], [87.7, 1938.0], [87.8, 1940.0], [87.9, 1947.0], [88.0, 1970.0], [88.1, 1972.0], [88.2, 1972.0], [88.3, 1979.0], [88.4, 1984.0], [88.5, 1987.0], [88.6, 1999.0], [88.7, 2007.0], [88.8, 2011.0], [88.9, 2013.0], [89.0, 2015.0], [89.1, 2025.0], [89.2, 2027.0], [89.3, 2029.0], [89.4, 2031.0], [89.5, 2032.0], [89.6, 2032.0], [89.7, 2036.0], [89.8, 2041.0], [89.9, 2043.0], [90.0, 2049.0], [90.1, 2049.0], [90.2, 2061.0], [90.3, 2065.0], [90.4, 2072.0], [90.5, 2074.0], [90.6, 2077.0], [90.7, 2078.0], [90.8, 2086.0], [90.9, 2091.0], [91.0, 2099.0], [91.1, 2104.0], [91.2, 2104.0], [91.3, 2108.0], [91.4, 2117.0], [91.5, 2139.0], [91.6, 2144.0], [91.7, 2150.0], [91.8, 2156.0], [91.9, 2162.0], [92.0, 2169.0], [92.1, 2171.0], [92.2, 2173.0], [92.3, 2187.0], [92.4, 2188.0], [92.5, 2190.0], [92.6, 2199.0], [92.7, 2200.0], [92.8, 2203.0], [92.9, 2212.0], [93.0, 2212.0], [93.1, 2217.0], [93.2, 2222.0], [93.3, 2230.0], [93.4, 2232.0], [93.5, 2232.0], [93.6, 2236.0], [93.7, 2244.0], [93.8, 2247.0], [93.9, 2253.0], [94.0, 2259.0], [94.1, 2261.0], [94.2, 2267.0], [94.3, 2273.0], [94.4, 2278.0], [94.5, 2279.0], [94.6, 2288.0], [94.7, 2291.0], [94.8, 2292.0], [94.9, 2302.0], [95.0, 2312.0], [95.1, 2316.0], [95.2, 2339.0], [95.3, 2341.0], [95.4, 2343.0], [95.5, 2349.0], [95.6, 2357.0], [95.7, 2370.0], [95.8, 2385.0], [95.9, 2410.0], [96.0, 2412.0], [96.1, 2424.0], [96.2, 2453.0], [96.3, 2455.0], [96.4, 2470.0], [96.5, 2488.0], [96.6, 2496.0], [96.7, 2548.0], [96.8, 2560.0], [96.9, 2565.0], [97.0, 2575.0], [97.1, 2596.0], [97.2, 2631.0], [97.3, 2632.0], [97.4, 2662.0], [97.5, 2670.0], [97.6, 2677.0], [97.7, 2686.0], [97.8, 2700.0], [97.9, 2718.0], [98.0, 2736.0], [98.1, 2751.0], [98.2, 2778.0], [98.3, 2799.0], [98.4, 2804.0], [98.5, 2820.0], [98.6, 2905.0], [98.7, 2908.0], [98.8, 2912.0], [98.9, 2924.0], [99.0, 2944.0], [99.1, 2964.0], [99.2, 2965.0], [99.3, 3004.0], [99.4, 3005.0], [99.5, 3116.0], [99.6, 3199.0], [99.7, 3349.0], [99.8, 3382.0], [99.9, 3396.0], [100.0, 3418.0]], "isOverall": false, "label": "gateway_cl/helloauth-2", "isController": false}, {"data": [[0.0, 3.0], [0.1, 4.0], [0.2, 4.0], [0.3, 4.0], [0.4, 4.0], [0.5, 4.0], [0.6, 4.0], [0.7, 4.0], [0.8, 4.0], [0.9, 4.0], [1.0, 4.0], [1.1, 5.0], [1.2, 5.0], [1.3, 5.0], [1.4, 5.0], [1.5, 5.0], [1.6, 5.0], [1.7, 5.0], [1.8, 5.0], [1.9, 5.0], [2.0, 5.0], [2.1, 5.0], [2.2, 5.0], [2.3, 5.0], [2.4, 5.0], [2.5, 6.0], [2.6, 6.0], [2.7, 6.0], [2.8, 6.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 7.0], [3.4, 7.0], [3.5, 7.0], [3.6, 7.0], [3.7, 7.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 7.0], [4.2, 7.0], [4.3, 7.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 8.0], [5.0, 8.0], [5.1, 8.0], [5.2, 8.0], [5.3, 8.0], [5.4, 8.0], [5.5, 8.0], [5.6, 8.0], [5.7, 8.0], [5.8, 8.0], [5.9, 8.0], [6.0, 8.0], [6.1, 8.0], [6.2, 8.0], [6.3, 8.0], [6.4, 8.0], [6.5, 9.0], [6.6, 9.0], [6.7, 9.0], [6.8, 9.0], [6.9, 9.0], [7.0, 9.0], [7.1, 9.0], [7.2, 9.0], [7.3, 9.0], [7.4, 9.0], [7.5, 9.0], [7.6, 9.0], [7.7, 9.0], [7.8, 9.0], [7.9, 9.0], [8.0, 9.0], [8.1, 9.0], [8.2, 9.0], [8.3, 9.0], [8.4, 9.0], [8.5, 9.0], [8.6, 9.0], [8.7, 9.0], [8.8, 9.0], [8.9, 9.0], [9.0, 9.0], [9.1, 9.0], [9.2, 10.0], [9.3, 10.0], [9.4, 10.0], [9.5, 10.0], [9.6, 10.0], [9.7, 10.0], [9.8, 10.0], [9.9, 10.0], [10.0, 10.0], [10.1, 10.0], [10.2, 10.0], [10.3, 10.0], [10.4, 10.0], [10.5, 10.0], [10.6, 10.0], [10.7, 10.0], [10.8, 10.0], [10.9, 10.0], [11.0, 10.0], [11.1, 10.0], [11.2, 10.0], [11.3, 10.0], [11.4, 10.0], [11.5, 10.0], [11.6, 10.0], [11.7, 10.0], [11.8, 10.0], [11.9, 11.0], [12.0, 11.0], [12.1, 11.0], [12.2, 11.0], [12.3, 11.0], [12.4, 11.0], [12.5, 11.0], [12.6, 11.0], [12.7, 11.0], [12.8, 11.0], [12.9, 11.0], [13.0, 11.0], [13.1, 11.0], [13.2, 11.0], [13.3, 11.0], [13.4, 11.0], [13.5, 11.0], [13.6, 11.0], [13.7, 11.0], [13.8, 11.0], [13.9, 11.0], [14.0, 11.0], [14.1, 11.0], [14.2, 11.0], [14.3, 11.0], [14.4, 11.0], [14.5, 11.0], [14.6, 12.0], [14.7, 12.0], [14.8, 12.0], [14.9, 12.0], [15.0, 12.0], [15.1, 12.0], [15.2, 12.0], [15.3, 12.0], [15.4, 12.0], [15.5, 12.0], [15.6, 12.0], [15.7, 12.0], [15.8, 12.0], [15.9, 12.0], [16.0, 12.0], [16.1, 12.0], [16.2, 12.0], [16.3, 12.0], [16.4, 12.0], [16.5, 13.0], [16.6, 13.0], [16.7, 13.0], [16.8, 13.0], [16.9, 13.0], [17.0, 13.0], [17.1, 13.0], [17.2, 13.0], [17.3, 13.0], [17.4, 13.0], [17.5, 13.0], [17.6, 13.0], [17.7, 13.0], [17.8, 13.0], [17.9, 13.0], [18.0, 13.0], [18.1, 13.0], [18.2, 13.0], [18.3, 13.0], [18.4, 13.0], [18.5, 13.0], [18.6, 13.0], [18.7, 14.0], [18.8, 14.0], [18.9, 14.0], [19.0, 14.0], [19.1, 14.0], [19.2, 14.0], [19.3, 14.0], [19.4, 14.0], [19.5, 14.0], [19.6, 14.0], [19.7, 14.0], [19.8, 14.0], [19.9, 14.0], [20.0, 14.0], [20.1, 14.0], [20.2, 14.0], [20.3, 14.0], [20.4, 14.0], [20.5, 15.0], [20.6, 15.0], [20.7, 15.0], [20.8, 15.0], [20.9, 15.0], [21.0, 15.0], [21.1, 15.0], [21.2, 15.0], [21.3, 15.0], [21.4, 15.0], [21.5, 15.0], [21.6, 15.0], [21.7, 15.0], [21.8, 15.0], [21.9, 15.0], [22.0, 15.0], [22.1, 15.0], [22.2, 15.0], [22.3, 15.0], [22.4, 15.0], [22.5, 16.0], [22.6, 16.0], [22.7, 16.0], [22.8, 16.0], [22.9, 16.0], [23.0, 16.0], [23.1, 16.0], [23.2, 16.0], [23.3, 16.0], [23.4, 16.0], [23.5, 16.0], [23.6, 16.0], [23.7, 16.0], [23.8, 16.0], [23.9, 16.0], [24.0, 16.0], [24.1, 16.0], [24.2, 16.0], [24.3, 16.0], [24.4, 16.0], [24.5, 16.0], [24.6, 16.0], [24.7, 16.0], [24.8, 17.0], [24.9, 17.0], [25.0, 17.0], [25.1, 17.0], [25.2, 17.0], [25.3, 17.0], [25.4, 17.0], [25.5, 17.0], [25.6, 17.0], [25.7, 17.0], [25.8, 17.0], [25.9, 17.0], [26.0, 17.0], [26.1, 17.0], [26.2, 17.0], [26.3, 17.0], [26.4, 17.0], [26.5, 17.0], [26.6, 17.0], [26.7, 17.0], [26.8, 17.0], [26.9, 17.0], [27.0, 17.0], [27.1, 17.0], [27.2, 17.0], [27.3, 18.0], [27.4, 18.0], [27.5, 18.0], [27.6, 18.0], [27.7, 18.0], [27.8, 18.0], [27.9, 18.0], [28.0, 18.0], [28.1, 18.0], [28.2, 18.0], [28.3, 18.0], [28.4, 18.0], [28.5, 18.0], [28.6, 18.0], [28.7, 18.0], [28.8, 18.0], [28.9, 18.0], [29.0, 18.0], [29.1, 18.0], [29.2, 18.0], [29.3, 19.0], [29.4, 19.0], [29.5, 19.0], [29.6, 19.0], [29.7, 19.0], [29.8, 19.0], [29.9, 19.0], [30.0, 19.0], [30.1, 19.0], [30.2, 19.0], [30.3, 19.0], [30.4, 19.0], [30.5, 19.0], [30.6, 19.0], [30.7, 19.0], [30.8, 19.0], [30.9, 19.0], [31.0, 19.0], [31.1, 19.0], [31.2, 19.0], [31.3, 19.0], [31.4, 19.0], [31.5, 19.0], [31.6, 19.0], [31.7, 19.0], [31.8, 19.0], [31.9, 19.0], [32.0, 19.0], [32.1, 19.0], [32.2, 19.0], [32.3, 20.0], [32.4, 20.0], [32.5, 20.0], [32.6, 20.0], [32.7, 20.0], [32.8, 20.0], [32.9, 20.0], [33.0, 20.0], [33.1, 20.0], [33.2, 20.0], [33.3, 20.0], [33.4, 20.0], [33.5, 20.0], [33.6, 20.0], [33.7, 20.0], [33.8, 20.0], [33.9, 20.0], [34.0, 20.0], [34.1, 20.0], [34.2, 20.0], [34.3, 20.0], [34.4, 20.0], [34.5, 20.0], [34.6, 20.0], [34.7, 20.0], [34.8, 21.0], [34.9, 21.0], [35.0, 21.0], [35.1, 21.0], [35.2, 21.0], [35.3, 21.0], [35.4, 21.0], [35.5, 21.0], [35.6, 21.0], [35.7, 21.0], [35.8, 21.0], [35.9, 21.0], [36.0, 21.0], [36.1, 21.0], [36.2, 21.0], [36.3, 21.0], [36.4, 21.0], [36.5, 21.0], [36.6, 21.0], [36.7, 22.0], [36.8, 22.0], [36.9, 22.0], [37.0, 22.0], [37.1, 22.0], [37.2, 22.0], [37.3, 22.0], [37.4, 22.0], [37.5, 22.0], [37.6, 22.0], [37.7, 22.0], [37.8, 22.0], [37.9, 22.0], [38.0, 22.0], [38.1, 22.0], [38.2, 22.0], [38.3, 22.0], [38.4, 22.0], [38.5, 23.0], [38.6, 23.0], [38.7, 23.0], [38.8, 23.0], [38.9, 23.0], [39.0, 23.0], [39.1, 23.0], [39.2, 23.0], [39.3, 23.0], [39.4, 23.0], [39.5, 23.0], [39.6, 23.0], [39.7, 23.0], [39.8, 23.0], [39.9, 23.0], [40.0, 23.0], [40.1, 24.0], [40.2, 24.0], [40.3, 24.0], [40.4, 24.0], [40.5, 24.0], [40.6, 24.0], [40.7, 24.0], [40.8, 24.0], [40.9, 24.0], [41.0, 24.0], [41.1, 24.0], [41.2, 24.0], [41.3, 24.0], [41.4, 24.0], [41.5, 24.0], [41.6, 24.0], [41.7, 25.0], [41.8, 25.0], [41.9, 25.0], [42.0, 25.0], [42.1, 25.0], [42.2, 25.0], [42.3, 25.0], [42.4, 25.0], [42.5, 25.0], [42.6, 25.0], [42.7, 25.0], [42.8, 25.0], [42.9, 25.0], [43.0, 25.0], [43.1, 25.0], [43.2, 25.0], [43.3, 25.0], [43.4, 25.0], [43.5, 25.0], [43.6, 25.0], [43.7, 25.0], [43.8, 25.0], [43.9, 26.0], [44.0, 26.0], [44.1, 26.0], [44.2, 26.0], [44.3, 26.0], [44.4, 26.0], [44.5, 26.0], [44.6, 26.0], [44.7, 26.0], [44.8, 26.0], [44.9, 26.0], [45.0, 26.0], [45.1, 26.0], [45.2, 26.0], [45.3, 26.0], [45.4, 26.0], [45.5, 26.0], [45.6, 26.0], [45.7, 26.0], [45.8, 26.0], [45.9, 26.0], [46.0, 27.0], [46.1, 27.0], [46.2, 27.0], [46.3, 27.0], [46.4, 27.0], [46.5, 27.0], [46.6, 27.0], [46.7, 27.0], [46.8, 27.0], [46.9, 27.0], [47.0, 27.0], [47.1, 27.0], [47.2, 27.0], [47.3, 28.0], [47.4, 28.0], [47.5, 28.0], [47.6, 28.0], [47.7, 28.0], [47.8, 28.0], [47.9, 28.0], [48.0, 28.0], [48.1, 28.0], [48.2, 28.0], [48.3, 28.0], [48.4, 28.0], [48.5, 28.0], [48.6, 28.0], [48.7, 28.0], [48.8, 28.0], [48.9, 28.0], [49.0, 28.0], [49.1, 29.0], [49.2, 29.0], [49.3, 29.0], [49.4, 29.0], [49.5, 29.0], [49.6, 29.0], [49.7, 29.0], [49.8, 29.0], [49.9, 29.0], [50.0, 29.0], [50.1, 29.0], [50.2, 30.0], [50.3, 30.0], [50.4, 30.0], [50.5, 30.0], [50.6, 30.0], [50.7, 30.0], [50.8, 30.0], [50.9, 30.0], [51.0, 30.0], [51.1, 30.0], [51.2, 30.0], [51.3, 30.0], [51.4, 30.0], [51.5, 30.0], [51.6, 30.0], [51.7, 30.0], [51.8, 30.0], [51.9, 30.0], [52.0, 31.0], [52.1, 31.0], [52.2, 31.0], [52.3, 31.0], [52.4, 31.0], [52.5, 31.0], [52.6, 31.0], [52.7, 31.0], [52.8, 32.0], [52.9, 32.0], [53.0, 32.0], [53.1, 32.0], [53.2, 32.0], [53.3, 32.0], [53.4, 32.0], [53.5, 32.0], [53.6, 33.0], [53.7, 33.0], [53.8, 33.0], [53.9, 33.0], [54.0, 33.0], [54.1, 33.0], [54.2, 33.0], [54.3, 33.0], [54.4, 34.0], [54.5, 34.0], [54.6, 34.0], [54.7, 34.0], [54.8, 34.0], [54.9, 34.0], [55.0, 35.0], [55.1, 35.0], [55.2, 35.0], [55.3, 35.0], [55.4, 35.0], [55.5, 35.0], [55.6, 35.0], [55.7, 36.0], [55.8, 36.0], [55.9, 36.0], [56.0, 36.0], [56.1, 36.0], [56.2, 36.0], [56.3, 36.0], [56.4, 36.0], [56.5, 37.0], [56.6, 37.0], [56.7, 37.0], [56.8, 38.0], [56.9, 38.0], [57.0, 38.0], [57.1, 38.0], [57.2, 39.0], [57.3, 39.0], [57.4, 40.0], [57.5, 40.0], [57.6, 40.0], [57.7, 40.0], [57.8, 40.0], [57.9, 40.0], [58.0, 40.0], [58.1, 41.0], [58.2, 41.0], [58.3, 41.0], [58.4, 41.0], [58.5, 41.0], [58.6, 42.0], [58.7, 42.0], [58.8, 42.0], [58.9, 42.0], [59.0, 43.0], [59.1, 43.0], [59.2, 43.0], [59.3, 43.0], [59.4, 43.0], [59.5, 44.0], [59.6, 44.0], [59.7, 44.0], [59.8, 44.0], [59.9, 46.0], [60.0, 47.0], [60.1, 47.0], [60.2, 47.0], [60.3, 48.0], [60.4, 49.0], [60.5, 51.0], [60.6, 51.0], [60.7, 52.0], [60.8, 55.0], [60.9, 56.0], [61.0, 57.0], [61.1, 57.0], [61.2, 58.0], [61.3, 58.0], [61.4, 58.0], [61.5, 59.0], [61.6, 59.0], [61.7, 60.0], [61.8, 60.0], [61.9, 60.0], [62.0, 61.0], [62.1, 62.0], [62.2, 62.0], [62.3, 62.0], [62.4, 63.0], [62.5, 64.0], [62.6, 64.0], [62.7, 68.0], [62.8, 71.0], [62.9, 72.0], [63.0, 74.0], [63.1, 76.0], [63.2, 81.0], [63.3, 86.0], [63.4, 89.0], [63.5, 89.0], [63.6, 91.0], [63.7, 92.0], [63.8, 92.0], [63.9, 96.0], [64.0, 96.0], [64.1, 97.0], [64.2, 97.0], [64.3, 98.0], [64.4, 98.0], [64.5, 98.0], [64.6, 99.0], [64.7, 99.0], [64.8, 101.0], [64.9, 102.0], [65.0, 103.0], [65.1, 109.0], [65.2, 110.0], [65.3, 112.0], [65.4, 112.0], [65.5, 113.0], [65.6, 113.0], [65.7, 113.0], [65.8, 114.0], [65.9, 114.0], [66.0, 115.0], [66.1, 115.0], [66.2, 116.0], [66.3, 116.0], [66.4, 117.0], [66.5, 118.0], [66.6, 118.0], [66.7, 118.0], [66.8, 118.0], [66.9, 119.0], [67.0, 119.0], [67.1, 120.0], [67.2, 120.0], [67.3, 123.0], [67.4, 124.0], [67.5, 125.0], [67.6, 125.0], [67.7, 126.0], [67.8, 126.0], [67.9, 126.0], [68.0, 128.0], [68.1, 128.0], [68.2, 129.0], [68.3, 130.0], [68.4, 130.0], [68.5, 131.0], [68.6, 131.0], [68.7, 131.0], [68.8, 131.0], [68.9, 131.0], [69.0, 133.0], [69.1, 135.0], [69.2, 136.0], [69.3, 138.0], [69.4, 139.0], [69.5, 141.0], [69.6, 142.0], [69.7, 145.0], [69.8, 145.0], [69.9, 147.0], [70.0, 147.0], [70.1, 147.0], [70.2, 147.0], [70.3, 148.0], [70.4, 150.0], [70.5, 151.0], [70.6, 151.0], [70.7, 152.0], [70.8, 152.0], [70.9, 153.0], [71.0, 154.0], [71.1, 156.0], [71.2, 161.0], [71.3, 164.0], [71.4, 164.0], [71.5, 166.0], [71.6, 167.0], [71.7, 170.0], [71.8, 170.0], [71.9, 171.0], [72.0, 172.0], [72.1, 173.0], [72.2, 173.0], [72.3, 174.0], [72.4, 174.0], [72.5, 174.0], [72.6, 174.0], [72.7, 174.0], [72.8, 177.0], [72.9, 177.0], [73.0, 178.0], [73.1, 180.0], [73.2, 180.0], [73.3, 183.0], [73.4, 183.0], [73.5, 184.0], [73.6, 185.0], [73.7, 186.0], [73.8, 186.0], [73.9, 189.0], [74.0, 191.0], [74.1, 192.0], [74.2, 192.0], [74.3, 192.0], [74.4, 193.0], [74.5, 193.0], [74.6, 196.0], [74.7, 197.0], [74.8, 199.0], [74.9, 202.0], [75.0, 202.0], [75.1, 202.0], [75.2, 206.0], [75.3, 210.0], [75.4, 210.0], [75.5, 211.0], [75.6, 212.0], [75.7, 213.0], [75.8, 216.0], [75.9, 220.0], [76.0, 224.0], [76.1, 225.0], [76.2, 225.0], [76.3, 227.0], [76.4, 229.0], [76.5, 233.0], [76.6, 233.0], [76.7, 233.0], [76.8, 235.0], [76.9, 236.0], [77.0, 238.0], [77.1, 239.0], [77.2, 242.0], [77.3, 249.0], [77.4, 252.0], [77.5, 257.0], [77.6, 257.0], [77.7, 260.0], [77.8, 262.0], [77.9, 263.0], [78.0, 264.0], [78.1, 265.0], [78.2, 266.0], [78.3, 266.0], [78.4, 270.0], [78.5, 271.0], [78.6, 271.0], [78.7, 272.0], [78.8, 273.0], [78.9, 273.0], [79.0, 278.0], [79.1, 279.0], [79.2, 280.0], [79.3, 282.0], [79.4, 284.0], [79.5, 284.0], [79.6, 284.0], [79.7, 285.0], [79.8, 285.0], [79.9, 285.0], [80.0, 289.0], [80.1, 296.0], [80.2, 298.0], [80.3, 299.0], [80.4, 301.0], [80.5, 301.0], [80.6, 302.0], [80.7, 305.0], [80.8, 307.0], [80.9, 307.0], [81.0, 308.0], [81.1, 309.0], [81.2, 310.0], [81.3, 310.0], [81.4, 311.0], [81.5, 313.0], [81.6, 315.0], [81.7, 316.0], [81.8, 316.0], [81.9, 318.0], [82.0, 319.0], [82.1, 320.0], [82.2, 321.0], [82.3, 321.0], [82.4, 322.0], [82.5, 322.0], [82.6, 324.0], [82.7, 329.0], [82.8, 329.0], [82.9, 332.0], [83.0, 334.0], [83.1, 334.0], [83.2, 334.0], [83.3, 341.0], [83.4, 342.0], [83.5, 345.0], [83.6, 346.0], [83.7, 348.0], [83.8, 349.0], [83.9, 350.0], [84.0, 350.0], [84.1, 356.0], [84.2, 357.0], [84.3, 359.0], [84.4, 361.0], [84.5, 363.0], [84.6, 371.0], [84.7, 372.0], [84.8, 375.0], [84.9, 376.0], [85.0, 382.0], [85.1, 384.0], [85.2, 384.0], [85.3, 386.0], [85.4, 386.0], [85.5, 387.0], [85.6, 392.0], [85.7, 395.0], [85.8, 397.0], [85.9, 398.0], [86.0, 399.0], [86.1, 399.0], [86.2, 399.0], [86.3, 399.0], [86.4, 400.0], [86.5, 402.0], [86.6, 403.0], [86.7, 405.0], [86.8, 406.0], [86.9, 406.0], [87.0, 406.0], [87.1, 407.0], [87.2, 408.0], [87.3, 413.0], [87.4, 414.0], [87.5, 414.0], [87.6, 420.0], [87.7, 420.0], [87.8, 421.0], [87.9, 421.0], [88.0, 422.0], [88.1, 424.0], [88.2, 424.0], [88.3, 425.0], [88.4, 428.0], [88.5, 434.0], [88.6, 436.0], [88.7, 441.0], [88.8, 443.0], [88.9, 448.0], [89.0, 449.0], [89.1, 450.0], [89.2, 451.0], [89.3, 452.0], [89.4, 452.0], [89.5, 452.0], [89.6, 452.0], [89.7, 453.0], [89.8, 453.0], [89.9, 455.0], [90.0, 455.0], [90.1, 456.0], [90.2, 456.0], [90.3, 457.0], [90.4, 457.0], [90.5, 458.0], [90.6, 458.0], [90.7, 464.0], [90.8, 465.0], [90.9, 465.0], [91.0, 465.0], [91.1, 465.0], [91.2, 465.0], [91.3, 465.0], [91.4, 466.0], [91.5, 466.0], [91.6, 466.0], [91.7, 466.0], [91.8, 466.0], [91.9, 467.0], [92.0, 468.0], [92.1, 468.0], [92.2, 469.0], [92.3, 470.0], [92.4, 471.0], [92.5, 473.0], [92.6, 473.0], [92.7, 473.0], [92.8, 475.0], [92.9, 476.0], [93.0, 476.0], [93.1, 476.0], [93.2, 478.0], [93.3, 479.0], [93.4, 479.0], [93.5, 479.0], [93.6, 484.0], [93.7, 484.0], [93.8, 484.0], [93.9, 485.0], [94.0, 486.0], [94.1, 490.0], [94.2, 494.0], [94.3, 503.0], [94.4, 503.0], [94.5, 506.0], [94.6, 508.0], [94.7, 517.0], [94.8, 522.0], [94.9, 553.0], [95.0, 554.0], [95.1, 567.0], [95.2, 571.0], [95.3, 576.0], [95.4, 579.0], [95.5, 580.0], [95.6, 581.0], [95.7, 592.0], [95.8, 592.0], [95.9, 594.0], [96.0, 596.0], [96.1, 599.0], [96.2, 606.0], [96.3, 614.0], [96.4, 641.0], [96.5, 645.0], [96.6, 646.0], [96.7, 650.0], [96.8, 656.0], [96.9, 658.0], [97.0, 659.0], [97.1, 660.0], [97.2, 661.0], [97.3, 667.0], [97.4, 670.0], [97.5, 671.0], [97.6, 672.0], [97.7, 673.0], [97.8, 675.0], [97.9, 678.0], [98.0, 681.0], [98.1, 684.0], [98.2, 687.0], [98.3, 688.0], [98.4, 707.0], [98.5, 713.0], [98.6, 724.0], [98.7, 725.0], [98.8, 727.0], [98.9, 732.0], [99.0, 738.0], [99.1, 739.0], [99.2, 745.0], [99.3, 747.0], [99.4, 747.0], [99.5, 752.0], [99.6, 759.0], [99.7, 766.0], [99.8, 786.0], [99.9, 786.0], [100.0, 809.0]], "isOverall": false, "label": "gateway_cl/helloauth-0", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 4.0], [12.3, 4.0], [12.4, 4.0], [12.5, 4.0], [12.6, 4.0], [12.7, 4.0], [12.8, 4.0], [12.9, 4.0], [13.0, 4.0], [13.1, 4.0], [13.2, 4.0], [13.3, 4.0], [13.4, 4.0], [13.5, 4.0], [13.6, 4.0], [13.7, 4.0], [13.8, 4.0], [13.9, 4.0], [14.0, 4.0], [14.1, 4.0], [14.2, 4.0], [14.3, 4.0], [14.4, 4.0], [14.5, 4.0], [14.6, 4.0], [14.7, 4.0], [14.8, 4.0], [14.9, 4.0], [15.0, 4.0], [15.1, 4.0], [15.2, 4.0], [15.3, 4.0], [15.4, 4.0], [15.5, 4.0], [15.6, 4.0], [15.7, 4.0], [15.8, 4.0], [15.9, 4.0], [16.0, 4.0], [16.1, 4.0], [16.2, 4.0], [16.3, 4.0], [16.4, 5.0], [16.5, 5.0], [16.6, 5.0], [16.7, 5.0], [16.8, 5.0], [16.9, 5.0], [17.0, 5.0], [17.1, 5.0], [17.2, 5.0], [17.3, 5.0], [17.4, 5.0], [17.5, 5.0], [17.6, 5.0], [17.7, 5.0], [17.8, 5.0], [17.9, 5.0], [18.0, 5.0], [18.1, 5.0], [18.2, 5.0], [18.3, 5.0], [18.4, 5.0], [18.5, 5.0], [18.6, 5.0], [18.7, 5.0], [18.8, 5.0], [18.9, 5.0], [19.0, 5.0], [19.1, 5.0], [19.2, 5.0], [19.3, 5.0], [19.4, 5.0], [19.5, 5.0], [19.6, 5.0], [19.7, 5.0], [19.8, 5.0], [19.9, 5.0], [20.0, 5.0], [20.1, 5.0], [20.2, 5.0], [20.3, 5.0], [20.4, 5.0], [20.5, 5.0], [20.6, 5.0], [20.7, 5.0], [20.8, 5.0], [20.9, 5.0], [21.0, 5.0], [21.1, 5.0], [21.2, 5.0], [21.3, 5.0], [21.4, 5.0], [21.5, 5.0], [21.6, 6.0], [21.7, 6.0], [21.8, 6.0], [21.9, 6.0], [22.0, 6.0], [22.1, 6.0], [22.2, 6.0], [22.3, 6.0], [22.4, 6.0], [22.5, 6.0], [22.6, 6.0], [22.7, 6.0], [22.8, 6.0], [22.9, 6.0], [23.0, 6.0], [23.1, 6.0], [23.2, 6.0], [23.3, 6.0], [23.4, 6.0], [23.5, 6.0], [23.6, 6.0], [23.7, 6.0], [23.8, 6.0], [23.9, 6.0], [24.0, 6.0], [24.1, 6.0], [24.2, 6.0], [24.3, 6.0], [24.4, 6.0], [24.5, 6.0], [24.6, 6.0], [24.7, 6.0], [24.8, 6.0], [24.9, 6.0], [25.0, 6.0], [25.1, 6.0], [25.2, 6.0], [25.3, 6.0], [25.4, 6.0], [25.5, 6.0], [25.6, 6.0], [25.7, 6.0], [25.8, 6.0], [25.9, 6.0], [26.0, 6.0], [26.1, 6.0], [26.2, 6.0], [26.3, 6.0], [26.4, 6.0], [26.5, 6.0], [26.6, 7.0], [26.7, 7.0], [26.8, 7.0], [26.9, 7.0], [27.0, 7.0], [27.1, 7.0], [27.2, 7.0], [27.3, 7.0], [27.4, 7.0], [27.5, 7.0], [27.6, 7.0], [27.7, 7.0], [27.8, 7.0], [27.9, 7.0], [28.0, 7.0], [28.1, 7.0], [28.2, 7.0], [28.3, 7.0], [28.4, 7.0], [28.5, 7.0], [28.6, 7.0], [28.7, 7.0], [28.8, 7.0], [28.9, 7.0], [29.0, 7.0], [29.1, 7.0], [29.2, 7.0], [29.3, 7.0], [29.4, 7.0], [29.5, 7.0], [29.6, 7.0], [29.7, 7.0], [29.8, 7.0], [29.9, 7.0], [30.0, 7.0], [30.1, 7.0], [30.2, 7.0], [30.3, 7.0], [30.4, 7.0], [30.5, 7.0], [30.6, 7.0], [30.7, 7.0], [30.8, 7.0], [30.9, 7.0], [31.0, 7.0], [31.1, 7.0], [31.2, 7.0], [31.3, 7.0], [31.4, 7.0], [31.5, 8.0], [31.6, 8.0], [31.7, 8.0], [31.8, 8.0], [31.9, 8.0], [32.0, 8.0], [32.1, 8.0], [32.2, 8.0], [32.3, 8.0], [32.4, 8.0], [32.5, 8.0], [32.6, 8.0], [32.7, 8.0], [32.8, 8.0], [32.9, 8.0], [33.0, 8.0], [33.1, 8.0], [33.2, 8.0], [33.3, 8.0], [33.4, 8.0], [33.5, 8.0], [33.6, 8.0], [33.7, 8.0], [33.8, 8.0], [33.9, 8.0], [34.0, 8.0], [34.1, 8.0], [34.2, 8.0], [34.3, 8.0], [34.4, 8.0], [34.5, 8.0], [34.6, 8.0], [34.7, 8.0], [34.8, 9.0], [34.9, 9.0], [35.0, 9.0], [35.1, 9.0], [35.2, 9.0], [35.3, 9.0], [35.4, 9.0], [35.5, 9.0], [35.6, 9.0], [35.7, 9.0], [35.8, 9.0], [35.9, 9.0], [36.0, 9.0], [36.1, 9.0], [36.2, 9.0], [36.3, 9.0], [36.4, 9.0], [36.5, 9.0], [36.6, 9.0], [36.7, 9.0], [36.8, 9.0], [36.9, 9.0], [37.0, 9.0], [37.1, 9.0], [37.2, 9.0], [37.3, 9.0], [37.4, 9.0], [37.5, 9.0], [37.6, 9.0], [37.7, 9.0], [37.8, 9.0], [37.9, 10.0], [38.0, 10.0], [38.1, 10.0], [38.2, 10.0], [38.3, 10.0], [38.4, 10.0], [38.5, 10.0], [38.6, 10.0], [38.7, 10.0], [38.8, 10.0], [38.9, 10.0], [39.0, 10.0], [39.1, 10.0], [39.2, 10.0], [39.3, 10.0], [39.4, 10.0], [39.5, 10.0], [39.6, 10.0], [39.7, 10.0], [39.8, 10.0], [39.9, 10.0], [40.0, 10.0], [40.1, 10.0], [40.2, 10.0], [40.3, 10.0], [40.4, 10.0], [40.5, 10.0], [40.6, 10.0], [40.7, 10.0], [40.8, 10.0], [40.9, 11.0], [41.0, 11.0], [41.1, 11.0], [41.2, 11.0], [41.3, 11.0], [41.4, 11.0], [41.5, 11.0], [41.6, 11.0], [41.7, 11.0], [41.8, 11.0], [41.9, 11.0], [42.0, 11.0], [42.1, 11.0], [42.2, 11.0], [42.3, 11.0], [42.4, 11.0], [42.5, 11.0], [42.6, 11.0], [42.7, 11.0], [42.8, 11.0], [42.9, 11.0], [43.0, 11.0], [43.1, 11.0], [43.2, 11.0], [43.3, 11.0], [43.4, 11.0], [43.5, 11.0], [43.6, 11.0], [43.7, 12.0], [43.8, 12.0], [43.9, 12.0], [44.0, 12.0], [44.1, 12.0], [44.2, 12.0], [44.3, 12.0], [44.4, 12.0], [44.5, 12.0], [44.6, 12.0], [44.7, 12.0], [44.8, 12.0], [44.9, 12.0], [45.0, 12.0], [45.1, 12.0], [45.2, 12.0], [45.3, 12.0], [45.4, 12.0], [45.5, 12.0], [45.6, 12.0], [45.7, 12.0], [45.8, 12.0], [45.9, 12.0], [46.0, 12.0], [46.1, 12.0], [46.2, 12.0], [46.3, 12.0], [46.4, 12.0], [46.5, 12.0], [46.6, 12.0], [46.7, 12.0], [46.8, 12.0], [46.9, 12.0], [47.0, 12.0], [47.1, 12.0], [47.2, 13.0], [47.3, 13.0], [47.4, 13.0], [47.5, 13.0], [47.6, 13.0], [47.7, 13.0], [47.8, 13.0], [47.9, 13.0], [48.0, 13.0], [48.1, 13.0], [48.2, 13.0], [48.3, 13.0], [48.4, 13.0], [48.5, 13.0], [48.6, 13.0], [48.7, 13.0], [48.8, 14.0], [48.9, 14.0], [49.0, 14.0], [49.1, 14.0], [49.2, 14.0], [49.3, 14.0], [49.4, 14.0], [49.5, 14.0], [49.6, 14.0], [49.7, 14.0], [49.8, 14.0], [49.9, 14.0], [50.0, 14.0], [50.1, 14.0], [50.2, 14.0], [50.3, 15.0], [50.4, 15.0], [50.5, 15.0], [50.6, 15.0], [50.7, 15.0], [50.8, 15.0], [50.9, 15.0], [51.0, 15.0], [51.1, 15.0], [51.2, 15.0], [51.3, 15.0], [51.4, 15.0], [51.5, 15.0], [51.6, 15.0], [51.7, 15.0], [51.8, 15.0], [51.9, 15.0], [52.0, 16.0], [52.1, 16.0], [52.2, 16.0], [52.3, 16.0], [52.4, 16.0], [52.5, 16.0], [52.6, 16.0], [52.7, 16.0], [52.8, 16.0], [52.9, 16.0], [53.0, 16.0], [53.1, 16.0], [53.2, 16.0], [53.3, 16.0], [53.4, 16.0], [53.5, 16.0], [53.6, 16.0], [53.7, 16.0], [53.8, 16.0], [53.9, 16.0], [54.0, 16.0], [54.1, 16.0], [54.2, 16.0], [54.3, 17.0], [54.4, 17.0], [54.5, 17.0], [54.6, 17.0], [54.7, 17.0], [54.8, 17.0], [54.9, 17.0], [55.0, 17.0], [55.1, 17.0], [55.2, 17.0], [55.3, 17.0], [55.4, 17.0], [55.5, 17.0], [55.6, 17.0], [55.7, 17.0], [55.8, 17.0], [55.9, 17.0], [56.0, 17.0], [56.1, 17.0], [56.2, 17.0], [56.3, 17.0], [56.4, 17.0], [56.5, 18.0], [56.6, 18.0], [56.7, 18.0], [56.8, 18.0], [56.9, 18.0], [57.0, 18.0], [57.1, 18.0], [57.2, 18.0], [57.3, 18.0], [57.4, 18.0], [57.5, 18.0], [57.6, 19.0], [57.7, 19.0], [57.8, 19.0], [57.9, 19.0], [58.0, 19.0], [58.1, 19.0], [58.2, 19.0], [58.3, 19.0], [58.4, 19.0], [58.5, 19.0], [58.6, 19.0], [58.7, 19.0], [58.8, 19.0], [58.9, 19.0], [59.0, 19.0], [59.1, 19.0], [59.2, 19.0], [59.3, 19.0], [59.4, 20.0], [59.5, 20.0], [59.6, 20.0], [59.7, 20.0], [59.8, 20.0], [59.9, 20.0], [60.0, 20.0], [60.1, 20.0], [60.2, 21.0], [60.3, 21.0], [60.4, 21.0], [60.5, 21.0], [60.6, 21.0], [60.7, 21.0], [60.8, 21.0], [60.9, 22.0], [61.0, 22.0], [61.1, 22.0], [61.2, 22.0], [61.3, 22.0], [61.4, 22.0], [61.5, 22.0], [61.6, 22.0], [61.7, 22.0], [61.8, 22.0], [61.9, 22.0], [62.0, 23.0], [62.1, 23.0], [62.2, 23.0], [62.3, 23.0], [62.4, 24.0], [62.5, 24.0], [62.6, 24.0], [62.7, 25.0], [62.8, 25.0], [62.9, 25.0], [63.0, 25.0], [63.1, 26.0], [63.2, 26.0], [63.3, 27.0], [63.4, 27.0], [63.5, 27.0], [63.6, 27.0], [63.7, 28.0], [63.8, 28.0], [63.9, 28.0], [64.0, 28.0], [64.1, 29.0], [64.2, 29.0], [64.3, 29.0], [64.4, 29.0], [64.5, 29.0], [64.6, 29.0], [64.7, 29.0], [64.8, 29.0], [64.9, 30.0], [65.0, 30.0], [65.1, 30.0], [65.2, 30.0], [65.3, 31.0], [65.4, 31.0], [65.5, 31.0], [65.6, 31.0], [65.7, 31.0], [65.8, 31.0], [65.9, 31.0], [66.0, 32.0], [66.1, 32.0], [66.2, 32.0], [66.3, 32.0], [66.4, 33.0], [66.5, 33.0], [66.6, 34.0], [66.7, 34.0], [66.8, 34.0], [66.9, 34.0], [67.0, 35.0], [67.1, 35.0], [67.2, 35.0], [67.3, 35.0], [67.4, 35.0], [67.5, 36.0], [67.6, 36.0], [67.7, 36.0], [67.8, 36.0], [67.9, 36.0], [68.0, 36.0], [68.1, 36.0], [68.2, 36.0], [68.3, 38.0], [68.4, 38.0], [68.5, 38.0], [68.6, 38.0], [68.7, 39.0], [68.8, 39.0], [68.9, 39.0], [69.0, 39.0], [69.1, 39.0], [69.2, 40.0], [69.3, 41.0], [69.4, 42.0], [69.5, 42.0], [69.6, 42.0], [69.7, 42.0], [69.8, 45.0], [69.9, 45.0], [70.0, 48.0], [70.1, 48.0], [70.2, 50.0], [70.3, 51.0], [70.4, 52.0], [70.5, 53.0], [70.6, 55.0], [70.7, 57.0], [70.8, 57.0], [70.9, 58.0], [71.0, 58.0], [71.1, 60.0], [71.2, 60.0], [71.3, 63.0], [71.4, 65.0], [71.5, 66.0], [71.6, 67.0], [71.7, 67.0], [71.8, 67.0], [71.9, 68.0], [72.0, 68.0], [72.1, 70.0], [72.2, 70.0], [72.3, 71.0], [72.4, 71.0], [72.5, 73.0], [72.6, 73.0], [72.7, 74.0], [72.8, 75.0], [72.9, 76.0], [73.0, 76.0], [73.1, 78.0], [73.2, 79.0], [73.3, 79.0], [73.4, 80.0], [73.5, 82.0], [73.6, 83.0], [73.7, 83.0], [73.8, 84.0], [73.9, 84.0], [74.0, 85.0], [74.1, 86.0], [74.2, 86.0], [74.3, 87.0], [74.4, 88.0], [74.5, 88.0], [74.6, 89.0], [74.7, 90.0], [74.8, 90.0], [74.9, 92.0], [75.0, 93.0], [75.1, 93.0], [75.2, 94.0], [75.3, 94.0], [75.4, 96.0], [75.5, 97.0], [75.6, 97.0], [75.7, 97.0], [75.8, 98.0], [75.9, 98.0], [76.0, 98.0], [76.1, 98.0], [76.2, 98.0], [76.3, 98.0], [76.4, 99.0], [76.5, 99.0], [76.6, 99.0], [76.7, 100.0], [76.8, 102.0], [76.9, 102.0], [77.0, 103.0], [77.1, 103.0], [77.2, 104.0], [77.3, 104.0], [77.4, 105.0], [77.5, 105.0], [77.6, 106.0], [77.7, 106.0], [77.8, 107.0], [77.9, 107.0], [78.0, 107.0], [78.1, 107.0], [78.2, 109.0], [78.3, 109.0], [78.4, 109.0], [78.5, 111.0], [78.6, 111.0], [78.7, 111.0], [78.8, 111.0], [78.9, 112.0], [79.0, 116.0], [79.1, 117.0], [79.2, 120.0], [79.3, 120.0], [79.4, 121.0], [79.5, 122.0], [79.6, 122.0], [79.7, 124.0], [79.8, 124.0], [79.9, 126.0], [80.0, 126.0], [80.1, 127.0], [80.2, 128.0], [80.3, 129.0], [80.4, 129.0], [80.5, 131.0], [80.6, 131.0], [80.7, 132.0], [80.8, 133.0], [80.9, 133.0], [81.0, 136.0], [81.1, 137.0], [81.2, 137.0], [81.3, 138.0], [81.4, 139.0], [81.5, 140.0], [81.6, 140.0], [81.7, 143.0], [81.8, 144.0], [81.9, 145.0], [82.0, 146.0], [82.1, 146.0], [82.2, 147.0], [82.3, 148.0], [82.4, 148.0], [82.5, 150.0], [82.6, 150.0], [82.7, 151.0], [82.8, 151.0], [82.9, 152.0], [83.0, 152.0], [83.1, 152.0], [83.2, 153.0], [83.3, 153.0], [83.4, 153.0], [83.5, 153.0], [83.6, 153.0], [83.7, 156.0], [83.8, 156.0], [83.9, 156.0], [84.0, 156.0], [84.1, 157.0], [84.2, 160.0], [84.3, 160.0], [84.4, 160.0], [84.5, 161.0], [84.6, 162.0], [84.7, 162.0], [84.8, 163.0], [84.9, 163.0], [85.0, 164.0], [85.1, 165.0], [85.2, 165.0], [85.3, 166.0], [85.4, 167.0], [85.5, 167.0], [85.6, 168.0], [85.7, 169.0], [85.8, 170.0], [85.9, 170.0], [86.0, 170.0], [86.1, 170.0], [86.2, 174.0], [86.3, 175.0], [86.4, 175.0], [86.5, 175.0], [86.6, 175.0], [86.7, 177.0], [86.8, 178.0], [86.9, 178.0], [87.0, 178.0], [87.1, 178.0], [87.2, 181.0], [87.3, 181.0], [87.4, 181.0], [87.5, 182.0], [87.6, 182.0], [87.7, 182.0], [87.8, 185.0], [87.9, 186.0], [88.0, 186.0], [88.1, 188.0], [88.2, 188.0], [88.3, 189.0], [88.4, 189.0], [88.5, 189.0], [88.6, 190.0], [88.7, 191.0], [88.8, 192.0], [88.9, 192.0], [89.0, 193.0], [89.1, 193.0], [89.2, 194.0], [89.3, 194.0], [89.4, 195.0], [89.5, 195.0], [89.6, 195.0], [89.7, 195.0], [89.8, 195.0], [89.9, 195.0], [90.0, 196.0], [90.1, 196.0], [90.2, 196.0], [90.3, 196.0], [90.4, 197.0], [90.5, 197.0], [90.6, 198.0], [90.7, 198.0], [90.8, 199.0], [90.9, 199.0], [91.0, 199.0], [91.1, 200.0], [91.2, 200.0], [91.3, 200.0], [91.4, 201.0], [91.5, 203.0], [91.6, 204.0], [91.7, 204.0], [91.8, 204.0], [91.9, 204.0], [92.0, 204.0], [92.1, 205.0], [92.2, 207.0], [92.3, 207.0], [92.4, 208.0], [92.5, 208.0], [92.6, 208.0], [92.7, 208.0], [92.8, 209.0], [92.9, 209.0], [93.0, 209.0], [93.1, 210.0], [93.2, 210.0], [93.3, 210.0], [93.4, 212.0], [93.5, 212.0], [93.6, 213.0], [93.7, 213.0], [93.8, 213.0], [93.9, 217.0], [94.0, 220.0], [94.1, 223.0], [94.2, 223.0], [94.3, 224.0], [94.4, 227.0], [94.5, 227.0], [94.6, 230.0], [94.7, 230.0], [94.8, 234.0], [94.9, 234.0], [95.0, 234.0], [95.1, 236.0], [95.2, 236.0], [95.3, 237.0], [95.4, 237.0], [95.5, 237.0], [95.6, 238.0], [95.7, 240.0], [95.8, 240.0], [95.9, 242.0], [96.0, 242.0], [96.1, 242.0], [96.2, 243.0], [96.3, 243.0], [96.4, 243.0], [96.5, 245.0], [96.6, 245.0], [96.7, 247.0], [96.8, 248.0], [96.9, 248.0], [97.0, 249.0], [97.1, 251.0], [97.2, 251.0], [97.3, 253.0], [97.4, 253.0], [97.5, 253.0], [97.6, 254.0], [97.7, 256.0], [97.8, 257.0], [97.9, 260.0], [98.0, 261.0], [98.1, 261.0], [98.2, 262.0], [98.3, 263.0], [98.4, 264.0], [98.5, 265.0], [98.6, 265.0], [98.7, 266.0], [98.8, 266.0], [98.9, 270.0], [99.0, 270.0], [99.1, 271.0], [99.2, 271.0], [99.3, 278.0], [99.4, 279.0], [99.5, 284.0], [99.6, 294.0], [99.7, 295.0], [99.8, 326.0], [99.9, 335.0], [100.0, 355.0]], "isOverall": false, "label": "gateway_cl/helloauth-1", "isController": false}, {"data": [[0.0, 41.0], [0.1, 47.0], [0.2, 64.0], [0.3, 71.0], [0.4, 77.0], [0.5, 81.0], [0.6, 82.0], [0.7, 87.0], [0.8, 89.0], [0.9, 92.0], [1.0, 101.0], [1.1, 107.0], [1.2, 108.0], [1.3, 120.0], [1.4, 125.0], [1.5, 127.0], [1.6, 135.0], [1.7, 135.0], [1.8, 148.0], [1.9, 160.0], [2.0, 164.0], [2.1, 165.0], [2.2, 167.0], [2.3, 177.0], [2.4, 183.0], [2.5, 186.0], [2.6, 204.0], [2.7, 205.0], [2.8, 218.0], [2.9, 221.0], [3.0, 224.0], [3.1, 226.0], [3.2, 228.0], [3.3, 241.0], [3.4, 243.0], [3.5, 244.0], [3.6, 244.0], [3.7, 250.0], [3.8, 274.0], [3.9, 280.0], [4.0, 290.0], [4.1, 291.0], [4.2, 296.0], [4.3, 310.0], [4.4, 312.0], [4.5, 313.0], [4.6, 314.0], [4.7, 314.0], [4.8, 316.0], [4.9, 317.0], [5.0, 320.0], [5.1, 326.0], [5.2, 327.0], [5.3, 330.0], [5.4, 330.0], [5.5, 331.0], [5.6, 333.0], [5.7, 334.0], [5.8, 334.0], [5.9, 334.0], [6.0, 337.0], [6.1, 340.0], [6.2, 344.0], [6.3, 344.0], [6.4, 346.0], [6.5, 353.0], [6.6, 355.0], [6.7, 359.0], [6.8, 362.0], [6.9, 367.0], [7.0, 370.0], [7.1, 371.0], [7.2, 373.0], [7.3, 375.0], [7.4, 376.0], [7.5, 378.0], [7.6, 385.0], [7.7, 387.0], [7.8, 387.0], [7.9, 388.0], [8.0, 391.0], [8.1, 392.0], [8.2, 394.0], [8.3, 394.0], [8.4, 398.0], [8.5, 400.0], [8.6, 400.0], [8.7, 404.0], [8.8, 409.0], [8.9, 413.0], [9.0, 414.0], [9.1, 414.0], [9.2, 426.0], [9.3, 427.0], [9.4, 430.0], [9.5, 430.0], [9.6, 434.0], [9.7, 435.0], [9.8, 436.0], [9.9, 437.0], [10.0, 438.0], [10.1, 439.0], [10.2, 440.0], [10.3, 449.0], [10.4, 450.0], [10.5, 450.0], [10.6, 456.0], [10.7, 458.0], [10.8, 464.0], [10.9, 464.0], [11.0, 464.0], [11.1, 477.0], [11.2, 481.0], [11.3, 485.0], [11.4, 489.0], [11.5, 491.0], [11.6, 507.0], [11.7, 509.0], [11.8, 510.0], [11.9, 510.0], [12.0, 513.0], [12.1, 525.0], [12.2, 528.0], [12.3, 529.0], [12.4, 532.0], [12.5, 537.0], [12.6, 538.0], [12.7, 545.0], [12.8, 546.0], [12.9, 546.0], [13.0, 549.0], [13.1, 550.0], [13.2, 553.0], [13.3, 555.0], [13.4, 556.0], [13.5, 558.0], [13.6, 559.0], [13.7, 560.0], [13.8, 560.0], [13.9, 562.0], [14.0, 562.0], [14.1, 566.0], [14.2, 566.0], [14.3, 567.0], [14.4, 569.0], [14.5, 570.0], [14.6, 571.0], [14.7, 573.0], [14.8, 574.0], [14.9, 574.0], [15.0, 580.0], [15.1, 580.0], [15.2, 582.0], [15.3, 583.0], [15.4, 588.0], [15.5, 593.0], [15.6, 595.0], [15.7, 600.0], [15.8, 602.0], [15.9, 603.0], [16.0, 605.0], [16.1, 606.0], [16.2, 608.0], [16.3, 608.0], [16.4, 609.0], [16.5, 613.0], [16.6, 616.0], [16.7, 617.0], [16.8, 617.0], [16.9, 618.0], [17.0, 619.0], [17.1, 619.0], [17.2, 619.0], [17.3, 620.0], [17.4, 620.0], [17.5, 623.0], [17.6, 625.0], [17.7, 626.0], [17.8, 627.0], [17.9, 628.0], [18.0, 628.0], [18.1, 628.0], [18.2, 629.0], [18.3, 632.0], [18.4, 633.0], [18.5, 634.0], [18.6, 636.0], [18.7, 636.0], [18.8, 637.0], [18.9, 638.0], [19.0, 638.0], [19.1, 641.0], [19.2, 643.0], [19.3, 643.0], [19.4, 644.0], [19.5, 644.0], [19.6, 646.0], [19.7, 646.0], [19.8, 647.0], [19.9, 647.0], [20.0, 648.0], [20.1, 649.0], [20.2, 649.0], [20.3, 649.0], [20.4, 649.0], [20.5, 653.0], [20.6, 653.0], [20.7, 654.0], [20.8, 654.0], [20.9, 656.0], [21.0, 657.0], [21.1, 659.0], [21.2, 659.0], [21.3, 660.0], [21.4, 662.0], [21.5, 663.0], [21.6, 667.0], [21.7, 667.0], [21.8, 667.0], [21.9, 669.0], [22.0, 669.0], [22.1, 670.0], [22.2, 680.0], [22.3, 683.0], [22.4, 684.0], [22.5, 684.0], [22.6, 685.0], [22.7, 687.0], [22.8, 688.0], [22.9, 694.0], [23.0, 696.0], [23.1, 696.0], [23.2, 697.0], [23.3, 698.0], [23.4, 699.0], [23.5, 701.0], [23.6, 701.0], [23.7, 703.0], [23.8, 707.0], [23.9, 707.0], [24.0, 709.0], [24.1, 711.0], [24.2, 714.0], [24.3, 714.0], [24.4, 719.0], [24.5, 719.0], [24.6, 719.0], [24.7, 722.0], [24.8, 723.0], [24.9, 723.0], [25.0, 724.0], [25.1, 726.0], [25.2, 726.0], [25.3, 726.0], [25.4, 726.0], [25.5, 728.0], [25.6, 730.0], [25.7, 730.0], [25.8, 730.0], [25.9, 731.0], [26.0, 733.0], [26.1, 737.0], [26.2, 740.0], [26.3, 741.0], [26.4, 741.0], [26.5, 741.0], [26.6, 743.0], [26.7, 746.0], [26.8, 746.0], [26.9, 749.0], [27.0, 750.0], [27.1, 751.0], [27.2, 752.0], [27.3, 752.0], [27.4, 752.0], [27.5, 752.0], [27.6, 754.0], [27.7, 758.0], [27.8, 758.0], [27.9, 762.0], [28.0, 763.0], [28.1, 765.0], [28.2, 767.0], [28.3, 773.0], [28.4, 781.0], [28.5, 781.0], [28.6, 784.0], [28.7, 784.0], [28.8, 784.0], [28.9, 785.0], [29.0, 785.0], [29.1, 786.0], [29.2, 787.0], [29.3, 790.0], [29.4, 791.0], [29.5, 791.0], [29.6, 793.0], [29.7, 794.0], [29.8, 796.0], [29.9, 796.0], [30.0, 798.0], [30.1, 798.0], [30.2, 798.0], [30.3, 799.0], [30.4, 801.0], [30.5, 803.0], [30.6, 803.0], [30.7, 805.0], [30.8, 806.0], [30.9, 810.0], [31.0, 812.0], [31.1, 813.0], [31.2, 816.0], [31.3, 817.0], [31.4, 817.0], [31.5, 819.0], [31.6, 824.0], [31.7, 829.0], [31.8, 831.0], [31.9, 832.0], [32.0, 837.0], [32.1, 840.0], [32.2, 841.0], [32.3, 841.0], [32.4, 843.0], [32.5, 844.0], [32.6, 847.0], [32.7, 850.0], [32.8, 852.0], [32.9, 854.0], [33.0, 858.0], [33.1, 858.0], [33.2, 858.0], [33.3, 859.0], [33.4, 860.0], [33.5, 861.0], [33.6, 861.0], [33.7, 863.0], [33.8, 863.0], [33.9, 864.0], [34.0, 866.0], [34.1, 866.0], [34.2, 868.0], [34.3, 870.0], [34.4, 872.0], [34.5, 873.0], [34.6, 875.0], [34.7, 875.0], [34.8, 877.0], [34.9, 878.0], [35.0, 879.0], [35.1, 879.0], [35.2, 883.0], [35.3, 889.0], [35.4, 890.0], [35.5, 892.0], [35.6, 895.0], [35.7, 897.0], [35.8, 902.0], [35.9, 903.0], [36.0, 904.0], [36.1, 907.0], [36.2, 908.0], [36.3, 911.0], [36.4, 911.0], [36.5, 913.0], [36.6, 917.0], [36.7, 917.0], [36.8, 917.0], [36.9, 920.0], [37.0, 922.0], [37.1, 922.0], [37.2, 922.0], [37.3, 922.0], [37.4, 927.0], [37.5, 927.0], [37.6, 928.0], [37.7, 932.0], [37.8, 932.0], [37.9, 938.0], [38.0, 940.0], [38.1, 942.0], [38.2, 946.0], [38.3, 946.0], [38.4, 948.0], [38.5, 949.0], [38.6, 950.0], [38.7, 952.0], [38.8, 952.0], [38.9, 955.0], [39.0, 958.0], [39.1, 959.0], [39.2, 959.0], [39.3, 963.0], [39.4, 964.0], [39.5, 967.0], [39.6, 968.0], [39.7, 969.0], [39.8, 969.0], [39.9, 973.0], [40.0, 973.0], [40.1, 974.0], [40.2, 974.0], [40.3, 978.0], [40.4, 981.0], [40.5, 981.0], [40.6, 982.0], [40.7, 982.0], [40.8, 984.0], [40.9, 988.0], [41.0, 988.0], [41.1, 989.0], [41.2, 989.0], [41.3, 989.0], [41.4, 990.0], [41.5, 991.0], [41.6, 992.0], [41.7, 992.0], [41.8, 993.0], [41.9, 993.0], [42.0, 994.0], [42.1, 999.0], [42.2, 999.0], [42.3, 1000.0], [42.4, 1001.0], [42.5, 1004.0], [42.6, 1006.0], [42.7, 1008.0], [42.8, 1009.0], [42.9, 1014.0], [43.0, 1015.0], [43.1, 1016.0], [43.2, 1020.0], [43.3, 1020.0], [43.4, 1021.0], [43.5, 1021.0], [43.6, 1022.0], [43.7, 1023.0], [43.8, 1024.0], [43.9, 1025.0], [44.0, 1026.0], [44.1, 1026.0], [44.2, 1027.0], [44.3, 1027.0], [44.4, 1028.0], [44.5, 1030.0], [44.6, 1030.0], [44.7, 1030.0], [44.8, 1035.0], [44.9, 1037.0], [45.0, 1042.0], [45.1, 1042.0], [45.2, 1042.0], [45.3, 1043.0], [45.4, 1043.0], [45.5, 1043.0], [45.6, 1045.0], [45.7, 1047.0], [45.8, 1048.0], [45.9, 1048.0], [46.0, 1049.0], [46.1, 1050.0], [46.2, 1051.0], [46.3, 1053.0], [46.4, 1053.0], [46.5, 1054.0], [46.6, 1056.0], [46.7, 1058.0], [46.8, 1062.0], [46.9, 1063.0], [47.0, 1063.0], [47.1, 1064.0], [47.2, 1064.0], [47.3, 1065.0], [47.4, 1065.0], [47.5, 1066.0], [47.6, 1067.0], [47.7, 1067.0], [47.8, 1069.0], [47.9, 1074.0], [48.0, 1079.0], [48.1, 1080.0], [48.2, 1080.0], [48.3, 1084.0], [48.4, 1086.0], [48.5, 1089.0], [48.6, 1090.0], [48.7, 1096.0], [48.8, 1097.0], [48.9, 1098.0], [49.0, 1101.0], [49.1, 1101.0], [49.2, 1101.0], [49.3, 1102.0], [49.4, 1104.0], [49.5, 1104.0], [49.6, 1106.0], [49.7, 1107.0], [49.8, 1107.0], [49.9, 1108.0], [50.0, 1113.0], [50.1, 1119.0], [50.2, 1121.0], [50.3, 1126.0], [50.4, 1130.0], [50.5, 1132.0], [50.6, 1132.0], [50.7, 1133.0], [50.8, 1134.0], [50.9, 1135.0], [51.0, 1140.0], [51.1, 1146.0], [51.2, 1148.0], [51.3, 1150.0], [51.4, 1151.0], [51.5, 1153.0], [51.6, 1157.0], [51.7, 1157.0], [51.8, 1158.0], [51.9, 1160.0], [52.0, 1163.0], [52.1, 1165.0], [52.2, 1169.0], [52.3, 1173.0], [52.4, 1174.0], [52.5, 1175.0], [52.6, 1177.0], [52.7, 1178.0], [52.8, 1180.0], [52.9, 1182.0], [53.0, 1184.0], [53.1, 1185.0], [53.2, 1188.0], [53.3, 1189.0], [53.4, 1191.0], [53.5, 1194.0], [53.6, 1197.0], [53.7, 1198.0], [53.8, 1199.0], [53.9, 1199.0], [54.0, 1200.0], [54.1, 1201.0], [54.2, 1201.0], [54.3, 1201.0], [54.4, 1202.0], [54.5, 1203.0], [54.6, 1203.0], [54.7, 1203.0], [54.8, 1203.0], [54.9, 1204.0], [55.0, 1205.0], [55.1, 1206.0], [55.2, 1208.0], [55.3, 1209.0], [55.4, 1213.0], [55.5, 1214.0], [55.6, 1228.0], [55.7, 1229.0], [55.8, 1230.0], [55.9, 1231.0], [56.0, 1233.0], [56.1, 1236.0], [56.2, 1236.0], [56.3, 1250.0], [56.4, 1252.0], [56.5, 1254.0], [56.6, 1254.0], [56.7, 1261.0], [56.8, 1262.0], [56.9, 1265.0], [57.0, 1265.0], [57.1, 1266.0], [57.2, 1272.0], [57.3, 1272.0], [57.4, 1272.0], [57.5, 1274.0], [57.6, 1275.0], [57.7, 1276.0], [57.8, 1276.0], [57.9, 1276.0], [58.0, 1277.0], [58.1, 1277.0], [58.2, 1279.0], [58.3, 1279.0], [58.4, 1280.0], [58.5, 1280.0], [58.6, 1282.0], [58.7, 1282.0], [58.8, 1283.0], [58.9, 1283.0], [59.0, 1285.0], [59.1, 1287.0], [59.2, 1288.0], [59.3, 1289.0], [59.4, 1292.0], [59.5, 1294.0], [59.6, 1294.0], [59.7, 1297.0], [59.8, 1298.0], [59.9, 1299.0], [60.0, 1300.0], [60.1, 1304.0], [60.2, 1305.0], [60.3, 1305.0], [60.4, 1306.0], [60.5, 1311.0], [60.6, 1317.0], [60.7, 1324.0], [60.8, 1324.0], [60.9, 1329.0], [61.0, 1332.0], [61.1, 1332.0], [61.2, 1334.0], [61.3, 1335.0], [61.4, 1337.0], [61.5, 1337.0], [61.6, 1338.0], [61.7, 1343.0], [61.8, 1346.0], [61.9, 1349.0], [62.0, 1355.0], [62.1, 1356.0], [62.2, 1357.0], [62.3, 1364.0], [62.4, 1369.0], [62.5, 1369.0], [62.6, 1370.0], [62.7, 1373.0], [62.8, 1373.0], [62.9, 1380.0], [63.0, 1383.0], [63.1, 1384.0], [63.2, 1385.0], [63.3, 1385.0], [63.4, 1390.0], [63.5, 1396.0], [63.6, 1412.0], [63.7, 1419.0], [63.8, 1420.0], [63.9, 1421.0], [64.0, 1425.0], [64.1, 1426.0], [64.2, 1426.0], [64.3, 1427.0], [64.4, 1428.0], [64.5, 1429.0], [64.6, 1431.0], [64.7, 1432.0], [64.8, 1433.0], [64.9, 1434.0], [65.0, 1447.0], [65.1, 1455.0], [65.2, 1462.0], [65.3, 1463.0], [65.4, 1463.0], [65.5, 1467.0], [65.6, 1469.0], [65.7, 1470.0], [65.8, 1471.0], [65.9, 1473.0], [66.0, 1476.0], [66.1, 1477.0], [66.2, 1478.0], [66.3, 1479.0], [66.4, 1484.0], [66.5, 1497.0], [66.6, 1498.0], [66.7, 1499.0], [66.8, 1501.0], [66.9, 1509.0], [67.0, 1514.0], [67.1, 1517.0], [67.2, 1518.0], [67.3, 1519.0], [67.4, 1520.0], [67.5, 1528.0], [67.6, 1542.0], [67.7, 1543.0], [67.8, 1549.0], [67.9, 1552.0], [68.0, 1554.0], [68.1, 1555.0], [68.2, 1555.0], [68.3, 1558.0], [68.4, 1559.0], [68.5, 1561.0], [68.6, 1562.0], [68.7, 1563.0], [68.8, 1565.0], [68.9, 1565.0], [69.0, 1566.0], [69.1, 1566.0], [69.2, 1567.0], [69.3, 1570.0], [69.4, 1572.0], [69.5, 1573.0], [69.6, 1574.0], [69.7, 1574.0], [69.8, 1575.0], [69.9, 1577.0], [70.0, 1578.0], [70.1, 1581.0], [70.2, 1581.0], [70.3, 1586.0], [70.4, 1588.0], [70.5, 1588.0], [70.6, 1594.0], [70.7, 1597.0], [70.8, 1597.0], [70.9, 1600.0], [71.0, 1603.0], [71.1, 1603.0], [71.2, 1605.0], [71.3, 1611.0], [71.4, 1614.0], [71.5, 1617.0], [71.6, 1621.0], [71.7, 1624.0], [71.8, 1625.0], [71.9, 1626.0], [72.0, 1631.0], [72.1, 1632.0], [72.2, 1632.0], [72.3, 1633.0], [72.4, 1635.0], [72.5, 1636.0], [72.6, 1644.0], [72.7, 1654.0], [72.8, 1655.0], [72.9, 1656.0], [73.0, 1658.0], [73.1, 1659.0], [73.2, 1662.0], [73.3, 1664.0], [73.4, 1666.0], [73.5, 1666.0], [73.6, 1670.0], [73.7, 1671.0], [73.8, 1675.0], [73.9, 1675.0], [74.0, 1678.0], [74.1, 1681.0], [74.2, 1682.0], [74.3, 1682.0], [74.4, 1682.0], [74.5, 1682.0], [74.6, 1683.0], [74.7, 1686.0], [74.8, 1690.0], [74.9, 1690.0], [75.0, 1691.0], [75.1, 1694.0], [75.2, 1694.0], [75.3, 1697.0], [75.4, 1703.0], [75.5, 1705.0], [75.6, 1706.0], [75.7, 1713.0], [75.8, 1716.0], [75.9, 1722.0], [76.0, 1722.0], [76.1, 1729.0], [76.2, 1743.0], [76.3, 1744.0], [76.4, 1747.0], [76.5, 1748.0], [76.6, 1749.0], [76.7, 1751.0], [76.8, 1752.0], [76.9, 1753.0], [77.0, 1753.0], [77.1, 1755.0], [77.2, 1755.0], [77.3, 1756.0], [77.4, 1760.0], [77.5, 1764.0], [77.6, 1764.0], [77.7, 1766.0], [77.8, 1768.0], [77.9, 1768.0], [78.0, 1771.0], [78.1, 1771.0], [78.2, 1773.0], [78.3, 1774.0], [78.4, 1774.0], [78.5, 1774.0], [78.6, 1775.0], [78.7, 1776.0], [78.8, 1776.0], [78.9, 1783.0], [79.0, 1786.0], [79.1, 1788.0], [79.2, 1788.0], [79.3, 1796.0], [79.4, 1799.0], [79.5, 1801.0], [79.6, 1805.0], [79.7, 1811.0], [79.8, 1814.0], [79.9, 1822.0], [80.0, 1823.0], [80.1, 1824.0], [80.2, 1824.0], [80.3, 1825.0], [80.4, 1826.0], [80.5, 1827.0], [80.6, 1828.0], [80.7, 1835.0], [80.8, 1839.0], [80.9, 1844.0], [81.0, 1849.0], [81.1, 1850.0], [81.2, 1889.0], [81.3, 1894.0], [81.4, 1896.0], [81.5, 1897.0], [81.6, 1902.0], [81.7, 1910.0], [81.8, 1912.0], [81.9, 1914.0], [82.0, 1929.0], [82.1, 1931.0], [82.2, 1935.0], [82.3, 1938.0], [82.4, 1940.0], [82.5, 1942.0], [82.6, 1951.0], [82.7, 1954.0], [82.8, 1972.0], [82.9, 1984.0], [83.0, 1986.0], [83.1, 1987.0], [83.2, 1987.0], [83.3, 1990.0], [83.4, 2019.0], [83.5, 2023.0], [83.6, 2031.0], [83.7, 2032.0], [83.8, 2033.0], [83.9, 2036.0], [84.0, 2038.0], [84.1, 2045.0], [84.2, 2055.0], [84.3, 2061.0], [84.4, 2061.0], [84.5, 2068.0], [84.6, 2073.0], [84.7, 2081.0], [84.8, 2087.0], [84.9, 2087.0], [85.0, 2088.0], [85.1, 2091.0], [85.2, 2091.0], [85.3, 2095.0], [85.4, 2095.0], [85.5, 2099.0], [85.6, 2101.0], [85.7, 2101.0], [85.8, 2104.0], [85.9, 2105.0], [86.0, 2110.0], [86.1, 2113.0], [86.2, 2125.0], [86.3, 2137.0], [86.4, 2141.0], [86.5, 2163.0], [86.6, 2166.0], [86.7, 2178.0], [86.8, 2178.0], [86.9, 2178.0], [87.0, 2179.0], [87.1, 2184.0], [87.2, 2190.0], [87.3, 2191.0], [87.4, 2191.0], [87.5, 2198.0], [87.6, 2200.0], [87.7, 2210.0], [87.8, 2227.0], [87.9, 2241.0], [88.0, 2265.0], [88.1, 2274.0], [88.2, 2277.0], [88.3, 2278.0], [88.4, 2280.0], [88.5, 2291.0], [88.6, 2295.0], [88.7, 2304.0], [88.8, 2315.0], [88.9, 2321.0], [89.0, 2321.0], [89.1, 2322.0], [89.2, 2323.0], [89.3, 2324.0], [89.4, 2326.0], [89.5, 2327.0], [89.6, 2332.0], [89.7, 2335.0], [89.8, 2340.0], [89.9, 2342.0], [90.0, 2346.0], [90.1, 2347.0], [90.2, 2350.0], [90.3, 2352.0], [90.4, 2362.0], [90.5, 2372.0], [90.6, 2381.0], [90.7, 2386.0], [90.8, 2411.0], [90.9, 2434.0], [91.0, 2435.0], [91.1, 2468.0], [91.2, 2469.0], [91.3, 2480.0], [91.4, 2502.0], [91.5, 2530.0], [91.6, 2533.0], [91.7, 2536.0], [91.8, 2536.0], [91.9, 2542.0], [92.0, 2546.0], [92.1, 2547.0], [92.2, 2548.0], [92.3, 2548.0], [92.4, 2548.0], [92.5, 2549.0], [92.6, 2555.0], [92.7, 2556.0], [92.8, 2561.0], [92.9, 2572.0], [93.0, 2584.0], [93.1, 2587.0], [93.2, 2587.0], [93.3, 2595.0], [93.4, 2596.0], [93.5, 2618.0], [93.6, 2632.0], [93.7, 2632.0], [93.8, 2633.0], [93.9, 2635.0], [94.0, 2645.0], [94.1, 2654.0], [94.2, 2654.0], [94.3, 2656.0], [94.4, 2658.0], [94.5, 2659.0], [94.6, 2659.0], [94.7, 2661.0], [94.8, 2678.0], [94.9, 2705.0], [95.0, 2736.0], [95.1, 2737.0], [95.2, 2759.0], [95.3, 2827.0], [95.4, 2859.0], [95.5, 2880.0], [95.6, 2901.0], [95.7, 2912.0], [95.8, 2939.0], [95.9, 2947.0], [96.0, 2954.0], [96.1, 2956.0], [96.2, 2957.0], [96.3, 2963.0], [96.4, 2971.0], [96.5, 3012.0], [96.6, 3015.0], [96.7, 3016.0], [96.8, 3016.0], [96.9, 3017.0], [97.0, 3018.0], [97.1, 3026.0], [97.2, 3033.0], [97.3, 3035.0], [97.4, 3038.0], [97.5, 3041.0], [97.6, 3041.0], [97.7, 3047.0], [97.8, 3051.0], [97.9, 3058.0], [98.0, 3093.0], [98.1, 3095.0], [98.2, 3097.0], [98.3, 3110.0], [98.4, 3117.0], [98.5, 3121.0], [98.6, 3131.0], [98.7, 3314.0], [98.8, 3360.0], [98.9, 3503.0], [99.0, 3505.0], [99.1, 3515.0], [99.2, 3519.0], [99.3, 3519.0], [99.4, 3528.0], [99.5, 3528.0], [99.6, 3536.0], [99.7, 3537.0], [99.8, 4089.0], [99.9, 4125.0], [100.0, 4134.0]], "isOverall": false, "label": "gateway_cl/helloauth", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 772.0, "series": [{"data": [[0.0, 17.0], [600.0, 78.0], [700.0, 77.0], [800.0, 79.0], [900.0, 69.0], [1000.0, 51.0], [1100.0, 49.0], [1200.0, 34.0], [1300.0, 37.0], [1400.0, 23.0], [1500.0, 37.0], [100.0, 18.0], [1600.0, 38.0], [1700.0, 31.0], [1800.0, 20.0], [1900.0, 19.0], [2000.0, 24.0], [2100.0, 16.0], [2200.0, 22.0], [2300.0, 10.0], [2400.0, 8.0], [2500.0, 5.0], [2600.0, 6.0], [2800.0, 2.0], [2700.0, 6.0], [2900.0, 7.0], [3000.0, 2.0], [3100.0, 2.0], [200.0, 33.0], [3300.0, 3.0], [3400.0, 1.0], [300.0, 74.0], [400.0, 41.0], [500.0, 68.0]], "isOverall": false, "label": "gateway_cl/helloauth-2", "isController": false}, {"data": [[0.0, 652.0], [300.0, 61.0], [600.0, 22.0], [700.0, 16.0], [100.0, 102.0], [200.0, 55.0], [400.0, 79.0], [800.0, 1.0], [500.0, 19.0]], "isOverall": false, "label": "gateway_cl/helloauth-0", "isController": false}, {"data": [[0.0, 772.0], [300.0, 3.0], [100.0, 145.0], [200.0, 87.0]], "isOverall": false, "label": "gateway_cl/helloauth-1", "isController": false}, {"data": [[0.0, 10.0], [600.0, 78.0], [700.0, 70.0], [800.0, 54.0], [900.0, 65.0], [1000.0, 68.0], [1100.0, 50.0], [1200.0, 61.0], [1300.0, 36.0], [1400.0, 32.0], [1500.0, 41.0], [1600.0, 46.0], [100.0, 16.0], [1700.0, 41.0], [1800.0, 21.0], [1900.0, 18.0], [2000.0, 22.0], [2100.0, 21.0], [2200.0, 11.0], [2300.0, 21.0], [2400.0, 6.0], [2500.0, 21.0], [2600.0, 14.0], [2800.0, 3.0], [2700.0, 4.0], [2900.0, 9.0], [3000.0, 18.0], [3100.0, 4.0], [200.0, 17.0], [3300.0, 2.0], [3500.0, 9.0], [4000.0, 1.0], [4100.0, 2.0], [300.0, 42.0], [400.0, 31.0], [500.0, 42.0]], "isOverall": false, "label": "gateway_cl/helloauth", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 594.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2256.0, "series": [{"data": [[0.0, 2256.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1178.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 594.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 255.64746772591917, "minX": 1.6857909E12, "maxY": 255.64746772591917, "series": [{"data": [[1.6857909E12, 255.64746772591917]], "isOverall": false, "label": "gateway_cl/helloauth", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6857909E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 4125.0, "series": [{"data": [[2.0, 1771.0], [3.0, 824.0], [5.0, 1349.0], [6.0, 1347.0], [7.0, 1191.0], [9.0, 882.5], [11.0, 1331.5], [12.0, 1687.0], [13.0, 1529.0], [15.0, 1164.5], [16.0, 962.0], [17.0, 1611.0], [18.0, 1987.0], [20.0, 1227.0], [21.0, 2278.0], [25.0, 1780.5], [26.0, 2190.0], [27.0, 1175.0], [28.0, 2244.0], [29.0, 1237.0], [30.0, 1919.0], [31.0, 2686.0], [33.0, 736.0], [32.0, 3199.0], [35.0, 3005.0], [36.0, 2154.5], [38.0, 1426.5], [40.0, 1679.5], [43.0, 719.0], [42.0, 847.5], [47.0, 908.0], [46.0, 1568.0], [49.0, 712.0], [48.0, 712.0], [51.0, 1458.0], [53.0, 2015.0], [52.0, 1266.0], [55.0, 702.0], [54.0, 3349.0], [59.0, 1758.0], [58.0, 1411.0], [61.0, 972.0], [60.0, 1605.0], [63.0, 1221.0], [62.0, 653.0], [67.0, 963.0], [66.0, 1445.0], [65.0, 897.0], [64.0, 1526.0], [70.0, 2700.0], [69.0, 894.0], [68.0, 631.0], [75.0, 1550.2], [79.0, 615.0], [78.0, 1405.0], [77.0, 925.0], [83.0, 1363.5], [81.0, 946.0], [80.0, 2104.0], [87.0, 2099.0], [86.0, 2341.0], [85.0, 755.5], [90.0, 821.0], [89.0, 1625.0], [88.0, 969.0], [95.0, 891.0], [94.0, 721.0], [93.0, 1171.0], [92.0, 1097.5], [99.0, 882.0], [98.0, 1409.0], [96.0, 877.0], [103.0, 865.0], [102.0, 1796.5], [100.0, 1761.0], [105.0, 1350.0], [104.0, 743.0], [110.0, 860.0], [109.0, 1033.0], [108.0, 1437.0], [115.0, 1438.0], [113.0, 1792.0], [112.0, 1088.5], [119.0, 789.0], [116.0, 1320.0], [123.0, 1218.0], [122.0, 597.0], [121.0, 2173.0], [120.0, 508.0], [126.0, 1607.5], [124.0, 1756.0], [134.0, 908.5], [132.0, 2032.0], [131.0, 1679.0], [130.0, 2631.0], [129.0, 660.0], [141.0, 1037.5], [139.0, 1360.6666666666667], [136.0, 803.5], [151.0, 1520.6], [158.0, 1087.3333333333333], [155.0, 1195.5], [166.0, 1220.0], [165.0, 1198.0], [164.0, 1193.5], [175.0, 680.3333333333334], [172.0, 746.1666666666666], [182.0, 1896.0], [180.0, 1131.0], [179.0, 1087.0], [188.0, 624.0], [187.0, 684.0], [186.0, 663.0], [199.0, 897.0], [197.0, 1146.6666666666667], [194.0, 1367.0], [193.0, 692.0], [192.0, 988.5], [207.0, 627.0], [206.0, 1182.0], [205.0, 1142.0], [204.0, 687.0], [202.0, 830.3333333333334], [213.0, 2125.6666666666665], [209.0, 616.5], [222.0, 1529.0], [221.0, 239.0], [220.0, 827.5], [218.0, 838.0], [217.0, 373.0], [216.0, 1511.25], [231.0, 945.0], [230.0, 3382.0], [229.0, 2288.0], [228.0, 936.0], [227.0, 1512.0], [226.0, 488.0], [225.0, 3418.0], [224.0, 2108.0], [239.0, 566.0], [238.0, 608.0], [237.0, 1012.0], [236.0, 426.0], [235.0, 642.0], [233.0, 1664.5], [247.0, 1032.0], [243.0, 1660.3333333333333], [241.0, 356.0], [254.0, 640.0], [253.0, 377.3333333333333], [250.0, 1692.0], [249.0, 1036.0], [248.0, 361.0], [269.0, 324.0], [267.0, 633.6666666666666], [265.0, 240.0], [263.0, 1350.3333333333333], [260.0, 409.0], [259.0, 752.75], [257.0, 632.0], [287.0, 285.0], [286.0, 659.0], [285.0, 1101.2222222222222], [281.0, 938.3333333333334], [275.0, 859.0], [300.0, 1029.1197080291968], [299.0, 1264.2727272727273], [298.0, 1031.6], [296.0, 1617.0], [294.0, 1253.6], [293.0, 612.0], [292.0, 1285.0], [291.0, 864.6666666666666], [289.0, 329.0], [288.0, 672.5], [1.0, 832.0]], "isOverall": false, "label": "gateway_cl/helloauth-2", "isController": false}, {"data": [[255.64746772591823, 1084.9136047666325]], "isOverall": false, "label": "gateway_cl/helloauth-2-Aggregated", "isController": false}, {"data": [[2.0, 35.0], [3.0, 27.0], [5.0, 28.5], [6.0, 7.0], [7.0, 20.0], [9.0, 20.0], [11.0, 23.0], [12.0, 28.0], [13.0, 25.0], [15.0, 20.0], [16.0, 19.0], [17.0, 15.0], [18.0, 23.0], [20.0, 16.0], [21.0, 30.0], [25.0, 25.75], [26.0, 5.0], [27.0, 13.0], [28.0, 40.0], [29.0, 28.0], [30.0, 10.0], [31.0, 16.0], [33.0, 21.0], [32.0, 96.0], [35.0, 28.0], [36.0, 15.0], [38.0, 12.5], [40.0, 17.0], [43.0, 26.0], [42.0, 20.5], [47.0, 20.0], [46.0, 24.666666666666668], [49.0, 30.0], [48.0, 24.0], [51.0, 24.5], [53.0, 16.0], [52.0, 11.0], [55.0, 29.0], [54.0, 7.0], [59.0, 9.666666666666666], [58.0, 40.0], [61.0, 19.0], [60.0, 23.0], [63.0, 10.0], [62.0, 28.0], [67.0, 17.0], [66.0, 21.0], [65.0, 24.0], [64.0, 35.0], [70.0, 22.0], [69.0, 22.0], [68.0, 27.0], [75.0, 22.6], [79.0, 31.0], [78.0, 32.0], [77.0, 19.5], [83.0, 20.5], [81.0, 17.0], [80.0, 13.0], [87.0, 30.0], [86.0, 17.0], [85.0, 21.0], [90.0, 23.0], [89.0, 5.0], [88.0, 20.0], [95.0, 29.0], [94.0, 21.0], [93.0, 10.0], [92.0, 17.5], [99.0, 19.0], [98.0, 22.5], [96.0, 32.0], [103.0, 25.0], [102.0, 9.5], [100.0, 21.0], [105.0, 22.0], [104.0, 32.0], [110.0, 17.0], [109.0, 25.0], [108.0, 13.666666666666668], [115.0, 9.0], [113.0, 10.0], [112.0, 17.5], [119.0, 22.0], [116.0, 19.0], [123.0, 26.0], [122.0, 28.0], [121.0, 13.0], [120.0, 24.0], [126.0, 13.5], [124.0, 11.0], [134.0, 26.5], [132.0, 5.0], [131.0, 28.0], [130.0, 23.0], [129.0, 30.333333333333336], [141.0, 24.0], [139.0, 7.666666666666667], [136.0, 34.5], [151.0, 28.4], [158.0, 27.333333333333332], [155.0, 26.0], [166.0, 17.0], [165.0, 4.0], [164.0, 19.166666666666668], [175.0, 18.333333333333332], [172.0, 19.0], [182.0, 14.5], [180.0, 42.0], [179.0, 18.0], [188.0, 16.0], [187.0, 17.0], [186.0, 20.0], [199.0, 19.0], [197.0, 14.0], [194.0, 5.0], [193.0, 17.0], [192.0, 15.0], [207.0, 17.0], [206.0, 41.0], [205.0, 11.0], [204.0, 21.0], [202.0, 21.0], [213.0, 23.333333333333332], [209.0, 13.0], [222.0, 12.0], [221.0, 8.0], [220.0, 17.5], [218.0, 12.0], [217.0, 23.0], [216.0, 10.75], [231.0, 41.0], [230.0, 453.0], [229.0, 33.0], [228.0, 11.0], [227.0, 7.0], [226.0, 24.0], [225.0, 554.0], [224.0, 301.0], [239.0, 11.0], [238.0, 20.0], [237.0, 10.0], [236.0, 19.0], [235.0, 15.0], [233.0, 23.0], [247.0, 22.5], [243.0, 31.666666666666668], [241.0, 10.0], [254.0, 18.0], [253.0, 17.666666666666668], [250.0, 10.0], [249.0, 29.0], [248.0, 39.0], [269.0, 16.0], [267.0, 18.666666666666668], [265.0, 16.0], [263.0, 27.0], [260.0, 15.0], [259.0, 22.25], [257.0, 25.0], [287.0, 24.0], [286.0, 5.0], [285.0, 23.666666666666668], [281.0, 9.666666666666666], [275.0, 21.0], [300.0, 190.7649635036498], [299.0, 17.545454545454547], [298.0, 12.2], [296.0, 18.0], [294.0, 16.0], [293.0, 17.0], [292.0, 25.666666666666668], [291.0, 18.333333333333332], [289.0, 22.0], [288.0, 19.0], [1.0, 25.0]], "isOverall": false, "label": "gateway_cl/helloauth-0", "isController": false}, {"data": [[255.64746772591823, 137.7964250248264]], "isOverall": false, "label": "gateway_cl/helloauth-0-Aggregated", "isController": false}, {"data": [[2.0, 4.0], [3.0, 13.0], [5.0, 8.5], [6.0, 2.0], [7.0, 2.0], [9.0, 7.5], [11.0, 11.5], [12.0, 6.0], [13.0, 23.0], [15.0, 8.5], [16.0, 8.0], [17.0, 5.0], [18.0, 13.0], [20.0, 10.5], [21.0, 7.0], [25.0, 11.0], [26.0, 3.0], [27.0, 9.0], [28.0, 7.0], [29.0, 14.0], [30.0, 2.0], [31.0, 1.0], [33.0, 24.0], [32.0, 19.0], [35.0, 17.0], [36.0, 5.0], [38.0, 3.0], [40.0, 6.0], [43.0, 6.0], [42.0, 13.5], [47.0, 12.0], [46.0, 8.0], [49.0, 10.0], [48.0, 10.0], [51.0, 11.5], [53.0, 2.0], [52.0, 5.0], [55.0, 6.0], [54.0, 2.0], [59.0, 5.333333333333333], [58.0, 10.0], [61.0, 17.0], [60.0, 4.0], [63.0, 4.0], [62.0, 4.0], [67.0, 9.0], [66.0, 11.0], [65.0, 11.0], [64.0, 5.0], [70.0, 15.0], [69.0, 6.0], [68.0, 4.0], [75.0, 8.6], [79.0, 7.0], [78.0, 10.0], [77.0, 10.0], [83.0, 13.0], [81.0, 6.0], [80.0, 8.0], [87.0, 11.0], [86.0, 14.0], [85.0, 11.0], [90.0, 16.0], [89.0, 1.0], [88.0, 4.0], [95.0, 12.0], [94.0, 8.0], [93.0, 8.0], [92.0, 24.0], [99.0, 19.0], [98.0, 7.0], [96.0, 13.0], [103.0, 13.0], [102.0, 3.0], [100.0, 5.0], [105.0, 12.0], [104.0, 16.0], [110.0, 18.0], [109.0, 6.0], [108.0, 5.666666666666666], [115.0, 8.5], [113.0, 3.0], [112.0, 14.5], [119.0, 12.333333333333334], [116.0, 16.0], [123.0, 8.0], [122.0, 11.0], [121.0, 4.0], [120.0, 5.0], [126.0, 6.5], [124.0, 7.0], [134.0, 8.5], [132.0, 1.0], [131.0, 6.0], [130.0, 6.0], [129.0, 9.333333333333334], [141.0, 8.5], [139.0, 7.0], [136.0, 17.0], [151.0, 11.400000000000002], [158.0, 8.0], [155.0, 11.5], [166.0, 16.0], [165.0, 3.0], [164.0, 16.0], [175.0, 11.333333333333334], [172.0, 6.5], [182.0, 5.0], [180.0, 4.0], [179.0, 8.0], [188.0, 13.0], [187.0, 18.0], [186.0, 15.0], [199.0, 5.0], [197.0, 10.0], [194.0, 1.0], [193.0, 5.0], [192.0, 14.75], [207.0, 5.0], [206.0, 6.0], [205.0, 10.0], [204.0, 17.5], [202.0, 8.0], [213.0, 9.666666666666666], [209.0, 9.5], [222.0, 11.0], [221.0, 3.0], [220.0, 16.5], [218.0, 4.0], [217.0, 18.0], [216.0, 3.75], [231.0, 7.0], [230.0, 253.0], [229.0, 19.0], [228.0, 2.0], [227.0, 9.0], [226.0, 17.0], [225.0, 152.0], [224.0, 81.5], [239.0, 6.0], [238.0, 16.0], [237.0, 15.0], [236.0, 19.0], [235.0, 20.5], [233.0, 5.5], [247.0, 13.75], [243.0, 24.666666666666668], [241.0, 4.0], [254.0, 9.0], [253.0, 13.0], [250.0, 4.0], [249.0, 4.0], [248.0, 14.0], [269.0, 6.0], [267.0, 8.333333333333334], [265.0, 17.0], [263.0, 7.666666666666667], [260.0, 6.0], [259.0, 8.0], [257.0, 2.0], [287.0, 5.0], [286.0, 3.0], [285.0, 13.444444444444445], [281.0, 7.0], [275.0, 13.666666666666668], [300.0, 78.23503649635028], [299.0, 9.90909090909091], [298.0, 8.6], [296.0, 6.5], [294.0, 10.0], [293.0, 10.0], [292.0, 8.0], [291.0, 6.666666666666667], [289.0, 18.0], [288.0, 9.5], [1.0, 5.0]], "isOverall": false, "label": "gateway_cl/helloauth-1", "isController": false}, {"data": [[255.64746772591823, 56.88579940417076]], "isOverall": false, "label": "gateway_cl/helloauth-1-Aggregated", "isController": false}, {"data": [[2.0, 1811.0], [3.0, 864.0], [5.0, 1386.0], [6.0, 1356.0], [7.0, 1214.0], [9.0, 910.0], [11.0, 1366.0], [12.0, 1722.0], [13.0, 1577.0], [15.0, 1193.5], [16.0, 989.0], [17.0, 1632.0], [18.0, 2023.0], [20.0, 1253.5], [21.0, 2315.0], [25.0, 1817.5], [26.0, 2198.0], [27.0, 1197.0], [28.0, 2291.0], [29.0, 1279.0], [30.0, 1931.0], [31.0, 2705.0], [33.0, 781.0], [32.0, 3314.0], [35.0, 3051.0], [36.0, 2174.5], [38.0, 1442.5], [40.0, 1702.5], [43.0, 751.0], [42.0, 882.0], [47.0, 940.0], [46.0, 1600.6666666666667], [49.0, 752.0], [48.0, 746.0], [51.0, 1494.0], [53.0, 2033.0], [52.0, 1282.0], [55.0, 737.0], [54.0, 3360.0], [59.0, 1773.3333333333333], [58.0, 1462.0], [61.0, 1009.0], [60.0, 1632.0], [63.0, 1236.0], [62.0, 685.0], [67.0, 989.0], [66.0, 1477.0], [65.0, 932.0], [64.0, 1566.0], [70.0, 2737.0], [69.0, 922.0], [68.0, 663.0], [75.0, 1581.6], [79.0, 653.0], [78.0, 1447.0], [77.0, 954.5], [83.0, 1397.0], [81.0, 969.0], [80.0, 2125.0], [87.0, 2141.0], [86.0, 2372.0], [85.0, 787.5], [90.0, 860.0], [89.0, 1631.0], [88.0, 993.0], [95.0, 932.0], [94.0, 750.0], [93.0, 1189.0], [92.0, 1139.5], [99.0, 920.0], [98.0, 1438.5], [96.0, 922.0], [103.0, 903.0], [102.0, 1809.0], [100.0, 1788.0], [105.0, 1384.0], [104.0, 791.0], [110.0, 895.0], [109.0, 1064.0], [108.0, 1456.3333333333333], [115.0, 1455.5], [113.0, 1805.0], [112.0, 1121.5], [119.0, 823.3333333333334], [116.0, 1355.0], [123.0, 1252.0], [122.0, 636.0], [121.0, 2190.0], [120.0, 538.0], [126.0, 1627.5], [124.0, 1774.0], [134.0, 943.5], [132.0, 2038.0], [131.0, 1713.0], [130.0, 2661.0], [129.0, 699.6666666666666], [141.0, 1070.0], [139.0, 1375.6666666666667], [136.0, 855.0], [151.0, 1560.5], [158.0, 1123.3333333333333], [155.0, 1233.25], [166.0, 1254.0], [165.0, 1205.0], [164.0, 1228.8333333333335], [175.0, 710.0], [172.0, 771.8333333333334], [182.0, 1916.0], [180.0, 1177.0], [179.0, 1113.0], [188.0, 653.0], [187.0, 719.0], [186.0, 698.0], [199.0, 921.0], [197.0, 1170.6666666666667], [194.0, 1373.0], [193.0, 714.0], [192.0, 1018.5], [207.0, 649.0], [206.0, 1229.0], [205.0, 1163.0], [204.0, 725.5], [202.0, 859.3333333333334], [213.0, 2159.3333333333335], [209.0, 639.0], [222.0, 1552.0], [221.0, 250.0], [220.0, 861.5], [218.0, 854.0], [217.0, 414.0], [216.0, 1526.5], [231.0, 993.0], [230.0, 4089.0], [229.0, 2340.0], [228.0, 949.0], [227.0, 1528.0], [226.0, 529.0], [225.0, 4125.0], [224.0, 2490.5], [239.0, 583.0], [238.0, 644.0], [237.0, 1037.0], [236.0, 464.0], [235.0, 677.5], [233.0, 1693.0], [247.0, 1068.25], [243.0, 1717.0], [241.0, 371.0], [254.0, 667.0], [253.0, 408.0], [250.0, 1706.0], [249.0, 1069.0], [248.0, 414.0], [269.0, 346.0], [267.0, 660.6666666666666], [265.0, 274.0], [263.0, 1385.0], [260.0, 430.0], [259.0, 783.25], [257.0, 660.0], [287.0, 314.0], [286.0, 667.0], [285.0, 1138.5555555555557], [281.0, 955.0], [275.0, 893.6666666666666], [300.0, 1299.2540145985413], [299.0, 1291.7272727272727], [298.0, 1052.6], [296.0, 1642.0], [294.0, 1280.0], [293.0, 639.0], [292.0, 1318.6666666666667], [291.0, 890.0], [289.0, 370.0], [288.0, 701.5], [1.0, 863.0]], "isOverall": false, "label": "gateway_cl/helloauth", "isController": false}, {"data": [[255.64746772591823, 1280.425024826217]], "isOverall": false, "label": "gateway_cl/helloauth-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 300.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 45449.46666666667, "minX": 1.6857909E12, "maxY": 190379.33333333334, "series": [{"data": [[1.6857909E12, 190379.33333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6857909E12, 45449.46666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6857909E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 56.88579940417076, "minX": 1.6857909E12, "maxY": 1280.425024826217, "series": [{"data": [[1.6857909E12, 1084.9136047666325]], "isOverall": false, "label": "gateway_cl/helloauth-2", "isController": false}, {"data": [[1.6857909E12, 137.7964250248264]], "isOverall": false, "label": "gateway_cl/helloauth-0", "isController": false}, {"data": [[1.6857909E12, 56.88579940417076]], "isOverall": false, "label": "gateway_cl/helloauth-1", "isController": false}, {"data": [[1.6857909E12, 1280.425024826217]], "isOverall": false, "label": "gateway_cl/helloauth", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6857909E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 56.88579940417076, "minX": 1.6857909E12, "maxY": 1084.8857994041716, "series": [{"data": [[1.6857909E12, 1084.8857994041716]], "isOverall": false, "label": "gateway_cl/helloauth-2", "isController": false}, {"data": [[1.6857909E12, 137.75372393247264]], "isOverall": false, "label": "gateway_cl/helloauth-0", "isController": false}, {"data": [[1.6857909E12, 56.88579940417076]], "isOverall": false, "label": "gateway_cl/helloauth-1", "isController": false}, {"data": [[1.6857909E12, 137.75372393247255]], "isOverall": false, "label": "gateway_cl/helloauth", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6857909E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6857909E12, "maxY": 30.696127110228435, "series": [{"data": [[1.6857909E12, 6.294935451837145]], "isOverall": false, "label": "gateway_cl/helloauth-2", "isController": false}, {"data": [[1.6857909E12, 30.696127110228435]], "isOverall": false, "label": "gateway_cl/helloauth-0", "isController": false}, {"data": [[1.6857909E12, 0.0]], "isOverall": false, "label": "gateway_cl/helloauth-1", "isController": false}, {"data": [[1.6857909E12, 30.696127110228435]], "isOverall": false, "label": "gateway_cl/helloauth", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6857909E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.6857909E12, "maxY": 4134.0, "series": [{"data": [[1.6857909E12, 4134.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6857909E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6857909E12, 1749.1999999999998]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6857909E12, 3015.71]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6857909E12, 350.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.6857909E12, 2194.849999999998]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6857909E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 40.0, "minX": 70.0, "maxY": 1161.0, "series": [{"data": [[70.0, 129.5], [764.0, 119.5], [410.0, 1161.0], [894.0, 425.5], [922.0, 242.0], [968.0, 40.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 968.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 23.0, "minX": 70.0, "maxY": 212.0, "series": [{"data": [[70.0, 129.5], [764.0, 59.0], [410.0, 212.0], [894.0, 23.0], [922.0, 208.0], [968.0, 23.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 968.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 67.13333333333334, "minX": 1.6857909E12, "maxY": 67.13333333333334, "series": [{"data": [[1.6857909E12, 67.13333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6857909E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 33.56666666666667, "minX": 1.6857909E12, "maxY": 33.56666666666667, "series": [{"data": [[1.6857909E12, 33.56666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6857909E12, 33.56666666666667]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6857909E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 16.783333333333335, "minX": 1.6857909E12, "maxY": 16.783333333333335, "series": [{"data": [[1.6857909E12, 16.783333333333335]], "isOverall": false, "label": "gateway_cl/helloauth-1-success", "isController": false}, {"data": [[1.6857909E12, 16.783333333333335]], "isOverall": false, "label": "gateway_cl/helloauth-2-success", "isController": false}, {"data": [[1.6857909E12, 16.783333333333335]], "isOverall": false, "label": "gateway_cl/helloauth-0-success", "isController": false}, {"data": [[1.6857909E12, 16.783333333333335]], "isOverall": false, "label": "gateway_cl/helloauth-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6857909E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 67.13333333333334, "minX": 1.6857909E12, "maxY": 67.13333333333334, "series": [{"data": [[1.6857909E12, 67.13333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6857909E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

