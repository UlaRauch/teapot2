/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "maxY": 5380.0, "series": [{"data": [[0.0, 7.0], [0.1, 7.0], [0.2, 7.0], [0.3, 7.0], [0.4, 7.0], [0.5, 7.0], [0.6, 8.0], [0.7, 8.0], [0.8, 8.0], [0.9, 8.0], [1.0, 8.0], [1.1, 8.0], [1.2, 9.0], [1.3, 9.0], [1.4, 9.0], [1.5, 9.0], [1.6, 9.0], [1.7, 9.0], [1.8, 9.0], [1.9, 9.0], [2.0, 9.0], [2.1, 9.0], [2.2, 9.0], [2.3, 9.0], [2.4, 9.0], [2.5, 9.0], [2.6, 9.0], [2.7, 10.0], [2.8, 10.0], [2.9, 10.0], [3.0, 10.0], [3.1, 10.0], [3.2, 10.0], [3.3, 10.0], [3.4, 10.0], [3.5, 10.0], [3.6, 10.0], [3.7, 10.0], [3.8, 11.0], [3.9, 11.0], [4.0, 11.0], [4.1, 11.0], [4.2, 11.0], [4.3, 11.0], [4.4, 11.0], [4.5, 11.0], [4.6, 11.0], [4.7, 11.0], [4.8, 11.0], [4.9, 11.0], [5.0, 12.0], [5.1, 12.0], [5.2, 12.0], [5.3, 12.0], [5.4, 12.0], [5.5, 12.0], [5.6, 12.0], [5.7, 12.0], [5.8, 12.0], [5.9, 12.0], [6.0, 12.0], [6.1, 12.0], [6.2, 13.0], [6.3, 13.0], [6.4, 13.0], [6.5, 13.0], [6.6, 13.0], [6.7, 13.0], [6.8, 13.0], [6.9, 13.0], [7.0, 13.0], [7.1, 13.0], [7.2, 13.0], [7.3, 13.0], [7.4, 13.0], [7.5, 13.0], [7.6, 14.0], [7.7, 14.0], [7.8, 14.0], [7.9, 14.0], [8.0, 14.0], [8.1, 14.0], [8.2, 15.0], [8.3, 15.0], [8.4, 15.0], [8.5, 16.0], [8.6, 16.0], [8.7, 16.0], [8.8, 16.0], [8.9, 16.0], [9.0, 16.0], [9.1, 17.0], [9.2, 17.0], [9.3, 17.0], [9.4, 18.0], [9.5, 18.0], [9.6, 21.0], [9.7, 21.0], [9.8, 21.0], [9.9, 21.0], [10.0, 21.0], [10.1, 21.0], [10.2, 21.0], [10.3, 21.0], [10.4, 21.0], [10.5, 23.0], [10.6, 23.0], [10.7, 23.0], [10.8, 26.0], [10.9, 26.0], [11.0, 26.0], [11.1, 27.0], [11.2, 27.0], [11.3, 27.0], [11.4, 28.0], [11.5, 28.0], [11.6, 28.0], [11.7, 32.0], [11.8, 32.0], [11.9, 32.0], [12.0, 33.0], [12.1, 33.0], [12.2, 33.0], [12.3, 40.0], [12.4, 40.0], [12.5, 41.0], [12.6, 41.0], [12.7, 41.0], [12.8, 538.0], [12.9, 538.0], [13.0, 538.0], [13.1, 539.0], [13.2, 539.0], [13.3, 539.0], [13.4, 540.0], [13.5, 540.0], [13.6, 540.0], [13.7, 550.0], [13.8, 550.0], [13.9, 550.0], [14.0, 553.0], [14.1, 553.0], [14.2, 553.0], [14.3, 554.0], [14.4, 554.0], [14.5, 554.0], [14.6, 555.0], [14.7, 555.0], [14.8, 555.0], [14.9, 556.0], [15.0, 556.0], [15.1, 556.0], [15.2, 556.0], [15.3, 556.0], [15.4, 556.0], [15.5, 559.0], [15.6, 559.0], [15.7, 561.0], [15.8, 561.0], [15.9, 561.0], [16.0, 563.0], [16.1, 563.0], [16.2, 563.0], [16.3, 567.0], [16.4, 567.0], [16.5, 567.0], [16.6, 568.0], [16.7, 568.0], [16.8, 568.0], [16.9, 570.0], [17.0, 570.0], [17.1, 570.0], [17.2, 574.0], [17.3, 574.0], [17.4, 574.0], [17.5, 574.0], [17.6, 574.0], [17.7, 574.0], [17.8, 581.0], [17.9, 581.0], [18.0, 581.0], [18.1, 582.0], [18.2, 582.0], [18.3, 582.0], [18.4, 583.0], [18.5, 583.0], [18.6, 583.0], [18.7, 585.0], [18.8, 585.0], [18.9, 592.0], [19.0, 592.0], [19.1, 592.0], [19.2, 596.0], [19.3, 596.0], [19.4, 596.0], [19.5, 600.0], [19.6, 600.0], [19.7, 600.0], [19.8, 603.0], [19.9, 603.0], [20.0, 603.0], [20.1, 607.0], [20.2, 607.0], [20.3, 607.0], [20.4, 610.0], [20.5, 610.0], [20.6, 610.0], [20.7, 610.0], [20.8, 610.0], [20.9, 610.0], [21.0, 611.0], [21.1, 611.0], [21.2, 611.0], [21.3, 611.0], [21.4, 611.0], [21.5, 611.0], [21.6, 615.0], [21.7, 615.0], [21.8, 615.0], [21.9, 617.0], [22.0, 617.0], [22.1, 622.0], [22.2, 622.0], [22.3, 622.0], [22.4, 627.0], [22.5, 627.0], [22.6, 627.0], [22.7, 628.0], [22.8, 628.0], [22.9, 628.0], [23.0, 629.0], [23.1, 629.0], [23.2, 629.0], [23.3, 631.0], [23.4, 631.0], [23.5, 631.0], [23.6, 631.0], [23.7, 631.0], [23.8, 631.0], [23.9, 634.0], [24.0, 634.0], [24.1, 634.0], [24.2, 641.0], [24.3, 641.0], [24.4, 641.0], [24.5, 644.0], [24.6, 644.0], [24.7, 644.0], [24.8, 644.0], [24.9, 644.0], [25.0, 644.0], [25.1, 651.0], [25.2, 651.0], [25.3, 651.0], [25.4, 651.0], [25.5, 651.0], [25.6, 654.0], [25.7, 654.0], [25.8, 654.0], [25.9, 654.0], [26.0, 654.0], [26.1, 654.0], [26.2, 654.0], [26.3, 654.0], [26.4, 654.0], [26.5, 655.0], [26.6, 655.0], [26.7, 655.0], [26.8, 657.0], [26.9, 657.0], [27.0, 657.0], [27.1, 662.0], [27.2, 662.0], [27.3, 662.0], [27.4, 662.0], [27.5, 662.0], [27.6, 662.0], [27.7, 663.0], [27.8, 663.0], [27.9, 663.0], [28.0, 665.0], [28.1, 665.0], [28.2, 666.0], [28.3, 666.0], [28.4, 666.0], [28.5, 671.0], [28.6, 671.0], [28.7, 671.0], [28.8, 671.0], [28.9, 671.0], [29.0, 671.0], [29.1, 671.0], [29.2, 671.0], [29.3, 671.0], [29.4, 672.0], [29.5, 672.0], [29.6, 672.0], [29.7, 681.0], [29.8, 681.0], [29.9, 681.0], [30.0, 685.0], [30.1, 685.0], [30.2, 685.0], [30.3, 688.0], [30.4, 688.0], [30.5, 688.0], [30.6, 688.0], [30.7, 688.0], [30.8, 688.0], [30.9, 690.0], [31.0, 690.0], [31.1, 690.0], [31.2, 692.0], [31.3, 692.0], [31.4, 693.0], [31.5, 693.0], [31.6, 693.0], [31.7, 701.0], [31.8, 701.0], [31.9, 701.0], [32.0, 701.0], [32.1, 701.0], [32.2, 701.0], [32.3, 702.0], [32.4, 702.0], [32.5, 702.0], [32.6, 707.0], [32.7, 707.0], [32.8, 707.0], [32.9, 708.0], [33.0, 708.0], [33.1, 708.0], [33.2, 713.0], [33.3, 713.0], [33.4, 713.0], [33.5, 716.0], [33.6, 716.0], [33.7, 716.0], [33.8, 717.0], [33.9, 717.0], [34.0, 717.0], [34.1, 717.0], [34.2, 717.0], [34.3, 717.0], [34.4, 721.0], [34.5, 721.0], [34.6, 723.0], [34.7, 723.0], [34.8, 723.0], [34.9, 726.0], [35.0, 726.0], [35.1, 726.0], [35.2, 728.0], [35.3, 728.0], [35.4, 728.0], [35.5, 729.0], [35.6, 729.0], [35.7, 729.0], [35.8, 730.0], [35.9, 730.0], [36.0, 730.0], [36.1, 730.0], [36.2, 730.0], [36.3, 730.0], [36.4, 730.0], [36.5, 730.0], [36.6, 730.0], [36.7, 731.0], [36.8, 731.0], [36.9, 731.0], [37.0, 732.0], [37.1, 732.0], [37.2, 732.0], [37.3, 733.0], [37.4, 733.0], [37.5, 733.0], [37.6, 733.0], [37.7, 733.0], [37.8, 737.0], [37.9, 737.0], [38.0, 737.0], [38.1, 737.0], [38.2, 737.0], [38.3, 737.0], [38.4, 738.0], [38.5, 738.0], [38.6, 738.0], [38.7, 738.0], [38.8, 738.0], [38.9, 738.0], [39.0, 738.0], [39.1, 738.0], [39.2, 738.0], [39.3, 738.0], [39.4, 738.0], [39.5, 738.0], [39.6, 740.0], [39.7, 740.0], [39.8, 740.0], [39.9, 741.0], [40.0, 741.0], [40.1, 741.0], [40.2, 742.0], [40.3, 742.0], [40.4, 742.0], [40.5, 742.0], [40.6, 742.0], [40.7, 743.0], [40.8, 743.0], [40.9, 743.0], [41.0, 748.0], [41.1, 748.0], [41.2, 748.0], [41.3, 748.0], [41.4, 748.0], [41.5, 748.0], [41.6, 748.0], [41.7, 748.0], [41.8, 748.0], [41.9, 752.0], [42.0, 752.0], [42.1, 752.0], [42.2, 753.0], [42.3, 753.0], [42.4, 753.0], [42.5, 759.0], [42.6, 759.0], [42.7, 759.0], [42.8, 760.0], [42.9, 760.0], [43.0, 760.0], [43.1, 765.0], [43.2, 765.0], [43.3, 765.0], [43.4, 765.0], [43.5, 765.0], [43.6, 765.0], [43.7, 766.0], [43.8, 766.0], [43.9, 766.0], [44.0, 766.0], [44.1, 766.0], [44.2, 767.0], [44.3, 767.0], [44.4, 767.0], [44.5, 768.0], [44.6, 768.0], [44.7, 768.0], [44.8, 768.0], [44.9, 768.0], [45.0, 768.0], [45.1, 780.0], [45.2, 780.0], [45.3, 780.0], [45.4, 782.0], [45.5, 782.0], [45.6, 782.0], [45.7, 784.0], [45.8, 784.0], [45.9, 784.0], [46.0, 786.0], [46.1, 786.0], [46.2, 786.0], [46.3, 798.0], [46.4, 798.0], [46.5, 798.0], [46.6, 799.0], [46.7, 799.0], [46.8, 799.0], [46.9, 801.0], [47.0, 801.0], [47.1, 805.0], [47.2, 805.0], [47.3, 805.0], [47.4, 808.0], [47.5, 808.0], [47.6, 808.0], [47.7, 809.0], [47.8, 809.0], [47.9, 809.0], [48.0, 812.0], [48.1, 812.0], [48.2, 812.0], [48.3, 812.0], [48.4, 812.0], [48.5, 812.0], [48.6, 816.0], [48.7, 816.0], [48.8, 816.0], [48.9, 817.0], [49.0, 817.0], [49.1, 817.0], [49.2, 819.0], [49.3, 819.0], [49.4, 819.0], [49.5, 820.0], [49.6, 820.0], [49.7, 820.0], [49.8, 821.0], [49.9, 821.0], [50.0, 821.0], [50.1, 821.0], [50.2, 821.0], [50.3, 825.0], [50.4, 825.0], [50.5, 825.0], [50.6, 827.0], [50.7, 827.0], [50.8, 827.0], [50.9, 827.0], [51.0, 827.0], [51.1, 827.0], [51.2, 831.0], [51.3, 831.0], [51.4, 831.0], [51.5, 831.0], [51.6, 831.0], [51.7, 831.0], [51.8, 832.0], [51.9, 832.0], [52.0, 832.0], [52.1, 832.0], [52.2, 832.0], [52.3, 832.0], [52.4, 836.0], [52.5, 836.0], [52.6, 836.0], [52.7, 838.0], [52.8, 838.0], [52.9, 838.0], [53.0, 839.0], [53.1, 839.0], [53.2, 839.0], [53.3, 839.0], [53.4, 839.0], [53.5, 841.0], [53.6, 841.0], [53.7, 841.0], [53.8, 842.0], [53.9, 842.0], [54.0, 842.0], [54.1, 844.0], [54.2, 844.0], [54.3, 844.0], [54.4, 844.0], [54.5, 844.0], [54.6, 844.0], [54.7, 845.0], [54.8, 845.0], [54.9, 845.0], [55.0, 845.0], [55.1, 845.0], [55.2, 845.0], [55.3, 846.0], [55.4, 846.0], [55.5, 846.0], [55.6, 846.0], [55.7, 846.0], [55.8, 846.0], [55.9, 847.0], [56.0, 847.0], [56.1, 847.0], [56.2, 848.0], [56.3, 848.0], [56.4, 850.0], [56.5, 850.0], [56.6, 850.0], [56.7, 853.0], [56.8, 853.0], [56.9, 853.0], [57.0, 855.0], [57.1, 855.0], [57.2, 855.0], [57.3, 859.0], [57.4, 859.0], [57.5, 859.0], [57.6, 859.0], [57.7, 859.0], [57.8, 859.0], [57.9, 860.0], [58.0, 860.0], [58.1, 860.0], [58.2, 862.0], [58.3, 862.0], [58.4, 862.0], [58.5, 862.0], [58.6, 862.0], [58.7, 862.0], [58.8, 864.0], [58.9, 864.0], [59.0, 864.0], [59.1, 865.0], [59.2, 865.0], [59.3, 865.0], [59.4, 867.0], [59.5, 867.0], [59.6, 867.0], [59.7, 867.0], [59.8, 867.0], [59.9, 867.0], [60.0, 867.0], [60.1, 867.0], [60.2, 869.0], [60.3, 869.0], [60.4, 869.0], [60.5, 869.0], [60.6, 869.0], [60.7, 869.0], [60.8, 870.0], [60.9, 870.0], [61.0, 870.0], [61.1, 872.0], [61.2, 872.0], [61.3, 872.0], [61.4, 872.0], [61.5, 872.0], [61.6, 872.0], [61.7, 872.0], [61.8, 872.0], [61.9, 872.0], [62.0, 873.0], [62.1, 873.0], [62.2, 873.0], [62.3, 874.0], [62.4, 874.0], [62.5, 876.0], [62.6, 876.0], [62.7, 876.0], [62.8, 876.0], [62.9, 876.0], [63.0, 876.0], [63.1, 878.0], [63.2, 878.0], [63.3, 878.0], [63.4, 879.0], [63.5, 879.0], [63.6, 879.0], [63.7, 881.0], [63.8, 881.0], [63.9, 881.0], [64.0, 882.0], [64.1, 882.0], [64.2, 882.0], [64.3, 883.0], [64.4, 883.0], [64.5, 883.0], [64.6, 884.0], [64.7, 884.0], [64.8, 884.0], [64.9, 885.0], [65.0, 885.0], [65.1, 885.0], [65.2, 889.0], [65.3, 889.0], [65.4, 889.0], [65.5, 890.0], [65.6, 890.0], [65.7, 891.0], [65.8, 891.0], [65.9, 891.0], [66.0, 892.0], [66.1, 892.0], [66.2, 892.0], [66.3, 893.0], [66.4, 893.0], [66.5, 893.0], [66.6, 895.0], [66.7, 895.0], [66.8, 895.0], [66.9, 895.0], [67.0, 895.0], [67.1, 895.0], [67.2, 898.0], [67.3, 898.0], [67.4, 898.0], [67.5, 899.0], [67.6, 899.0], [67.7, 899.0], [67.8, 901.0], [67.9, 901.0], [68.0, 901.0], [68.1, 905.0], [68.2, 905.0], [68.3, 905.0], [68.4, 905.0], [68.5, 905.0], [68.6, 905.0], [68.7, 908.0], [68.8, 908.0], [68.9, 914.0], [69.0, 914.0], [69.1, 914.0], [69.2, 917.0], [69.3, 917.0], [69.4, 917.0], [69.5, 920.0], [69.6, 920.0], [69.7, 920.0], [69.8, 925.0], [69.9, 925.0], [70.0, 925.0], [70.1, 928.0], [70.2, 928.0], [70.3, 928.0], [70.4, 929.0], [70.5, 929.0], [70.6, 929.0], [70.7, 934.0], [70.8, 934.0], [70.9, 934.0], [71.0, 941.0], [71.1, 941.0], [71.2, 941.0], [71.3, 943.0], [71.4, 943.0], [71.5, 943.0], [71.6, 943.0], [71.7, 943.0], [71.8, 943.0], [71.9, 945.0], [72.0, 945.0], [72.1, 947.0], [72.2, 947.0], [72.3, 947.0], [72.4, 948.0], [72.5, 948.0], [72.6, 948.0], [72.7, 951.0], [72.8, 951.0], [72.9, 951.0], [73.0, 953.0], [73.1, 953.0], [73.2, 953.0], [73.3, 953.0], [73.4, 953.0], [73.5, 953.0], [73.6, 957.0], [73.7, 957.0], [73.8, 957.0], [73.9, 957.0], [74.0, 957.0], [74.1, 957.0], [74.2, 958.0], [74.3, 958.0], [74.4, 958.0], [74.5, 960.0], [74.6, 960.0], [74.7, 960.0], [74.8, 961.0], [74.9, 961.0], [75.0, 961.0], [75.1, 966.0], [75.2, 966.0], [75.3, 967.0], [75.4, 967.0], [75.5, 967.0], [75.6, 969.0], [75.7, 969.0], [75.8, 969.0], [75.9, 969.0], [76.0, 969.0], [76.1, 969.0], [76.2, 970.0], [76.3, 970.0], [76.4, 970.0], [76.5, 982.0], [76.6, 982.0], [76.7, 982.0], [76.8, 986.0], [76.9, 986.0], [77.0, 986.0], [77.1, 991.0], [77.2, 991.0], [77.3, 991.0], [77.4, 992.0], [77.5, 992.0], [77.6, 992.0], [77.7, 994.0], [77.8, 994.0], [77.9, 994.0], [78.0, 1036.0], [78.1, 1036.0], [78.2, 1050.0], [78.3, 1050.0], [78.4, 1050.0], [78.5, 1050.0], [78.6, 1050.0], [78.7, 1050.0], [78.8, 1051.0], [78.9, 1051.0], [79.0, 1051.0], [79.1, 1052.0], [79.2, 1052.0], [79.3, 1052.0], [79.4, 1054.0], [79.5, 1054.0], [79.6, 1054.0], [79.7, 1060.0], [79.8, 1060.0], [79.9, 1060.0], [80.0, 1070.0], [80.1, 1070.0], [80.2, 1070.0], [80.3, 1071.0], [80.4, 1071.0], [80.5, 1071.0], [80.6, 1072.0], [80.7, 1072.0], [80.8, 1072.0], [80.9, 1075.0], [81.0, 1075.0], [81.1, 1075.0], [81.2, 1079.0], [81.3, 1079.0], [81.4, 1080.0], [81.5, 1080.0], [81.6, 1080.0], [81.7, 1082.0], [81.8, 1082.0], [81.9, 1082.0], [82.0, 1083.0], [82.1, 1083.0], [82.2, 1083.0], [82.3, 1089.0], [82.4, 1089.0], [82.5, 1089.0], [82.6, 1090.0], [82.7, 1090.0], [82.8, 1090.0], [82.9, 1092.0], [83.0, 1092.0], [83.1, 1092.0], [83.2, 1093.0], [83.3, 1093.0], [83.4, 1093.0], [83.5, 1094.0], [83.6, 1094.0], [83.7, 1094.0], [83.8, 1100.0], [83.9, 1100.0], [84.0, 1100.0], [84.1, 1101.0], [84.2, 1101.0], [84.3, 1101.0], [84.4, 1105.0], [84.5, 1105.0], [84.6, 1106.0], [84.7, 1106.0], [84.8, 1106.0], [84.9, 1107.0], [85.0, 1107.0], [85.1, 1107.0], [85.2, 1144.0], [85.3, 1144.0], [85.4, 1144.0], [85.5, 1154.0], [85.6, 1154.0], [85.7, 1154.0], [85.8, 1163.0], [85.9, 1163.0], [86.0, 1163.0], [86.1, 1164.0], [86.2, 1164.0], [86.3, 1164.0], [86.4, 1180.0], [86.5, 1180.0], [86.6, 1180.0], [86.7, 1180.0], [86.8, 1180.0], [86.9, 1180.0], [87.0, 1181.0], [87.1, 1181.0], [87.2, 1181.0], [87.3, 1182.0], [87.4, 1182.0], [87.5, 1182.0], [87.6, 1184.0], [87.7, 1184.0], [87.8, 1186.0], [87.9, 1186.0], [88.0, 1186.0], [88.1, 1187.0], [88.2, 1187.0], [88.3, 1187.0], [88.4, 1189.0], [88.5, 1189.0], [88.6, 1189.0], [88.7, 1204.0], [88.8, 1204.0], [88.9, 1204.0], [89.0, 1210.0], [89.1, 1210.0], [89.2, 1210.0], [89.3, 1216.0], [89.4, 1216.0], [89.5, 1216.0], [89.6, 1217.0], [89.7, 1217.0], [89.8, 1217.0], [89.9, 1217.0], [90.0, 1217.0], [90.1, 1217.0], [90.2, 1218.0], [90.3, 1218.0], [90.4, 1218.0], [90.5, 1219.0], [90.6, 1219.0], [90.7, 1222.0], [90.8, 1222.0], [90.9, 1222.0], [91.0, 1223.0], [91.1, 1223.0], [91.2, 1223.0], [91.3, 1223.0], [91.4, 1223.0], [91.5, 1223.0], [91.6, 1226.0], [91.7, 1226.0], [91.8, 1226.0], [91.9, 1229.0], [92.0, 1229.0], [92.1, 1229.0], [92.2, 1271.0], [92.3, 1271.0], [92.4, 1271.0], [92.5, 1288.0], [92.6, 1288.0], [92.7, 1288.0], [92.8, 1308.0], [92.9, 1308.0], [93.0, 1308.0], [93.1, 1353.0], [93.2, 1353.0], [93.3, 1353.0], [93.4, 1354.0], [93.5, 1354.0], [93.6, 1354.0], [93.7, 1367.0], [93.8, 1367.0], [93.9, 1370.0], [94.0, 1370.0], [94.1, 1370.0], [94.2, 1371.0], [94.3, 1371.0], [94.4, 1371.0], [94.5, 1371.0], [94.6, 1371.0], [94.7, 1371.0], [94.8, 1372.0], [94.9, 1372.0], [95.0, 1372.0], [95.1, 1373.0], [95.2, 1373.0], [95.3, 1373.0], [95.4, 1373.0], [95.5, 1373.0], [95.6, 1373.0], [95.7, 1377.0], [95.8, 1377.0], [95.9, 1377.0], [96.0, 1378.0], [96.1, 1378.0], [96.2, 1378.0], [96.3, 1390.0], [96.4, 1390.0], [96.5, 1390.0], [96.6, 1391.0], [96.7, 1391.0], [96.8, 1391.0], [96.9, 1396.0], [97.0, 1396.0], [97.1, 1403.0], [97.2, 1403.0], [97.3, 1403.0], [97.4, 1418.0], [97.5, 1418.0], [97.6, 1418.0], [97.7, 1426.0], [97.8, 1426.0], [97.9, 1426.0], [98.0, 1426.0], [98.1, 1426.0], [98.2, 1426.0], [98.3, 1469.0], [98.4, 1469.0], [98.5, 1469.0], [98.6, 1473.0], [98.7, 1473.0], [98.8, 1473.0], [98.9, 1475.0], [99.0, 1475.0], [99.1, 1475.0], [99.2, 1480.0], [99.3, 1480.0], [99.4, 1480.0], [99.5, 1485.0], [99.6, 1485.0], [99.7, 1485.0], [99.8, 1486.0], [99.9, 1486.0], [100.0, 1486.0]], "isOverall": false, "label": "gateway_cl/hellotea/tea-0", "isController": false}, {"data": [[0.0, 4.0], [0.1, 4.0], [0.2, 4.0], [0.3, 4.0], [0.4, 4.0], [0.5, 4.0], [0.6, 4.0], [0.7, 4.0], [0.8, 4.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 5.0], [1.6, 5.0], [1.7, 5.0], [1.8, 5.0], [1.9, 5.0], [2.0, 5.0], [2.1, 5.0], [2.2, 5.0], [2.3, 5.0], [2.4, 5.0], [2.5, 5.0], [2.6, 5.0], [2.7, 5.0], [2.8, 5.0], [2.9, 5.0], [3.0, 5.0], [3.1, 5.0], [3.2, 5.0], [3.3, 5.0], [3.4, 5.0], [3.5, 6.0], [3.6, 6.0], [3.7, 6.0], [3.8, 6.0], [3.9, 6.0], [4.0, 6.0], [4.1, 6.0], [4.2, 6.0], [4.3, 6.0], [4.4, 6.0], [4.5, 6.0], [4.6, 6.0], [4.7, 6.0], [4.8, 6.0], [4.9, 6.0], [5.0, 6.0], [5.1, 6.0], [5.2, 6.0], [5.3, 6.0], [5.4, 6.0], [5.5, 6.0], [5.6, 6.0], [5.7, 6.0], [5.8, 6.0], [5.9, 6.0], [6.0, 6.0], [6.1, 6.0], [6.2, 6.0], [6.3, 6.0], [6.4, 7.0], [6.5, 7.0], [6.6, 7.0], [6.7, 7.0], [6.8, 7.0], [6.9, 7.0], [7.0, 7.0], [7.1, 7.0], [7.2, 7.0], [7.3, 7.0], [7.4, 7.0], [7.5, 7.0], [7.6, 7.0], [7.7, 7.0], [7.8, 7.0], [7.9, 8.0], [8.0, 8.0], [8.1, 8.0], [8.2, 9.0], [8.3, 9.0], [8.4, 9.0], [8.5, 9.0], [8.6, 9.0], [8.7, 9.0], [8.8, 9.0], [8.9, 9.0], [9.0, 9.0], [9.1, 9.0], [9.2, 9.0], [9.3, 9.0], [9.4, 9.0], [9.5, 9.0], [9.6, 9.0], [9.7, 9.0], [9.8, 9.0], [9.9, 10.0], [10.0, 10.0], [10.1, 10.0], [10.2, 10.0], [10.3, 10.0], [10.4, 10.0], [10.5, 11.0], [10.6, 11.0], [10.7, 11.0], [10.8, 11.0], [10.9, 11.0], [11.0, 11.0], [11.1, 12.0], [11.2, 12.0], [11.3, 12.0], [11.4, 12.0], [11.5, 12.0], [11.6, 12.0], [11.7, 12.0], [11.8, 12.0], [11.9, 12.0], [12.0, 13.0], [12.1, 13.0], [12.2, 13.0], [12.3, 15.0], [12.4, 15.0], [12.5, 15.0], [12.6, 15.0], [12.7, 15.0], [12.8, 121.0], [12.9, 121.0], [13.0, 121.0], [13.1, 121.0], [13.2, 121.0], [13.3, 121.0], [13.4, 124.0], [13.5, 124.0], [13.6, 124.0], [13.7, 130.0], [13.8, 130.0], [13.9, 130.0], [14.0, 137.0], [14.1, 137.0], [14.2, 137.0], [14.3, 137.0], [14.4, 137.0], [14.5, 137.0], [14.6, 140.0], [14.7, 140.0], [14.8, 140.0], [14.9, 146.0], [15.0, 146.0], [15.1, 146.0], [15.2, 178.0], [15.3, 178.0], [15.4, 178.0], [15.5, 192.0], [15.6, 192.0], [15.7, 193.0], [15.8, 193.0], [15.9, 193.0], [16.0, 197.0], [16.1, 197.0], [16.2, 197.0], [16.3, 198.0], [16.4, 198.0], [16.5, 198.0], [16.6, 200.0], [16.7, 200.0], [16.8, 200.0], [16.9, 200.0], [17.0, 200.0], [17.1, 200.0], [17.2, 204.0], [17.3, 204.0], [17.4, 204.0], [17.5, 205.0], [17.6, 205.0], [17.7, 205.0], [17.8, 215.0], [17.9, 215.0], [18.0, 215.0], [18.1, 217.0], [18.2, 217.0], [18.3, 217.0], [18.4, 224.0], [18.5, 224.0], [18.6, 224.0], [18.7, 225.0], [18.8, 225.0], [18.9, 253.0], [19.0, 253.0], [19.1, 253.0], [19.2, 254.0], [19.3, 254.0], [19.4, 254.0], [19.5, 254.0], [19.6, 254.0], [19.7, 254.0], [19.8, 255.0], [19.9, 255.0], [20.0, 255.0], [20.1, 255.0], [20.2, 255.0], [20.3, 255.0], [20.4, 255.0], [20.5, 255.0], [20.6, 255.0], [20.7, 255.0], [20.8, 255.0], [20.9, 255.0], [21.0, 258.0], [21.1, 258.0], [21.2, 258.0], [21.3, 260.0], [21.4, 260.0], [21.5, 260.0], [21.6, 264.0], [21.7, 264.0], [21.8, 264.0], [21.9, 267.0], [22.0, 267.0], [22.1, 269.0], [22.2, 269.0], [22.3, 269.0], [22.4, 271.0], [22.5, 271.0], [22.6, 271.0], [22.7, 272.0], [22.8, 272.0], [22.9, 272.0], [23.0, 275.0], [23.1, 275.0], [23.2, 275.0], [23.3, 277.0], [23.4, 277.0], [23.5, 277.0], [23.6, 278.0], [23.7, 278.0], [23.8, 278.0], [23.9, 284.0], [24.0, 284.0], [24.1, 284.0], [24.2, 286.0], [24.3, 286.0], [24.4, 286.0], [24.5, 290.0], [24.6, 290.0], [24.7, 290.0], [24.8, 291.0], [24.9, 291.0], [25.0, 291.0], [25.1, 291.0], [25.2, 291.0], [25.3, 294.0], [25.4, 294.0], [25.5, 294.0], [25.6, 298.0], [25.7, 298.0], [25.8, 298.0], [25.9, 299.0], [26.0, 299.0], [26.1, 299.0], [26.2, 303.0], [26.3, 303.0], [26.4, 303.0], [26.5, 309.0], [26.6, 309.0], [26.7, 309.0], [26.8, 309.0], [26.9, 309.0], [27.0, 309.0], [27.1, 310.0], [27.2, 310.0], [27.3, 310.0], [27.4, 312.0], [27.5, 312.0], [27.6, 312.0], [27.7, 315.0], [27.8, 315.0], [27.9, 315.0], [28.0, 316.0], [28.1, 316.0], [28.2, 316.0], [28.3, 316.0], [28.4, 316.0], [28.5, 316.0], [28.6, 316.0], [28.7, 316.0], [28.8, 316.0], [28.9, 316.0], [29.0, 316.0], [29.1, 317.0], [29.2, 317.0], [29.3, 317.0], [29.4, 318.0], [29.5, 318.0], [29.6, 318.0], [29.7, 318.0], [29.8, 318.0], [29.9, 318.0], [30.0, 320.0], [30.1, 320.0], [30.2, 320.0], [30.3, 323.0], [30.4, 323.0], [30.5, 323.0], [30.6, 325.0], [30.7, 325.0], [30.8, 325.0], [30.9, 326.0], [31.0, 326.0], [31.1, 326.0], [31.2, 327.0], [31.3, 327.0], [31.4, 327.0], [31.5, 327.0], [31.6, 327.0], [31.7, 328.0], [31.8, 328.0], [31.9, 328.0], [32.0, 330.0], [32.1, 330.0], [32.2, 330.0], [32.3, 330.0], [32.4, 330.0], [32.5, 330.0], [32.6, 331.0], [32.7, 331.0], [32.8, 331.0], [32.9, 332.0], [33.0, 332.0], [33.1, 332.0], [33.2, 333.0], [33.3, 333.0], [33.4, 333.0], [33.5, 333.0], [33.6, 333.0], [33.7, 333.0], [33.8, 335.0], [33.9, 335.0], [34.0, 335.0], [34.1, 335.0], [34.2, 335.0], [34.3, 335.0], [34.4, 336.0], [34.5, 336.0], [34.6, 337.0], [34.7, 337.0], [34.8, 337.0], [34.9, 338.0], [35.0, 338.0], [35.1, 338.0], [35.2, 342.0], [35.3, 342.0], [35.4, 342.0], [35.5, 343.0], [35.6, 343.0], [35.7, 343.0], [35.8, 345.0], [35.9, 345.0], [36.0, 345.0], [36.1, 346.0], [36.2, 346.0], [36.3, 346.0], [36.4, 346.0], [36.5, 346.0], [36.6, 346.0], [36.7, 346.0], [36.8, 346.0], [36.9, 346.0], [37.0, 347.0], [37.1, 347.0], [37.2, 347.0], [37.3, 348.0], [37.4, 348.0], [37.5, 348.0], [37.6, 351.0], [37.7, 351.0], [37.8, 351.0], [37.9, 351.0], [38.0, 351.0], [38.1, 352.0], [38.2, 352.0], [38.3, 352.0], [38.4, 352.0], [38.5, 352.0], [38.6, 352.0], [38.7, 353.0], [38.8, 353.0], [38.9, 353.0], [39.0, 355.0], [39.1, 355.0], [39.2, 355.0], [39.3, 355.0], [39.4, 355.0], [39.5, 355.0], [39.6, 357.0], [39.7, 357.0], [39.8, 357.0], [39.9, 361.0], [40.0, 361.0], [40.1, 361.0], [40.2, 362.0], [40.3, 362.0], [40.4, 362.0], [40.5, 363.0], [40.6, 363.0], [40.7, 364.0], [40.8, 364.0], [40.9, 364.0], [41.0, 366.0], [41.1, 366.0], [41.2, 366.0], [41.3, 367.0], [41.4, 367.0], [41.5, 367.0], [41.6, 368.0], [41.7, 368.0], [41.8, 368.0], [41.9, 369.0], [42.0, 369.0], [42.1, 369.0], [42.2, 369.0], [42.3, 369.0], [42.4, 369.0], [42.5, 370.0], [42.6, 370.0], [42.7, 370.0], [42.8, 370.0], [42.9, 370.0], [43.0, 370.0], [43.1, 377.0], [43.2, 377.0], [43.3, 377.0], [43.4, 380.0], [43.5, 380.0], [43.6, 380.0], [43.7, 381.0], [43.8, 381.0], [43.9, 383.0], [44.0, 383.0], [44.1, 383.0], [44.2, 383.0], [44.3, 383.0], [44.4, 383.0], [44.5, 384.0], [44.6, 384.0], [44.7, 384.0], [44.8, 384.0], [44.9, 384.0], [45.0, 384.0], [45.1, 387.0], [45.2, 387.0], [45.3, 387.0], [45.4, 387.0], [45.5, 387.0], [45.6, 387.0], [45.7, 388.0], [45.8, 388.0], [45.9, 388.0], [46.0, 391.0], [46.1, 391.0], [46.2, 391.0], [46.3, 392.0], [46.4, 392.0], [46.5, 392.0], [46.6, 393.0], [46.7, 393.0], [46.8, 393.0], [46.9, 399.0], [47.0, 399.0], [47.1, 401.0], [47.2, 401.0], [47.3, 401.0], [47.4, 402.0], [47.5, 402.0], [47.6, 402.0], [47.7, 404.0], [47.8, 404.0], [47.9, 404.0], [48.0, 406.0], [48.1, 406.0], [48.2, 406.0], [48.3, 411.0], [48.4, 411.0], [48.5, 411.0], [48.6, 415.0], [48.7, 415.0], [48.8, 415.0], [48.9, 416.0], [49.0, 416.0], [49.1, 416.0], [49.2, 419.0], [49.3, 419.0], [49.4, 419.0], [49.5, 421.0], [49.6, 421.0], [49.7, 421.0], [49.8, 433.0], [49.9, 433.0], [50.0, 434.0], [50.1, 434.0], [50.2, 434.0], [50.3, 435.0], [50.4, 435.0], [50.5, 435.0], [50.6, 435.0], [50.7, 435.0], [50.8, 435.0], [50.9, 440.0], [51.0, 440.0], [51.1, 440.0], [51.2, 442.0], [51.3, 442.0], [51.4, 442.0], [51.5, 444.0], [51.6, 444.0], [51.7, 444.0], [51.8, 448.0], [51.9, 448.0], [52.0, 448.0], [52.1, 448.0], [52.2, 448.0], [52.3, 448.0], [52.4, 456.0], [52.5, 456.0], [52.6, 456.0], [52.7, 457.0], [52.8, 457.0], [52.9, 457.0], [53.0, 458.0], [53.1, 458.0], [53.2, 458.0], [53.3, 458.0], [53.4, 458.0], [53.5, 460.0], [53.6, 460.0], [53.7, 460.0], [53.8, 464.0], [53.9, 464.0], [54.0, 464.0], [54.1, 468.0], [54.2, 468.0], [54.3, 468.0], [54.4, 468.0], [54.5, 468.0], [54.6, 468.0], [54.7, 474.0], [54.8, 474.0], [54.9, 474.0], [55.0, 475.0], [55.1, 475.0], [55.2, 475.0], [55.3, 476.0], [55.4, 476.0], [55.5, 476.0], [55.6, 478.0], [55.7, 478.0], [55.8, 478.0], [55.9, 481.0], [56.0, 481.0], [56.1, 481.0], [56.2, 481.0], [56.3, 481.0], [56.4, 483.0], [56.5, 483.0], [56.6, 483.0], [56.7, 483.0], [56.8, 483.0], [56.9, 483.0], [57.0, 485.0], [57.1, 485.0], [57.2, 485.0], [57.3, 487.0], [57.4, 487.0], [57.5, 487.0], [57.6, 489.0], [57.7, 489.0], [57.8, 489.0], [57.9, 491.0], [58.0, 491.0], [58.1, 491.0], [58.2, 493.0], [58.3, 493.0], [58.4, 493.0], [58.5, 494.0], [58.6, 494.0], [58.7, 494.0], [58.8, 496.0], [58.9, 496.0], [59.0, 496.0], [59.1, 498.0], [59.2, 498.0], [59.3, 498.0], [59.4, 499.0], [59.5, 499.0], [59.6, 500.0], [59.7, 500.0], [59.8, 500.0], [59.9, 502.0], [60.0, 502.0], [60.1, 502.0], [60.2, 502.0], [60.3, 502.0], [60.4, 502.0], [60.5, 502.0], [60.6, 502.0], [60.7, 502.0], [60.8, 502.0], [60.9, 502.0], [61.0, 502.0], [61.1, 502.0], [61.2, 502.0], [61.3, 502.0], [61.4, 504.0], [61.5, 504.0], [61.6, 504.0], [61.7, 505.0], [61.8, 505.0], [61.9, 505.0], [62.0, 505.0], [62.1, 505.0], [62.2, 505.0], [62.3, 507.0], [62.4, 507.0], [62.5, 509.0], [62.6, 509.0], [62.7, 509.0], [62.8, 509.0], [62.9, 509.0], [63.0, 509.0], [63.1, 510.0], [63.2, 510.0], [63.3, 510.0], [63.4, 513.0], [63.5, 513.0], [63.6, 513.0], [63.7, 513.0], [63.8, 513.0], [63.9, 513.0], [64.0, 515.0], [64.1, 515.0], [64.2, 515.0], [64.3, 515.0], [64.4, 515.0], [64.5, 515.0], [64.6, 516.0], [64.7, 516.0], [64.8, 516.0], [64.9, 516.0], [65.0, 516.0], [65.1, 516.0], [65.2, 516.0], [65.3, 516.0], [65.4, 516.0], [65.5, 517.0], [65.6, 517.0], [65.7, 518.0], [65.8, 518.0], [65.9, 518.0], [66.0, 519.0], [66.1, 519.0], [66.2, 519.0], [66.3, 522.0], [66.4, 522.0], [66.5, 522.0], [66.6, 522.0], [66.7, 522.0], [66.8, 522.0], [66.9, 525.0], [67.0, 525.0], [67.1, 525.0], [67.2, 526.0], [67.3, 526.0], [67.4, 526.0], [67.5, 526.0], [67.6, 526.0], [67.7, 526.0], [67.8, 527.0], [67.9, 527.0], [68.0, 527.0], [68.1, 527.0], [68.2, 527.0], [68.3, 527.0], [68.4, 531.0], [68.5, 531.0], [68.6, 531.0], [68.7, 536.0], [68.8, 536.0], [68.9, 538.0], [69.0, 538.0], [69.1, 538.0], [69.2, 539.0], [69.3, 539.0], [69.4, 539.0], [69.5, 539.0], [69.6, 539.0], [69.7, 539.0], [69.8, 540.0], [69.9, 540.0], [70.0, 540.0], [70.1, 540.0], [70.2, 540.0], [70.3, 540.0], [70.4, 541.0], [70.5, 541.0], [70.6, 541.0], [70.7, 542.0], [70.8, 542.0], [70.9, 542.0], [71.0, 543.0], [71.1, 543.0], [71.2, 543.0], [71.3, 543.0], [71.4, 543.0], [71.5, 543.0], [71.6, 553.0], [71.7, 553.0], [71.8, 553.0], [71.9, 554.0], [72.0, 554.0], [72.1, 567.0], [72.2, 567.0], [72.3, 567.0], [72.4, 579.0], [72.5, 579.0], [72.6, 579.0], [72.7, 585.0], [72.8, 585.0], [72.9, 585.0], [73.0, 586.0], [73.1, 586.0], [73.2, 586.0], [73.3, 586.0], [73.4, 586.0], [73.5, 586.0], [73.6, 589.0], [73.7, 589.0], [73.8, 589.0], [73.9, 592.0], [74.0, 592.0], [74.1, 592.0], [74.2, 594.0], [74.3, 594.0], [74.4, 594.0], [74.5, 594.0], [74.6, 594.0], [74.7, 594.0], [74.8, 596.0], [74.9, 596.0], [75.0, 599.0], [75.1, 599.0], [75.2, 599.0], [75.3, 601.0], [75.4, 601.0], [75.5, 601.0], [75.6, 604.0], [75.7, 604.0], [75.8, 604.0], [75.9, 608.0], [76.0, 608.0], [76.1, 608.0], [76.2, 618.0], [76.3, 618.0], [76.4, 618.0], [76.5, 620.0], [76.6, 620.0], [76.7, 620.0], [76.8, 622.0], [76.9, 622.0], [77.0, 622.0], [77.1, 630.0], [77.2, 630.0], [77.3, 630.0], [77.4, 631.0], [77.5, 631.0], [77.6, 631.0], [77.7, 631.0], [77.8, 631.0], [77.9, 631.0], [78.0, 635.0], [78.1, 635.0], [78.2, 639.0], [78.3, 639.0], [78.4, 639.0], [78.5, 650.0], [78.6, 650.0], [78.7, 650.0], [78.8, 655.0], [78.9, 655.0], [79.0, 655.0], [79.1, 656.0], [79.2, 656.0], [79.3, 656.0], [79.4, 658.0], [79.5, 658.0], [79.6, 658.0], [79.7, 666.0], [79.8, 666.0], [79.9, 666.0], [80.0, 668.0], [80.1, 668.0], [80.2, 668.0], [80.3, 668.0], [80.4, 668.0], [80.5, 668.0], [80.6, 681.0], [80.7, 681.0], [80.8, 681.0], [80.9, 682.0], [81.0, 682.0], [81.1, 682.0], [81.2, 686.0], [81.3, 686.0], [81.4, 689.0], [81.5, 689.0], [81.6, 689.0], [81.7, 689.0], [81.8, 689.0], [81.9, 689.0], [82.0, 691.0], [82.1, 691.0], [82.2, 691.0], [82.3, 695.0], [82.4, 695.0], [82.5, 695.0], [82.6, 696.0], [82.7, 696.0], [82.8, 696.0], [82.9, 711.0], [83.0, 711.0], [83.1, 711.0], [83.2, 712.0], [83.3, 712.0], [83.4, 712.0], [83.5, 712.0], [83.6, 712.0], [83.7, 712.0], [83.8, 712.0], [83.9, 712.0], [84.0, 712.0], [84.1, 714.0], [84.2, 714.0], [84.3, 714.0], [84.4, 718.0], [84.5, 718.0], [84.6, 719.0], [84.7, 719.0], [84.8, 719.0], [84.9, 720.0], [85.0, 720.0], [85.1, 720.0], [85.2, 721.0], [85.3, 721.0], [85.4, 721.0], [85.5, 722.0], [85.6, 722.0], [85.7, 722.0], [85.8, 723.0], [85.9, 723.0], [86.0, 723.0], [86.1, 723.0], [86.2, 723.0], [86.3, 723.0], [86.4, 724.0], [86.5, 724.0], [86.6, 724.0], [86.7, 725.0], [86.8, 725.0], [86.9, 725.0], [87.0, 726.0], [87.1, 726.0], [87.2, 726.0], [87.3, 726.0], [87.4, 726.0], [87.5, 726.0], [87.6, 726.0], [87.7, 726.0], [87.8, 726.0], [87.9, 726.0], [88.0, 726.0], [88.1, 726.0], [88.2, 726.0], [88.3, 726.0], [88.4, 727.0], [88.5, 727.0], [88.6, 727.0], [88.7, 728.0], [88.8, 728.0], [88.9, 728.0], [89.0, 728.0], [89.1, 728.0], [89.2, 728.0], [89.3, 733.0], [89.4, 733.0], [89.5, 733.0], [89.6, 734.0], [89.7, 734.0], [89.8, 734.0], [89.9, 735.0], [90.0, 735.0], [90.1, 735.0], [90.2, 736.0], [90.3, 736.0], [90.4, 736.0], [90.5, 740.0], [90.6, 740.0], [90.7, 745.0], [90.8, 745.0], [90.9, 745.0], [91.0, 747.0], [91.1, 747.0], [91.2, 747.0], [91.3, 753.0], [91.4, 753.0], [91.5, 753.0], [91.6, 769.0], [91.7, 769.0], [91.8, 769.0], [91.9, 769.0], [92.0, 769.0], [92.1, 769.0], [92.2, 771.0], [92.3, 771.0], [92.4, 771.0], [92.5, 771.0], [92.6, 771.0], [92.7, 771.0], [92.8, 772.0], [92.9, 772.0], [93.0, 772.0], [93.1, 773.0], [93.2, 773.0], [93.3, 773.0], [93.4, 775.0], [93.5, 775.0], [93.6, 775.0], [93.7, 778.0], [93.8, 778.0], [93.9, 780.0], [94.0, 780.0], [94.1, 780.0], [94.2, 782.0], [94.3, 782.0], [94.4, 782.0], [94.5, 783.0], [94.6, 783.0], [94.7, 783.0], [94.8, 796.0], [94.9, 796.0], [95.0, 796.0], [95.1, 798.0], [95.2, 798.0], [95.3, 798.0], [95.4, 798.0], [95.5, 798.0], [95.6, 798.0], [95.7, 807.0], [95.8, 807.0], [95.9, 807.0], [96.0, 808.0], [96.1, 808.0], [96.2, 808.0], [96.3, 808.0], [96.4, 808.0], [96.5, 808.0], [96.6, 810.0], [96.7, 810.0], [96.8, 810.0], [96.9, 810.0], [97.0, 810.0], [97.1, 812.0], [97.2, 812.0], [97.3, 812.0], [97.4, 816.0], [97.5, 816.0], [97.6, 816.0], [97.7, 820.0], [97.8, 820.0], [97.9, 820.0], [98.0, 831.0], [98.1, 831.0], [98.2, 831.0], [98.3, 832.0], [98.4, 832.0], [98.5, 832.0], [98.6, 842.0], [98.7, 842.0], [98.8, 842.0], [98.9, 887.0], [99.0, 887.0], [99.1, 887.0], [99.2, 912.0], [99.3, 912.0], [99.4, 912.0], [99.5, 918.0], [99.6, 918.0], [99.7, 918.0], [99.8, 923.0], [99.9, 923.0], [100.0, 923.0]], "isOverall": false, "label": "gateway_cl/hellotea/tea-1", "isController": false}, {"data": [[0.0, 876.0], [0.1, 876.0], [0.2, 876.0], [0.3, 1024.0], [0.4, 1024.0], [0.5, 1024.0], [0.6, 1214.0], [0.7, 1214.0], [0.8, 1214.0], [0.9, 1221.0], [1.0, 1221.0], [1.1, 1221.0], [1.2, 1228.0], [1.3, 1228.0], [1.4, 1228.0], [1.5, 1262.0], [1.6, 1262.0], [1.7, 1262.0], [1.8, 1270.0], [1.9, 1270.0], [2.0, 1270.0], [2.1, 1329.0], [2.2, 1329.0], [2.3, 1329.0], [2.4, 1372.0], [2.5, 1372.0], [2.6, 1372.0], [2.7, 1379.0], [2.8, 1379.0], [2.9, 1379.0], [3.0, 1386.0], [3.1, 1386.0], [3.2, 1404.0], [3.3, 1404.0], [3.4, 1404.0], [3.5, 1421.0], [3.6, 1421.0], [3.7, 1421.0], [3.8, 1430.0], [3.9, 1430.0], [4.0, 1430.0], [4.1, 1457.0], [4.2, 1457.0], [4.3, 1457.0], [4.4, 1462.0], [4.5, 1462.0], [4.6, 1462.0], [4.7, 1469.0], [4.8, 1469.0], [4.9, 1469.0], [5.0, 1498.0], [5.1, 1498.0], [5.2, 1498.0], [5.3, 1535.0], [5.4, 1535.0], [5.5, 1535.0], [5.6, 1544.0], [5.7, 1544.0], [5.8, 1544.0], [5.9, 1552.0], [6.0, 1552.0], [6.1, 1552.0], [6.2, 1556.0], [6.3, 1556.0], [6.4, 1574.0], [6.5, 1574.0], [6.6, 1574.0], [6.7, 1598.0], [6.8, 1598.0], [6.9, 1598.0], [7.0, 1605.0], [7.1, 1605.0], [7.2, 1605.0], [7.3, 1620.0], [7.4, 1620.0], [7.5, 1620.0], [7.6, 1658.0], [7.7, 1658.0], [7.8, 1658.0], [7.9, 1668.0], [8.0, 1668.0], [8.1, 1668.0], [8.2, 1674.0], [8.3, 1674.0], [8.4, 1674.0], [8.5, 1699.0], [8.6, 1699.0], [8.7, 1699.0], [8.8, 1721.0], [8.9, 1721.0], [9.0, 1721.0], [9.1, 1736.0], [9.2, 1736.0], [9.3, 1736.0], [9.4, 1753.0], [9.5, 1753.0], [9.6, 1771.0], [9.7, 1771.0], [9.8, 1771.0], [9.9, 1806.0], [10.0, 1806.0], [10.1, 1806.0], [10.2, 1847.0], [10.3, 1847.0], [10.4, 1847.0], [10.5, 1850.0], [10.6, 1850.0], [10.7, 1850.0], [10.8, 1873.0], [10.9, 1873.0], [11.0, 1873.0], [11.1, 1878.0], [11.2, 1878.0], [11.3, 1878.0], [11.4, 1881.0], [11.5, 1881.0], [11.6, 1881.0], [11.7, 1890.0], [11.8, 1890.0], [11.9, 1890.0], [12.0, 1894.0], [12.1, 1894.0], [12.2, 1894.0], [12.3, 1897.0], [12.4, 1897.0], [12.5, 1898.0], [12.6, 1898.0], [12.7, 1898.0], [12.8, 1915.0], [12.9, 1915.0], [13.0, 1915.0], [13.1, 1916.0], [13.2, 1916.0], [13.3, 1916.0], [13.4, 1920.0], [13.5, 1920.0], [13.6, 1920.0], [13.7, 1921.0], [13.8, 1921.0], [13.9, 1921.0], [14.0, 1949.0], [14.1, 1949.0], [14.2, 1949.0], [14.3, 1984.0], [14.4, 1984.0], [14.5, 1984.0], [14.6, 2023.0], [14.7, 2023.0], [14.8, 2023.0], [14.9, 2024.0], [15.0, 2024.0], [15.1, 2024.0], [15.2, 2035.0], [15.3, 2035.0], [15.4, 2035.0], [15.5, 2038.0], [15.6, 2038.0], [15.7, 2049.0], [15.8, 2049.0], [15.9, 2049.0], [16.0, 2066.0], [16.1, 2066.0], [16.2, 2066.0], [16.3, 2091.0], [16.4, 2091.0], [16.5, 2091.0], [16.6, 2104.0], [16.7, 2104.0], [16.8, 2104.0], [16.9, 2116.0], [17.0, 2116.0], [17.1, 2116.0], [17.2, 2128.0], [17.3, 2128.0], [17.4, 2128.0], [17.5, 2178.0], [17.6, 2178.0], [17.7, 2178.0], [17.8, 2191.0], [17.9, 2191.0], [18.0, 2191.0], [18.1, 2193.0], [18.2, 2193.0], [18.3, 2193.0], [18.4, 2193.0], [18.5, 2193.0], [18.6, 2193.0], [18.7, 2228.0], [18.8, 2228.0], [18.9, 2229.0], [19.0, 2229.0], [19.1, 2229.0], [19.2, 2273.0], [19.3, 2273.0], [19.4, 2273.0], [19.5, 2274.0], [19.6, 2274.0], [19.7, 2274.0], [19.8, 2274.0], [19.9, 2274.0], [20.0, 2274.0], [20.1, 2275.0], [20.2, 2275.0], [20.3, 2275.0], [20.4, 2295.0], [20.5, 2295.0], [20.6, 2295.0], [20.7, 2315.0], [20.8, 2315.0], [20.9, 2315.0], [21.0, 2319.0], [21.1, 2319.0], [21.2, 2319.0], [21.3, 2330.0], [21.4, 2330.0], [21.5, 2330.0], [21.6, 2334.0], [21.7, 2334.0], [21.8, 2334.0], [21.9, 2340.0], [22.0, 2340.0], [22.1, 2341.0], [22.2, 2341.0], [22.3, 2341.0], [22.4, 2344.0], [22.5, 2344.0], [22.6, 2344.0], [22.7, 2371.0], [22.8, 2371.0], [22.9, 2371.0], [23.0, 2388.0], [23.1, 2388.0], [23.2, 2388.0], [23.3, 2428.0], [23.4, 2428.0], [23.5, 2428.0], [23.6, 2430.0], [23.7, 2430.0], [23.8, 2430.0], [23.9, 2436.0], [24.0, 2436.0], [24.1, 2436.0], [24.2, 2445.0], [24.3, 2445.0], [24.4, 2445.0], [24.5, 2462.0], [24.6, 2462.0], [24.7, 2462.0], [24.8, 2466.0], [24.9, 2466.0], [25.0, 2466.0], [25.1, 2472.0], [25.2, 2472.0], [25.3, 2477.0], [25.4, 2477.0], [25.5, 2477.0], [25.6, 2497.0], [25.7, 2497.0], [25.8, 2497.0], [25.9, 2505.0], [26.0, 2505.0], [26.1, 2505.0], [26.2, 2511.0], [26.3, 2511.0], [26.4, 2511.0], [26.5, 2514.0], [26.6, 2514.0], [26.7, 2514.0], [26.8, 2533.0], [26.9, 2533.0], [27.0, 2533.0], [27.1, 2534.0], [27.2, 2534.0], [27.3, 2534.0], [27.4, 2574.0], [27.5, 2574.0], [27.6, 2574.0], [27.7, 2574.0], [27.8, 2574.0], [27.9, 2574.0], [28.0, 2587.0], [28.1, 2587.0], [28.2, 2598.0], [28.3, 2598.0], [28.4, 2598.0], [28.5, 2602.0], [28.6, 2602.0], [28.7, 2602.0], [28.8, 2616.0], [28.9, 2616.0], [29.0, 2616.0], [29.1, 2617.0], [29.2, 2617.0], [29.3, 2617.0], [29.4, 2620.0], [29.5, 2620.0], [29.6, 2620.0], [29.7, 2623.0], [29.8, 2623.0], [29.9, 2623.0], [30.0, 2629.0], [30.1, 2629.0], [30.2, 2629.0], [30.3, 2641.0], [30.4, 2641.0], [30.5, 2641.0], [30.6, 2655.0], [30.7, 2655.0], [30.8, 2655.0], [30.9, 2660.0], [31.0, 2660.0], [31.1, 2660.0], [31.2, 2663.0], [31.3, 2663.0], [31.4, 2663.0], [31.5, 2663.0], [31.6, 2663.0], [31.7, 2663.0], [31.8, 2663.0], [31.9, 2663.0], [32.0, 2684.0], [32.1, 2684.0], [32.2, 2684.0], [32.3, 2688.0], [32.4, 2688.0], [32.5, 2688.0], [32.6, 2689.0], [32.7, 2689.0], [32.8, 2689.0], [32.9, 2696.0], [33.0, 2696.0], [33.1, 2696.0], [33.2, 2703.0], [33.3, 2703.0], [33.4, 2703.0], [33.5, 2707.0], [33.6, 2707.0], [33.7, 2707.0], [33.8, 2720.0], [33.9, 2720.0], [34.0, 2720.0], [34.1, 2730.0], [34.2, 2730.0], [34.3, 2730.0], [34.4, 2734.0], [34.5, 2734.0], [34.6, 2737.0], [34.7, 2737.0], [34.8, 2737.0], [34.9, 2738.0], [35.0, 2738.0], [35.1, 2738.0], [35.2, 2739.0], [35.3, 2739.0], [35.4, 2739.0], [35.5, 2747.0], [35.6, 2747.0], [35.7, 2747.0], [35.8, 2747.0], [35.9, 2747.0], [36.0, 2747.0], [36.1, 2753.0], [36.2, 2753.0], [36.3, 2753.0], [36.4, 2758.0], [36.5, 2758.0], [36.6, 2758.0], [36.7, 2760.0], [36.8, 2760.0], [36.9, 2760.0], [37.0, 2761.0], [37.1, 2761.0], [37.2, 2761.0], [37.3, 2764.0], [37.4, 2764.0], [37.5, 2764.0], [37.6, 2766.0], [37.7, 2766.0], [37.8, 2769.0], [37.9, 2769.0], [38.0, 2769.0], [38.1, 2786.0], [38.2, 2786.0], [38.3, 2786.0], [38.4, 2793.0], [38.5, 2793.0], [38.6, 2793.0], [38.7, 2794.0], [38.8, 2794.0], [38.9, 2794.0], [39.0, 2803.0], [39.1, 2803.0], [39.2, 2803.0], [39.3, 2808.0], [39.4, 2808.0], [39.5, 2808.0], [39.6, 2821.0], [39.7, 2821.0], [39.8, 2821.0], [39.9, 2828.0], [40.0, 2828.0], [40.1, 2828.0], [40.2, 2835.0], [40.3, 2835.0], [40.4, 2835.0], [40.5, 2838.0], [40.6, 2838.0], [40.7, 2843.0], [40.8, 2843.0], [40.9, 2843.0], [41.0, 2846.0], [41.1, 2846.0], [41.2, 2846.0], [41.3, 2852.0], [41.4, 2852.0], [41.5, 2852.0], [41.6, 2855.0], [41.7, 2855.0], [41.8, 2855.0], [41.9, 2856.0], [42.0, 2856.0], [42.1, 2856.0], [42.2, 2859.0], [42.3, 2859.0], [42.4, 2859.0], [42.5, 2871.0], [42.6, 2871.0], [42.7, 2871.0], [42.8, 2877.0], [42.9, 2877.0], [43.0, 2877.0], [43.1, 2882.0], [43.2, 2882.0], [43.3, 2882.0], [43.4, 2884.0], [43.5, 2884.0], [43.6, 2884.0], [43.7, 2887.0], [43.8, 2887.0], [43.9, 2895.0], [44.0, 2895.0], [44.1, 2895.0], [44.2, 2895.0], [44.3, 2895.0], [44.4, 2895.0], [44.5, 2900.0], [44.6, 2900.0], [44.7, 2900.0], [44.8, 2920.0], [44.9, 2920.0], [45.0, 2920.0], [45.1, 2922.0], [45.2, 2922.0], [45.3, 2922.0], [45.4, 2923.0], [45.5, 2923.0], [45.6, 2923.0], [45.7, 2925.0], [45.8, 2925.0], [45.9, 2925.0], [46.0, 2937.0], [46.1, 2937.0], [46.2, 2937.0], [46.3, 2951.0], [46.4, 2951.0], [46.5, 2951.0], [46.6, 2957.0], [46.7, 2957.0], [46.8, 2957.0], [46.9, 2966.0], [47.0, 2966.0], [47.1, 2973.0], [47.2, 2973.0], [47.3, 2973.0], [47.4, 2975.0], [47.5, 2975.0], [47.6, 2975.0], [47.7, 2984.0], [47.8, 2984.0], [47.9, 2984.0], [48.0, 2985.0], [48.1, 2985.0], [48.2, 2985.0], [48.3, 2991.0], [48.4, 2991.0], [48.5, 2991.0], [48.6, 2992.0], [48.7, 2992.0], [48.8, 2992.0], [48.9, 3005.0], [49.0, 3005.0], [49.1, 3005.0], [49.2, 3013.0], [49.3, 3013.0], [49.4, 3013.0], [49.5, 3015.0], [49.6, 3015.0], [49.7, 3015.0], [49.8, 3016.0], [49.9, 3016.0], [50.0, 3021.0], [50.1, 3021.0], [50.2, 3021.0], [50.3, 3022.0], [50.4, 3022.0], [50.5, 3022.0], [50.6, 3027.0], [50.7, 3027.0], [50.8, 3027.0], [50.9, 3028.0], [51.0, 3028.0], [51.1, 3028.0], [51.2, 3032.0], [51.3, 3032.0], [51.4, 3032.0], [51.5, 3033.0], [51.6, 3033.0], [51.7, 3033.0], [51.8, 3034.0], [51.9, 3034.0], [52.0, 3034.0], [52.1, 3038.0], [52.2, 3038.0], [52.3, 3038.0], [52.4, 3038.0], [52.5, 3038.0], [52.6, 3038.0], [52.7, 3040.0], [52.8, 3040.0], [52.9, 3040.0], [53.0, 3041.0], [53.1, 3041.0], [53.2, 3049.0], [53.3, 3049.0], [53.4, 3049.0], [53.5, 3050.0], [53.6, 3050.0], [53.7, 3050.0], [53.8, 3051.0], [53.9, 3051.0], [54.0, 3051.0], [54.1, 3054.0], [54.2, 3054.0], [54.3, 3054.0], [54.4, 3056.0], [54.5, 3056.0], [54.6, 3056.0], [54.7, 3068.0], [54.8, 3068.0], [54.9, 3068.0], [55.0, 3068.0], [55.1, 3068.0], [55.2, 3068.0], [55.3, 3073.0], [55.4, 3073.0], [55.5, 3073.0], [55.6, 3082.0], [55.7, 3082.0], [55.8, 3082.0], [55.9, 3092.0], [56.0, 3092.0], [56.1, 3092.0], [56.2, 3095.0], [56.3, 3095.0], [56.4, 3099.0], [56.5, 3099.0], [56.6, 3099.0], [56.7, 3109.0], [56.8, 3109.0], [56.9, 3109.0], [57.0, 3109.0], [57.1, 3109.0], [57.2, 3109.0], [57.3, 3115.0], [57.4, 3115.0], [57.5, 3115.0], [57.6, 3118.0], [57.7, 3118.0], [57.8, 3118.0], [57.9, 3118.0], [58.0, 3118.0], [58.1, 3118.0], [58.2, 3122.0], [58.3, 3122.0], [58.4, 3122.0], [58.5, 3123.0], [58.6, 3123.0], [58.7, 3123.0], [58.8, 3126.0], [58.9, 3126.0], [59.0, 3126.0], [59.1, 3128.0], [59.2, 3128.0], [59.3, 3128.0], [59.4, 3131.0], [59.5, 3131.0], [59.6, 3131.0], [59.7, 3131.0], [59.8, 3131.0], [59.9, 3134.0], [60.0, 3134.0], [60.1, 3134.0], [60.2, 3140.0], [60.3, 3140.0], [60.4, 3140.0], [60.5, 3149.0], [60.6, 3149.0], [60.7, 3149.0], [60.8, 3150.0], [60.9, 3150.0], [61.0, 3150.0], [61.1, 3158.0], [61.2, 3158.0], [61.3, 3158.0], [61.4, 3163.0], [61.5, 3163.0], [61.6, 3163.0], [61.7, 3165.0], [61.8, 3165.0], [61.9, 3165.0], [62.0, 3170.0], [62.1, 3170.0], [62.2, 3170.0], [62.3, 3172.0], [62.4, 3172.0], [62.5, 3177.0], [62.6, 3177.0], [62.7, 3177.0], [62.8, 3186.0], [62.9, 3186.0], [63.0, 3186.0], [63.1, 3190.0], [63.2, 3190.0], [63.3, 3190.0], [63.4, 3220.0], [63.5, 3220.0], [63.6, 3220.0], [63.7, 3230.0], [63.8, 3230.0], [63.9, 3230.0], [64.0, 3231.0], [64.1, 3231.0], [64.2, 3231.0], [64.3, 3233.0], [64.4, 3233.0], [64.5, 3233.0], [64.6, 3233.0], [64.7, 3233.0], [64.8, 3233.0], [64.9, 3237.0], [65.0, 3237.0], [65.1, 3237.0], [65.2, 3262.0], [65.3, 3262.0], [65.4, 3262.0], [65.5, 3266.0], [65.6, 3266.0], [65.7, 3268.0], [65.8, 3268.0], [65.9, 3268.0], [66.0, 3268.0], [66.1, 3268.0], [66.2, 3268.0], [66.3, 3277.0], [66.4, 3277.0], [66.5, 3277.0], [66.6, 3285.0], [66.7, 3285.0], [66.8, 3285.0], [66.9, 3289.0], [67.0, 3289.0], [67.1, 3289.0], [67.2, 3304.0], [67.3, 3304.0], [67.4, 3304.0], [67.5, 3305.0], [67.6, 3305.0], [67.7, 3305.0], [67.8, 3306.0], [67.9, 3306.0], [68.0, 3306.0], [68.1, 3313.0], [68.2, 3313.0], [68.3, 3313.0], [68.4, 3314.0], [68.5, 3314.0], [68.6, 3314.0], [68.7, 3316.0], [68.8, 3316.0], [68.9, 3317.0], [69.0, 3317.0], [69.1, 3317.0], [69.2, 3326.0], [69.3, 3326.0], [69.4, 3326.0], [69.5, 3329.0], [69.6, 3329.0], [69.7, 3329.0], [69.8, 3333.0], [69.9, 3333.0], [70.0, 3333.0], [70.1, 3338.0], [70.2, 3338.0], [70.3, 3338.0], [70.4, 3339.0], [70.5, 3339.0], [70.6, 3339.0], [70.7, 3341.0], [70.8, 3341.0], [70.9, 3341.0], [71.0, 3346.0], [71.1, 3346.0], [71.2, 3346.0], [71.3, 3348.0], [71.4, 3348.0], [71.5, 3348.0], [71.6, 3353.0], [71.7, 3353.0], [71.8, 3353.0], [71.9, 3357.0], [72.0, 3357.0], [72.1, 3375.0], [72.2, 3375.0], [72.3, 3375.0], [72.4, 3383.0], [72.5, 3383.0], [72.6, 3383.0], [72.7, 3388.0], [72.8, 3388.0], [72.9, 3388.0], [73.0, 3389.0], [73.1, 3389.0], [73.2, 3389.0], [73.3, 3393.0], [73.4, 3393.0], [73.5, 3393.0], [73.6, 3399.0], [73.7, 3399.0], [73.8, 3399.0], [73.9, 3411.0], [74.0, 3411.0], [74.1, 3411.0], [74.2, 3416.0], [74.3, 3416.0], [74.4, 3416.0], [74.5, 3419.0], [74.6, 3419.0], [74.7, 3419.0], [74.8, 3423.0], [74.9, 3423.0], [75.0, 3423.0], [75.1, 3429.0], [75.2, 3429.0], [75.3, 3432.0], [75.4, 3432.0], [75.5, 3432.0], [75.6, 3443.0], [75.7, 3443.0], [75.8, 3443.0], [75.9, 3452.0], [76.0, 3452.0], [76.1, 3452.0], [76.2, 3455.0], [76.3, 3455.0], [76.4, 3455.0], [76.5, 3462.0], [76.6, 3462.0], [76.7, 3462.0], [76.8, 3467.0], [76.9, 3467.0], [77.0, 3467.0], [77.1, 3480.0], [77.2, 3480.0], [77.3, 3480.0], [77.4, 3482.0], [77.5, 3482.0], [77.6, 3482.0], [77.7, 3484.0], [77.8, 3484.0], [77.9, 3484.0], [78.0, 3495.0], [78.1, 3495.0], [78.2, 3499.0], [78.3, 3499.0], [78.4, 3499.0], [78.5, 3503.0], [78.6, 3503.0], [78.7, 3503.0], [78.8, 3503.0], [78.9, 3503.0], [79.0, 3503.0], [79.1, 3503.0], [79.2, 3503.0], [79.3, 3503.0], [79.4, 3506.0], [79.5, 3506.0], [79.6, 3506.0], [79.7, 3509.0], [79.8, 3509.0], [79.9, 3509.0], [80.0, 3510.0], [80.1, 3510.0], [80.2, 3510.0], [80.3, 3524.0], [80.4, 3524.0], [80.5, 3524.0], [80.6, 3526.0], [80.7, 3526.0], [80.8, 3526.0], [80.9, 3529.0], [81.0, 3529.0], [81.1, 3529.0], [81.2, 3531.0], [81.3, 3531.0], [81.4, 3534.0], [81.5, 3534.0], [81.6, 3534.0], [81.7, 3537.0], [81.8, 3537.0], [81.9, 3537.0], [82.0, 3543.0], [82.1, 3543.0], [82.2, 3543.0], [82.3, 3550.0], [82.4, 3550.0], [82.5, 3550.0], [82.6, 3554.0], [82.7, 3554.0], [82.8, 3554.0], [82.9, 3559.0], [83.0, 3559.0], [83.1, 3559.0], [83.2, 3563.0], [83.3, 3563.0], [83.4, 3563.0], [83.5, 3571.0], [83.6, 3571.0], [83.7, 3571.0], [83.8, 3582.0], [83.9, 3582.0], [84.0, 3582.0], [84.1, 3589.0], [84.2, 3589.0], [84.3, 3589.0], [84.4, 3603.0], [84.5, 3603.0], [84.6, 3606.0], [84.7, 3606.0], [84.8, 3606.0], [84.9, 3622.0], [85.0, 3622.0], [85.1, 3622.0], [85.2, 3635.0], [85.3, 3635.0], [85.4, 3635.0], [85.5, 3646.0], [85.6, 3646.0], [85.7, 3646.0], [85.8, 3649.0], [85.9, 3649.0], [86.0, 3649.0], [86.1, 3652.0], [86.2, 3652.0], [86.3, 3652.0], [86.4, 3657.0], [86.5, 3657.0], [86.6, 3657.0], [86.7, 3659.0], [86.8, 3659.0], [86.9, 3659.0], [87.0, 3666.0], [87.1, 3666.0], [87.2, 3666.0], [87.3, 3675.0], [87.4, 3675.0], [87.5, 3675.0], [87.6, 3678.0], [87.7, 3678.0], [87.8, 3681.0], [87.9, 3681.0], [88.0, 3681.0], [88.1, 3697.0], [88.2, 3697.0], [88.3, 3697.0], [88.4, 3700.0], [88.5, 3700.0], [88.6, 3700.0], [88.7, 3700.0], [88.8, 3700.0], [88.9, 3700.0], [89.0, 3701.0], [89.1, 3701.0], [89.2, 3701.0], [89.3, 3711.0], [89.4, 3711.0], [89.5, 3711.0], [89.6, 3715.0], [89.7, 3715.0], [89.8, 3715.0], [89.9, 3732.0], [90.0, 3732.0], [90.1, 3732.0], [90.2, 3747.0], [90.3, 3747.0], [90.4, 3747.0], [90.5, 3766.0], [90.6, 3766.0], [90.7, 3773.0], [90.8, 3773.0], [90.9, 3773.0], [91.0, 3776.0], [91.1, 3776.0], [91.2, 3776.0], [91.3, 3778.0], [91.4, 3778.0], [91.5, 3778.0], [91.6, 3787.0], [91.7, 3787.0], [91.8, 3787.0], [91.9, 3788.0], [92.0, 3788.0], [92.1, 3788.0], [92.2, 3789.0], [92.3, 3789.0], [92.4, 3789.0], [92.5, 3792.0], [92.6, 3792.0], [92.7, 3792.0], [92.8, 3812.0], [92.9, 3812.0], [93.0, 3812.0], [93.1, 3812.0], [93.2, 3812.0], [93.3, 3812.0], [93.4, 3814.0], [93.5, 3814.0], [93.6, 3814.0], [93.7, 3826.0], [93.8, 3826.0], [93.9, 3826.0], [94.0, 3826.0], [94.1, 3826.0], [94.2, 3839.0], [94.3, 3839.0], [94.4, 3839.0], [94.5, 3839.0], [94.6, 3839.0], [94.7, 3839.0], [94.8, 3842.0], [94.9, 3842.0], [95.0, 3842.0], [95.1, 3845.0], [95.2, 3845.0], [95.3, 3845.0], [95.4, 3862.0], [95.5, 3862.0], [95.6, 3862.0], [95.7, 3866.0], [95.8, 3866.0], [95.9, 3866.0], [96.0, 3873.0], [96.1, 3873.0], [96.2, 3873.0], [96.3, 3881.0], [96.4, 3881.0], [96.5, 3881.0], [96.6, 3906.0], [96.7, 3906.0], [96.8, 3906.0], [96.9, 3942.0], [97.0, 3942.0], [97.1, 3945.0], [97.2, 3945.0], [97.3, 3945.0], [97.4, 3946.0], [97.5, 3946.0], [97.6, 3946.0], [97.7, 3969.0], [97.8, 3969.0], [97.9, 3969.0], [98.0, 3971.0], [98.1, 3971.0], [98.2, 3971.0], [98.3, 4080.0], [98.4, 4080.0], [98.5, 4080.0], [98.6, 4080.0], [98.7, 4080.0], [98.8, 4080.0], [98.9, 4119.0], [99.0, 4119.0], [99.1, 4119.0], [99.2, 4197.0], [99.3, 4197.0], [99.4, 4197.0], [99.5, 4222.0], [99.6, 4222.0], [99.7, 4222.0], [99.8, 4282.0], [99.9, 4282.0], [100.0, 4282.0]], "isOverall": false, "label": "gateway_cl/hellotea/tea-2", "isController": false}, {"data": [[0.0, 891.0], [0.1, 891.0], [0.2, 891.0], [0.3, 1050.0], [0.4, 1050.0], [0.5, 1050.0], [0.6, 1229.0], [0.7, 1229.0], [0.8, 1229.0], [0.9, 1239.0], [1.0, 1239.0], [1.1, 1239.0], [1.2, 1257.0], [1.3, 1257.0], [1.4, 1257.0], [1.5, 1287.0], [1.6, 1287.0], [1.7, 1287.0], [1.8, 1288.0], [1.9, 1288.0], [2.0, 1288.0], [2.1, 1356.0], [2.2, 1356.0], [2.3, 1356.0], [2.4, 1385.0], [2.5, 1385.0], [2.6, 1385.0], [2.7, 1395.0], [2.8, 1395.0], [2.9, 1395.0], [3.0, 1409.0], [3.1, 1409.0], [3.2, 1423.0], [3.3, 1423.0], [3.4, 1423.0], [3.5, 1467.0], [3.6, 1467.0], [3.7, 1467.0], [3.8, 1475.0], [3.9, 1475.0], [4.0, 1475.0], [4.1, 1481.0], [4.2, 1481.0], [4.3, 1481.0], [4.4, 1522.0], [4.5, 1522.0], [4.6, 1522.0], [4.7, 1524.0], [4.8, 1524.0], [4.9, 1524.0], [5.0, 1565.0], [5.1, 1565.0], [5.2, 1565.0], [5.3, 1570.0], [5.4, 1570.0], [5.5, 1570.0], [5.6, 1581.0], [5.7, 1581.0], [5.8, 1581.0], [5.9, 1591.0], [6.0, 1591.0], [6.1, 1591.0], [6.2, 1618.0], [6.3, 1618.0], [6.4, 1621.0], [6.5, 1621.0], [6.6, 1621.0], [6.7, 1634.0], [6.8, 1634.0], [6.9, 1634.0], [7.0, 1702.0], [7.1, 1702.0], [7.2, 1702.0], [7.3, 1787.0], [7.4, 1787.0], [7.5, 1787.0], [7.6, 1788.0], [7.7, 1788.0], [7.8, 1788.0], [7.9, 1827.0], [8.0, 1827.0], [8.1, 1827.0], [8.2, 1860.0], [8.3, 1860.0], [8.4, 1860.0], [8.5, 1867.0], [8.6, 1867.0], [8.7, 1867.0], [8.8, 1891.0], [8.9, 1891.0], [9.0, 1891.0], [9.1, 1904.0], [9.2, 1904.0], [9.3, 1904.0], [9.4, 1904.0], [9.5, 1904.0], [9.6, 1916.0], [9.7, 1916.0], [9.8, 1916.0], [9.9, 1929.0], [10.0, 1929.0], [10.1, 1929.0], [10.2, 1935.0], [10.3, 1935.0], [10.4, 1935.0], [10.5, 1944.0], [10.6, 1944.0], [10.7, 1944.0], [10.8, 1963.0], [10.9, 1963.0], [11.0, 1963.0], [11.1, 2041.0], [11.2, 2041.0], [11.3, 2041.0], [11.4, 2052.0], [11.5, 2052.0], [11.6, 2052.0], [11.7, 2296.0], [11.8, 2296.0], [11.9, 2296.0], [12.0, 2314.0], [12.1, 2314.0], [12.2, 2314.0], [12.3, 2346.0], [12.4, 2346.0], [12.5, 2354.0], [12.6, 2354.0], [12.7, 2354.0], [12.8, 2867.0], [12.9, 2867.0], [13.0, 2867.0], [13.1, 2878.0], [13.2, 2878.0], [13.3, 2878.0], [13.4, 2879.0], [13.5, 2879.0], [13.6, 2879.0], [13.7, 2887.0], [13.8, 2887.0], [13.9, 2887.0], [14.0, 2991.0], [14.1, 2991.0], [14.2, 2991.0], [14.3, 3008.0], [14.4, 3008.0], [14.5, 3008.0], [14.6, 3029.0], [14.7, 3029.0], [14.8, 3029.0], [14.9, 3029.0], [15.0, 3029.0], [15.1, 3029.0], [15.2, 3046.0], [15.3, 3046.0], [15.4, 3046.0], [15.5, 3078.0], [15.6, 3078.0], [15.7, 3129.0], [15.8, 3129.0], [15.9, 3129.0], [16.0, 3153.0], [16.1, 3153.0], [16.2, 3153.0], [16.3, 3185.0], [16.4, 3185.0], [16.5, 3185.0], [16.6, 3217.0], [16.7, 3217.0], [16.8, 3217.0], [16.9, 3280.0], [17.0, 3280.0], [17.1, 3280.0], [17.2, 3325.0], [17.3, 3325.0], [17.4, 3325.0], [17.5, 3345.0], [17.6, 3345.0], [17.7, 3345.0], [17.8, 3410.0], [17.9, 3410.0], [18.0, 3410.0], [18.1, 3414.0], [18.2, 3414.0], [18.3, 3414.0], [18.4, 3416.0], [18.5, 3416.0], [18.6, 3416.0], [18.7, 3425.0], [18.8, 3425.0], [18.9, 3430.0], [19.0, 3430.0], [19.1, 3430.0], [19.2, 3430.0], [19.3, 3430.0], [19.4, 3430.0], [19.5, 3446.0], [19.6, 3446.0], [19.7, 3446.0], [19.8, 3448.0], [19.9, 3448.0], [20.0, 3448.0], [20.1, 3451.0], [20.2, 3451.0], [20.3, 3451.0], [20.4, 3536.0], [20.5, 3536.0], [20.6, 3536.0], [20.7, 3558.0], [20.8, 3558.0], [20.9, 3558.0], [21.0, 3581.0], [21.1, 3581.0], [21.2, 3581.0], [21.3, 3582.0], [21.4, 3582.0], [21.5, 3582.0], [21.6, 3604.0], [21.7, 3604.0], [21.8, 3604.0], [21.9, 3644.0], [22.0, 3644.0], [22.1, 3649.0], [22.2, 3649.0], [22.3, 3649.0], [22.4, 3652.0], [22.5, 3652.0], [22.6, 3652.0], [22.7, 3695.0], [22.8, 3695.0], [22.9, 3695.0], [23.0, 3717.0], [23.1, 3717.0], [23.2, 3717.0], [23.3, 3722.0], [23.4, 3722.0], [23.5, 3722.0], [23.6, 3724.0], [23.7, 3724.0], [23.8, 3724.0], [23.9, 3734.0], [24.0, 3734.0], [24.1, 3734.0], [24.2, 3741.0], [24.3, 3741.0], [24.4, 3741.0], [24.5, 3774.0], [24.6, 3774.0], [24.7, 3774.0], [24.8, 3785.0], [24.9, 3785.0], [25.0, 3785.0], [25.1, 3786.0], [25.2, 3786.0], [25.3, 3796.0], [25.4, 3796.0], [25.5, 3796.0], [25.6, 3856.0], [25.7, 3856.0], [25.8, 3856.0], [25.9, 3872.0], [26.0, 3872.0], [26.1, 3872.0], [26.2, 3874.0], [26.3, 3874.0], [26.4, 3874.0], [26.5, 3885.0], [26.6, 3885.0], [26.7, 3885.0], [26.8, 3902.0], [26.9, 3902.0], [27.0, 3902.0], [27.1, 3909.0], [27.2, 3909.0], [27.3, 3909.0], [27.4, 3911.0], [27.5, 3911.0], [27.6, 3911.0], [27.7, 3912.0], [27.8, 3912.0], [27.9, 3912.0], [28.0, 3926.0], [28.1, 3926.0], [28.2, 3933.0], [28.3, 3933.0], [28.4, 3933.0], [28.5, 3935.0], [28.6, 3935.0], [28.7, 3935.0], [28.8, 3940.0], [28.9, 3940.0], [29.0, 3940.0], [29.1, 3958.0], [29.2, 3958.0], [29.3, 3958.0], [29.4, 3964.0], [29.5, 3964.0], [29.6, 3964.0], [29.7, 3975.0], [29.8, 3975.0], [29.9, 3975.0], [30.0, 3980.0], [30.1, 3980.0], [30.2, 3980.0], [30.3, 3981.0], [30.4, 3981.0], [30.5, 3981.0], [30.6, 3981.0], [30.7, 3981.0], [30.8, 3981.0], [30.9, 3991.0], [31.0, 3991.0], [31.1, 3991.0], [31.2, 3995.0], [31.3, 3995.0], [31.4, 4008.0], [31.5, 4008.0], [31.6, 4008.0], [31.7, 4009.0], [31.8, 4009.0], [31.9, 4009.0], [32.0, 4010.0], [32.1, 4010.0], [32.2, 4010.0], [32.3, 4024.0], [32.4, 4024.0], [32.5, 4024.0], [32.6, 4025.0], [32.7, 4025.0], [32.8, 4025.0], [32.9, 4031.0], [33.0, 4031.0], [33.1, 4031.0], [33.2, 4037.0], [33.3, 4037.0], [33.4, 4037.0], [33.5, 4044.0], [33.6, 4044.0], [33.7, 4044.0], [33.8, 4058.0], [33.9, 4058.0], [34.0, 4058.0], [34.1, 4067.0], [34.2, 4067.0], [34.3, 4067.0], [34.4, 4069.0], [34.5, 4069.0], [34.6, 4072.0], [34.7, 4072.0], [34.8, 4072.0], [34.9, 4078.0], [35.0, 4078.0], [35.1, 4078.0], [35.2, 4080.0], [35.3, 4080.0], [35.4, 4080.0], [35.5, 4090.0], [35.6, 4090.0], [35.7, 4090.0], [35.8, 4105.0], [35.9, 4105.0], [36.0, 4105.0], [36.1, 4107.0], [36.2, 4107.0], [36.3, 4107.0], [36.4, 4109.0], [36.5, 4109.0], [36.6, 4109.0], [36.7, 4120.0], [36.8, 4120.0], [36.9, 4120.0], [37.0, 4121.0], [37.1, 4121.0], [37.2, 4121.0], [37.3, 4124.0], [37.4, 4124.0], [37.5, 4124.0], [37.6, 4137.0], [37.7, 4137.0], [37.8, 4137.0], [37.9, 4137.0], [38.0, 4137.0], [38.1, 4144.0], [38.2, 4144.0], [38.3, 4144.0], [38.4, 4144.0], [38.5, 4144.0], [38.6, 4144.0], [38.7, 4155.0], [38.8, 4155.0], [38.9, 4155.0], [39.0, 4159.0], [39.1, 4159.0], [39.2, 4159.0], [39.3, 4162.0], [39.4, 4162.0], [39.5, 4162.0], [39.6, 4184.0], [39.7, 4184.0], [39.8, 4184.0], [39.9, 4184.0], [40.0, 4184.0], [40.1, 4184.0], [40.2, 4189.0], [40.3, 4189.0], [40.4, 4189.0], [40.5, 4197.0], [40.6, 4197.0], [40.7, 4198.0], [40.8, 4198.0], [40.9, 4198.0], [41.0, 4209.0], [41.1, 4209.0], [41.2, 4209.0], [41.3, 4210.0], [41.4, 4210.0], [41.5, 4210.0], [41.6, 4212.0], [41.7, 4212.0], [41.8, 4212.0], [41.9, 4212.0], [42.0, 4212.0], [42.1, 4212.0], [42.2, 4217.0], [42.3, 4217.0], [42.4, 4217.0], [42.5, 4248.0], [42.6, 4248.0], [42.7, 4248.0], [42.8, 4278.0], [42.9, 4278.0], [43.0, 4278.0], [43.1, 4279.0], [43.2, 4279.0], [43.3, 4279.0], [43.4, 4283.0], [43.5, 4283.0], [43.6, 4283.0], [43.7, 4297.0], [43.8, 4297.0], [43.9, 4298.0], [44.0, 4298.0], [44.1, 4298.0], [44.2, 4299.0], [44.3, 4299.0], [44.4, 4299.0], [44.5, 4310.0], [44.6, 4310.0], [44.7, 4310.0], [44.8, 4312.0], [44.9, 4312.0], [45.0, 4312.0], [45.1, 4312.0], [45.2, 4312.0], [45.3, 4312.0], [45.4, 4313.0], [45.5, 4313.0], [45.6, 4313.0], [45.7, 4318.0], [45.8, 4318.0], [45.9, 4318.0], [46.0, 4319.0], [46.1, 4319.0], [46.2, 4319.0], [46.3, 4319.0], [46.4, 4319.0], [46.5, 4319.0], [46.6, 4324.0], [46.7, 4324.0], [46.8, 4324.0], [46.9, 4333.0], [47.0, 4333.0], [47.1, 4362.0], [47.2, 4362.0], [47.3, 4362.0], [47.4, 4367.0], [47.5, 4367.0], [47.6, 4367.0], [47.7, 4379.0], [47.8, 4379.0], [47.9, 4379.0], [48.0, 4385.0], [48.1, 4385.0], [48.2, 4385.0], [48.3, 4401.0], [48.4, 4401.0], [48.5, 4401.0], [48.6, 4401.0], [48.7, 4401.0], [48.8, 4401.0], [48.9, 4409.0], [49.0, 4409.0], [49.1, 4409.0], [49.2, 4424.0], [49.3, 4424.0], [49.4, 4424.0], [49.5, 4434.0], [49.6, 4434.0], [49.7, 4434.0], [49.8, 4450.0], [49.9, 4450.0], [50.0, 4466.0], [50.1, 4466.0], [50.2, 4466.0], [50.3, 4470.0], [50.4, 4470.0], [50.5, 4470.0], [50.6, 4471.0], [50.7, 4471.0], [50.8, 4471.0], [50.9, 4476.0], [51.0, 4476.0], [51.1, 4476.0], [51.2, 4477.0], [51.3, 4477.0], [51.4, 4477.0], [51.5, 4481.0], [51.6, 4481.0], [51.7, 4481.0], [51.8, 4486.0], [51.9, 4486.0], [52.0, 4486.0], [52.1, 4489.0], [52.2, 4489.0], [52.3, 4489.0], [52.4, 4492.0], [52.5, 4492.0], [52.6, 4492.0], [52.7, 4493.0], [52.8, 4493.0], [52.9, 4493.0], [53.0, 4493.0], [53.1, 4493.0], [53.2, 4496.0], [53.3, 4496.0], [53.4, 4496.0], [53.5, 4498.0], [53.6, 4498.0], [53.7, 4498.0], [53.8, 4505.0], [53.9, 4505.0], [54.0, 4505.0], [54.1, 4509.0], [54.2, 4509.0], [54.3, 4509.0], [54.4, 4512.0], [54.5, 4512.0], [54.6, 4512.0], [54.7, 4520.0], [54.8, 4520.0], [54.9, 4520.0], [55.0, 4521.0], [55.1, 4521.0], [55.2, 4521.0], [55.3, 4523.0], [55.4, 4523.0], [55.5, 4523.0], [55.6, 4528.0], [55.7, 4528.0], [55.8, 4528.0], [55.9, 4528.0], [56.0, 4528.0], [56.1, 4528.0], [56.2, 4531.0], [56.3, 4531.0], [56.4, 4535.0], [56.5, 4535.0], [56.6, 4535.0], [56.7, 4538.0], [56.8, 4538.0], [56.9, 4538.0], [57.0, 4539.0], [57.1, 4539.0], [57.2, 4539.0], [57.3, 4548.0], [57.4, 4548.0], [57.5, 4548.0], [57.6, 4548.0], [57.7, 4548.0], [57.8, 4548.0], [57.9, 4555.0], [58.0, 4555.0], [58.1, 4555.0], [58.2, 4571.0], [58.3, 4571.0], [58.4, 4571.0], [58.5, 4575.0], [58.6, 4575.0], [58.7, 4575.0], [58.8, 4575.0], [58.9, 4575.0], [59.0, 4575.0], [59.1, 4575.0], [59.2, 4575.0], [59.3, 4575.0], [59.4, 4576.0], [59.5, 4576.0], [59.6, 4578.0], [59.7, 4578.0], [59.8, 4578.0], [59.9, 4594.0], [60.0, 4594.0], [60.1, 4594.0], [60.2, 4595.0], [60.3, 4595.0], [60.4, 4595.0], [60.5, 4598.0], [60.6, 4598.0], [60.7, 4598.0], [60.8, 4615.0], [60.9, 4615.0], [61.0, 4615.0], [61.1, 4618.0], [61.2, 4618.0], [61.3, 4618.0], [61.4, 4622.0], [61.5, 4622.0], [61.6, 4622.0], [61.7, 4625.0], [61.8, 4625.0], [61.9, 4625.0], [62.0, 4631.0], [62.1, 4631.0], [62.2, 4631.0], [62.3, 4632.0], [62.4, 4632.0], [62.5, 4634.0], [62.6, 4634.0], [62.7, 4634.0], [62.8, 4634.0], [62.9, 4634.0], [63.0, 4634.0], [63.1, 4639.0], [63.2, 4639.0], [63.3, 4639.0], [63.4, 4644.0], [63.5, 4644.0], [63.6, 4644.0], [63.7, 4653.0], [63.8, 4653.0], [63.9, 4653.0], [64.0, 4657.0], [64.1, 4657.0], [64.2, 4657.0], [64.3, 4658.0], [64.4, 4658.0], [64.5, 4658.0], [64.6, 4662.0], [64.7, 4662.0], [64.8, 4662.0], [64.9, 4664.0], [65.0, 4664.0], [65.1, 4664.0], [65.2, 4687.0], [65.3, 4687.0], [65.4, 4687.0], [65.5, 4712.0], [65.6, 4712.0], [65.7, 4713.0], [65.8, 4713.0], [65.9, 4713.0], [66.0, 4722.0], [66.1, 4722.0], [66.2, 4722.0], [66.3, 4724.0], [66.4, 4724.0], [66.5, 4724.0], [66.6, 4728.0], [66.7, 4728.0], [66.8, 4728.0], [66.9, 4728.0], [67.0, 4728.0], [67.1, 4728.0], [67.2, 4730.0], [67.3, 4730.0], [67.4, 4730.0], [67.5, 4751.0], [67.6, 4751.0], [67.7, 4751.0], [67.8, 4751.0], [67.9, 4751.0], [68.0, 4751.0], [68.1, 4768.0], [68.2, 4768.0], [68.3, 4768.0], [68.4, 4773.0], [68.5, 4773.0], [68.6, 4773.0], [68.7, 4779.0], [68.8, 4779.0], [68.9, 4787.0], [69.0, 4787.0], [69.1, 4787.0], [69.2, 4787.0], [69.3, 4787.0], [69.4, 4787.0], [69.5, 4789.0], [69.6, 4789.0], [69.7, 4789.0], [69.8, 4793.0], [69.9, 4793.0], [70.0, 4793.0], [70.1, 4793.0], [70.2, 4793.0], [70.3, 4793.0], [70.4, 4797.0], [70.5, 4797.0], [70.6, 4797.0], [70.7, 4797.0], [70.8, 4797.0], [70.9, 4797.0], [71.0, 4808.0], [71.1, 4808.0], [71.2, 4808.0], [71.3, 4808.0], [71.4, 4808.0], [71.5, 4808.0], [71.6, 4811.0], [71.7, 4811.0], [71.8, 4811.0], [71.9, 4811.0], [72.0, 4811.0], [72.1, 4844.0], [72.2, 4844.0], [72.3, 4844.0], [72.4, 4848.0], [72.5, 4848.0], [72.6, 4848.0], [72.7, 4852.0], [72.8, 4852.0], [72.9, 4852.0], [73.0, 4853.0], [73.1, 4853.0], [73.2, 4853.0], [73.3, 4853.0], [73.4, 4853.0], [73.5, 4853.0], [73.6, 4854.0], [73.7, 4854.0], [73.8, 4854.0], [73.9, 4854.0], [74.0, 4854.0], [74.1, 4854.0], [74.2, 4856.0], [74.3, 4856.0], [74.4, 4856.0], [74.5, 4857.0], [74.6, 4857.0], [74.7, 4857.0], [74.8, 4859.0], [74.9, 4859.0], [75.0, 4861.0], [75.1, 4861.0], [75.2, 4861.0], [75.3, 4862.0], [75.4, 4862.0], [75.5, 4862.0], [75.6, 4866.0], [75.7, 4866.0], [75.8, 4866.0], [75.9, 4870.0], [76.0, 4870.0], [76.1, 4870.0], [76.2, 4872.0], [76.3, 4872.0], [76.4, 4872.0], [76.5, 4873.0], [76.6, 4873.0], [76.7, 4873.0], [76.8, 4875.0], [76.9, 4875.0], [77.0, 4875.0], [77.1, 4877.0], [77.2, 4877.0], [77.3, 4877.0], [77.4, 4878.0], [77.5, 4878.0], [77.6, 4878.0], [77.7, 4878.0], [77.8, 4878.0], [77.9, 4878.0], [78.0, 4888.0], [78.1, 4888.0], [78.2, 4889.0], [78.3, 4889.0], [78.4, 4889.0], [78.5, 4894.0], [78.6, 4894.0], [78.7, 4894.0], [78.8, 4902.0], [78.9, 4902.0], [79.0, 4902.0], [79.1, 4905.0], [79.2, 4905.0], [79.3, 4905.0], [79.4, 4905.0], [79.5, 4905.0], [79.6, 4905.0], [79.7, 4906.0], [79.8, 4906.0], [79.9, 4906.0], [80.0, 4907.0], [80.1, 4907.0], [80.2, 4907.0], [80.3, 4911.0], [80.4, 4911.0], [80.5, 4911.0], [80.6, 4922.0], [80.7, 4922.0], [80.8, 4922.0], [80.9, 4924.0], [81.0, 4924.0], [81.1, 4924.0], [81.2, 4927.0], [81.3, 4927.0], [81.4, 4937.0], [81.5, 4937.0], [81.6, 4937.0], [81.7, 4938.0], [81.8, 4938.0], [81.9, 4938.0], [82.0, 4947.0], [82.1, 4947.0], [82.2, 4947.0], [82.3, 4950.0], [82.4, 4950.0], [82.5, 4950.0], [82.6, 4951.0], [82.7, 4951.0], [82.8, 4951.0], [82.9, 4953.0], [83.0, 4953.0], [83.1, 4953.0], [83.2, 4970.0], [83.3, 4970.0], [83.4, 4970.0], [83.5, 4977.0], [83.6, 4977.0], [83.7, 4977.0], [83.8, 4980.0], [83.9, 4980.0], [84.0, 4980.0], [84.1, 4988.0], [84.2, 4988.0], [84.3, 4988.0], [84.4, 4995.0], [84.5, 4995.0], [84.6, 5003.0], [84.7, 5003.0], [84.8, 5003.0], [84.9, 5004.0], [85.0, 5004.0], [85.1, 5004.0], [85.2, 5007.0], [85.3, 5007.0], [85.4, 5007.0], [85.5, 5010.0], [85.6, 5010.0], [85.7, 5010.0], [85.8, 5025.0], [85.9, 5025.0], [86.0, 5025.0], [86.1, 5029.0], [86.2, 5029.0], [86.3, 5029.0], [86.4, 5033.0], [86.5, 5033.0], [86.6, 5033.0], [86.7, 5035.0], [86.8, 5035.0], [86.9, 5035.0], [87.0, 5035.0], [87.1, 5035.0], [87.2, 5035.0], [87.3, 5035.0], [87.4, 5035.0], [87.5, 5035.0], [87.6, 5038.0], [87.7, 5038.0], [87.8, 5041.0], [87.9, 5041.0], [88.0, 5041.0], [88.1, 5057.0], [88.2, 5057.0], [88.3, 5057.0], [88.4, 5065.0], [88.5, 5065.0], [88.6, 5065.0], [88.7, 5072.0], [88.8, 5072.0], [88.9, 5072.0], [89.0, 5075.0], [89.1, 5075.0], [89.2, 5075.0], [89.3, 5075.0], [89.4, 5075.0], [89.5, 5075.0], [89.6, 5098.0], [89.7, 5098.0], [89.8, 5098.0], [89.9, 5117.0], [90.0, 5117.0], [90.1, 5117.0], [90.2, 5136.0], [90.3, 5136.0], [90.4, 5136.0], [90.5, 5177.0], [90.6, 5177.0], [90.7, 5179.0], [90.8, 5179.0], [90.9, 5179.0], [91.0, 5188.0], [91.1, 5188.0], [91.2, 5188.0], [91.3, 5192.0], [91.4, 5192.0], [91.5, 5192.0], [91.6, 5194.0], [91.7, 5194.0], [91.8, 5194.0], [91.9, 5197.0], [92.0, 5197.0], [92.1, 5197.0], [92.2, 5199.0], [92.3, 5199.0], [92.4, 5199.0], [92.5, 5214.0], [92.6, 5214.0], [92.7, 5214.0], [92.8, 5216.0], [92.9, 5216.0], [93.0, 5216.0], [93.1, 5227.0], [93.2, 5227.0], [93.3, 5227.0], [93.4, 5236.0], [93.5, 5236.0], [93.6, 5236.0], [93.7, 5237.0], [93.8, 5237.0], [93.9, 5238.0], [94.0, 5238.0], [94.1, 5238.0], [94.2, 5245.0], [94.3, 5245.0], [94.4, 5245.0], [94.5, 5253.0], [94.6, 5253.0], [94.7, 5253.0], [94.8, 5262.0], [94.9, 5262.0], [95.0, 5262.0], [95.1, 5289.0], [95.2, 5289.0], [95.3, 5289.0], [95.4, 5297.0], [95.5, 5297.0], [95.6, 5297.0], [95.7, 5306.0], [95.8, 5306.0], [95.9, 5306.0], [96.0, 5307.0], [96.1, 5307.0], [96.2, 5307.0], [96.3, 5307.0], [96.4, 5307.0], [96.5, 5307.0], [96.6, 5310.0], [96.7, 5310.0], [96.8, 5310.0], [96.9, 5318.0], [97.0, 5318.0], [97.1, 5323.0], [97.2, 5323.0], [97.3, 5323.0], [97.4, 5326.0], [97.5, 5326.0], [97.6, 5326.0], [97.7, 5340.0], [97.8, 5340.0], [97.9, 5340.0], [98.0, 5346.0], [98.1, 5346.0], [98.2, 5346.0], [98.3, 5355.0], [98.4, 5355.0], [98.5, 5355.0], [98.6, 5356.0], [98.7, 5356.0], [98.8, 5356.0], [98.9, 5357.0], [99.0, 5357.0], [99.1, 5357.0], [99.2, 5357.0], [99.3, 5357.0], [99.4, 5357.0], [99.5, 5359.0], [99.6, 5359.0], [99.7, 5359.0], [99.8, 5380.0], [99.9, 5380.0], [100.0, 5380.0]], "isOverall": false, "label": "gateway_cl/hellotea/tea", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 72.0, "series": [{"data": [[0.0, 44.0], [1100.0, 17.0], [600.0, 42.0], [1200.0, 14.0], [1300.0, 15.0], [700.0, 52.0], [1400.0, 10.0], [800.0, 72.0], [900.0, 35.0], [500.0, 23.0], [1000.0, 20.0]], "isOverall": false, "label": "gateway_cl/hellotea/tea-0", "isController": false}, {"data": [[0.0, 44.0], [300.0, 72.0], [600.0, 26.0], [700.0, 44.0], [400.0, 43.0], [200.0, 33.0], [100.0, 13.0], [800.0, 12.0], [900.0, 3.0], [500.0, 54.0]], "isOverall": false, "label": "gateway_cl/hellotea/tea-1", "isController": false}, {"data": [[800.0, 1.0], [1000.0, 1.0], [1200.0, 5.0], [1300.0, 4.0], [1400.0, 7.0], [1500.0, 6.0], [1600.0, 6.0], [1700.0, 4.0], [1800.0, 10.0], [1900.0, 6.0], [2000.0, 7.0], [2100.0, 7.0], [2200.0, 7.0], [2300.0, 9.0], [2400.0, 9.0], [2500.0, 9.0], [2600.0, 16.0], [2700.0, 20.0], [2800.0, 19.0], [2900.0, 15.0], [3000.0, 27.0], [3100.0, 23.0], [3200.0, 13.0], [3300.0, 23.0], [3400.0, 16.0], [3500.0, 20.0], [3600.0, 14.0], [3700.0, 15.0], [3800.0, 13.0], [3900.0, 6.0], [4000.0, 2.0], [4100.0, 2.0], [4200.0, 2.0]], "isOverall": false, "label": "gateway_cl/hellotea/tea-2", "isController": false}, {"data": [[800.0, 1.0], [1000.0, 1.0], [1200.0, 5.0], [1300.0, 3.0], [1400.0, 5.0], [1500.0, 6.0], [1600.0, 3.0], [1700.0, 3.0], [1800.0, 4.0], [1900.0, 7.0], [2000.0, 2.0], [2300.0, 3.0], [2200.0, 1.0], [2800.0, 4.0], [2900.0, 1.0], [3000.0, 5.0], [3100.0, 3.0], [3200.0, 2.0], [3300.0, 2.0], [3400.0, 9.0], [3500.0, 4.0], [3600.0, 5.0], [3700.0, 9.0], [3800.0, 4.0], [3900.0, 16.0], [4000.0, 15.0], [4100.0, 18.0], [4200.0, 12.0], [4300.0, 13.0], [4400.0, 19.0], [4500.0, 24.0], [4600.0, 16.0], [4700.0, 19.0], [4800.0, 27.0], [4900.0, 20.0], [5000.0, 18.0], [5100.0, 9.0], [5200.0, 11.0], [5300.0, 15.0]], "isOverall": false, "label": "gateway_cl/hellotea/tea", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 5300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 250.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 655.0, "series": [{"data": [[0.0, 250.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 471.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 655.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 169.87790697674387, "minX": 1.68586866E12, "maxY": 169.87790697674387, "series": [{"data": [[1.68586866E12, 169.87790697674387]], "isOverall": false, "label": "gateway_cl/hellotea", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68586866E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.0, "maxY": 5359.0, "series": [{"data": [[2.0, 13.0], [4.0, 686.0], [6.0, 982.0], [7.0, 32.0], [8.0, 1371.0], [9.0, 26.0], [10.0, 1079.0], [12.0, 427.5], [14.0, 318.0], [15.0, 570.0], [18.0, 244.66666666666669], [19.0, 13.0], [20.0, 867.0], [21.0, 737.0], [23.0, 443.5], [24.0, 1180.0], [25.0, 1083.0], [27.0, 622.5], [29.0, 976.0], [30.0, 13.0], [31.0, 7.0], [33.0, 729.5], [35.0, 21.0], [34.0, 1229.0], [37.0, 1353.0], [36.0, 1370.0], [39.0, 671.0], [38.0, 1371.0], [43.0, 10.0], [42.0, 708.3333333333333], [44.0, 40.0], [46.0, 488.0], [48.0, 540.5], [51.0, 605.6666666666667], [53.0, 12.0], [52.0, 581.0], [55.0, 992.0], [54.0, 12.0], [57.0, 1062.5], [59.0, 9.0], [58.0, 14.0], [61.0, 1181.0], [60.0, 27.0], [63.0, 8.0], [62.0, 672.0], [67.0, 1210.0], [66.0, 376.0], [64.0, 859.0], [71.0, 10.0], [70.0, 855.5], [68.0, 1377.0], [75.0, 718.3333333333334], [72.0, 7.0], [79.0, 13.0], [78.0, 1426.0], [77.0, 278.5], [83.0, 726.0], [82.0, 743.0], [81.0, 1271.0], [80.0, 681.0], [87.0, 867.0], [85.0, 805.0], [84.0, 1390.0], [91.0, 809.0], [90.0, 1094.0], [89.0, 1107.0], [88.0, 1218.0], [95.0, 1418.0], [94.0, 1074.0], [98.0, 13.0], [97.0, 947.0], [96.0, 799.0], [103.0, 929.0], [102.0, 651.0], [101.0, 603.0], [100.0, 442.0], [106.0, 982.0], [105.0, 862.0], [104.0, 555.0], [111.0, 644.0], [110.0, 684.5], [108.0, 785.5], [114.0, 876.0], [113.0, 596.0], [112.0, 853.0], [119.0, 654.0], [118.0, 786.0], [117.0, 600.0], [116.0, 939.5], [123.0, 1219.0], [121.0, 855.0], [120.0, 951.0], [127.0, 663.0], [126.0, 568.0], [125.0, 986.0], [124.0, 1193.0], [135.0, 864.0], [134.0, 953.0], [133.0, 733.0], [132.0, 991.0], [131.0, 934.0], [130.0, 881.0], [129.0, 885.0], [128.0, 1036.0], [143.0, 844.0], [142.0, 753.0], [141.0, 1187.0], [140.0, 1469.0], [139.0, 943.0], [138.0, 766.0], [137.0, 969.0], [136.0, 662.0], [151.0, 1046.5], [149.0, 827.0], [148.0, 21.0], [147.0, 1100.0], [144.0, 832.0], [159.0, 1217.0], [158.0, 741.0], [157.0, 708.0], [156.0, 839.0], [155.0, 1373.0], [154.0, 812.0], [153.0, 743.5], [167.0, 1373.0], [166.0, 574.0], [165.0, 1217.0], [164.0, 1216.0], [163.0, 1070.0], [162.0, 1223.0], [161.0, 1089.0], [160.0, 11.0], [175.0, 737.0], [174.0, 917.5], [172.0, 905.0], [171.0, 783.5], [169.0, 754.0], [182.0, 841.0], [181.0, 576.5], [179.0, 901.0], [178.0, 1403.0], [177.0, 1073.5], [191.0, 610.0], [190.0, 748.5], [188.0, 561.0], [187.0, 782.0], [186.0, 895.0], [185.0, 920.0], [184.0, 845.0], [198.0, 730.0], [197.0, 831.5], [195.0, 1029.0], [193.0, 748.0], [192.0, 717.0], [207.0, 1038.0], [205.0, 1154.0], [204.0, 1106.0], [203.0, 1090.0], [201.0, 959.0], [200.0, 707.0], [215.0, 859.0], [214.0, 768.0], [213.0, 1186.0], [212.0, 654.0], [211.0, 808.0], [210.0, 846.0], [209.0, 827.0], [223.0, 924.5], [221.0, 831.0], [220.0, 765.0], [219.0, 914.0], [218.0, 872.0], [217.0, 867.0], [216.0, 9.0], [231.0, 748.0], [230.0, 941.0], [229.0, 738.1666666666667], [239.0, 758.0], [237.0, 14.0], [236.0, 948.0], [235.0, 1021.5], [233.0, 953.0], [232.0, 12.0], [247.0, 862.0], [246.0, 828.5], [244.0, 740.0], [243.0, 1075.0], [242.0, 21.0], [241.0, 1378.0], [240.0, 943.0], [255.0, 869.0], [254.0, 836.0], [253.0, 764.0], [251.0, 1101.0], [250.0, 1080.0], [249.0, 862.5], [269.0, 1072.0], [271.0, 888.0], [268.0, 872.0], [259.0, 739.0], [257.0, 957.0], [256.0, 895.0], [267.0, 1100.0], [266.0, 716.0], [265.0, 798.0], [264.0, 730.0], [263.0, 781.0], [261.0, 592.0], [260.0, 665.0], [284.0, 837.0], [286.0, 870.0], [287.0, 574.0], [285.0, 1052.0], [282.0, 556.0], [281.0, 679.5], [279.0, 777.6666666666666], [276.0, 673.5], [274.0, 634.0], [273.0, 1050.0], [272.0, 732.0], [296.0, 801.0], [300.0, 796.8444444444444], [299.0, 748.0], [298.0, 666.0], [297.0, 644.0], [295.0, 860.0], [294.0, 871.0], [292.0, 611.0], [291.0, 1092.0], [290.0, 651.0], [289.0, 553.0], [288.0, 890.0], [1.0, 15.0]], "isOverall": false, "label": "gateway_cl/hellotea/tea-0", "isController": false}, {"data": [[169.87500000000006, 777.6511627906973]], "isOverall": false, "label": "gateway_cl/hellotea/tea-0-Aggregated", "isController": false}, {"data": [[2.0, 7.0], [4.0, 167.5], [6.0, 536.0], [7.0, 4.0], [8.0, 130.0], [9.0, 15.0], [10.0, 406.0], [12.0, 371.0], [14.0, 320.0], [15.0, 502.0], [18.0, 266.33333333333337], [19.0, 5.0], [20.0, 778.0], [21.0, 346.0], [23.0, 245.5], [24.0, 284.0], [25.0, 513.0], [27.0, 160.5], [29.0, 515.0], [30.0, 13.0], [31.0, 5.0], [33.0, 137.5], [35.0, 6.0], [34.0, 383.0], [37.0, 331.0], [36.0, 316.0], [39.0, 832.0], [38.0, 316.0], [43.0, 7.0], [42.0, 244.33333333333334], [44.0, 12.0], [46.0, 180.5], [48.0, 251.0], [51.0, 281.0], [53.0, 6.0], [52.0, 416.0], [55.0, 330.0], [54.0, 5.0], [57.0, 299.5], [59.0, 7.0], [58.0, 15.0], [61.0, 253.0], [60.0, 6.0], [63.0, 5.0], [62.0, 808.0], [67.0, 361.0], [66.0, 388.0], [64.0, 734.0], [71.0, 9.0], [70.0, 528.0], [68.0, 192.0], [75.0, 420.6666666666667], [72.0, 6.0], [79.0, 4.0], [78.0, 272.0], [77.0, 211.5], [83.0, 510.0], [82.0, 499.0], [81.0, 286.0], [80.0, 517.0], [87.0, 588.0], [85.0, 668.0], [84.0, 299.0], [91.0, 714.0], [90.0, 504.0], [89.0, 540.0], [88.0, 294.0], [95.0, 205.0], [94.0, 368.0], [98.0, 9.0], [97.0, 728.0], [96.0, 808.0], [103.0, 689.0], [102.0, 444.0], [101.0, 592.0], [100.0, 197.5], [106.0, 318.0], [105.0, 217.0], [104.0, 923.0], [111.0, 527.0], [110.0, 495.0], [108.0, 625.0], [114.0, 608.0], [113.0, 745.0], [112.0, 720.0], [119.0, 831.0], [118.0, 726.0], [117.0, 726.0], [116.0, 362.5], [123.0, 318.0], [121.0, 810.0], [120.0, 198.0], [127.0, 505.0], [126.0, 494.0], [125.0, 363.0], [124.0, 335.0], [135.0, 539.0], [134.0, 666.0], [133.0, 783.0], [132.0, 332.0], [131.0, 753.0], [130.0, 798.0], [129.0, 458.0], [128.0, 579.0], [143.0, 435.0], [142.0, 604.0], [141.0, 267.0], [140.0, 255.0], [139.0, 197.0], [138.0, 369.0], [137.0, 337.0], [136.0, 771.0], [151.0, 516.0], [149.0, 775.0], [148.0, 5.0], [147.0, 413.3333333333333], [144.0, 712.0], [159.0, 315.0], [158.0, 650.0], [157.0, 468.0], [156.0, 442.0], [155.0, 317.0], [154.0, 515.0], [153.0, 73.0], [167.0, 298.0], [166.0, 518.0], [165.0, 316.0], [164.0, 327.0], [163.0, 355.0], [162.0, 404.0], [161.0, 525.0], [160.0, 11.0], [175.0, 696.0], [174.0, 630.5], [172.0, 225.0], [171.0, 731.0], [169.0, 514.5], [182.0, 691.0], [181.0, 171.0], [179.0, 553.0], [178.0, 290.0], [177.0, 356.0], [191.0, 887.0], [190.0, 72.0], [188.0, 391.0], [187.0, 695.0], [186.0, 733.0], [185.0, 747.0], [184.0, 570.0], [198.0, 531.0], [197.0, 614.5], [195.0, 425.5], [193.0, 771.0], [192.0, 346.0], [207.0, 566.0], [205.0, 367.0], [204.0, 455.5], [203.0, 380.0], [201.0, 449.0], [200.0, 516.0], [215.0, 726.0], [214.0, 352.0], [213.0, 275.0], [212.0, 456.0], [211.0, 502.0], [210.0, 719.0], [209.0, 364.5], [223.0, 384.5], [221.0, 419.0], [220.0, 369.0], [219.0, 735.0], [218.0, 538.0], [217.0, 489.0], [216.0, 9.0], [231.0, 618.0], [230.0, 655.0], [229.0, 652.1666666666667], [239.0, 593.5], [237.0, 11.0], [236.0, 726.0], [235.0, 552.0], [233.0, 351.0], [232.0, 6.0], [247.0, 658.0], [246.0, 590.5], [244.0, 601.0], [243.0, 387.0], [242.0, 6.0], [241.0, 121.0], [240.0, 476.0], [255.0, 347.0], [254.0, 721.0], [253.0, 559.0], [251.0, 353.0], [250.0, 342.0], [249.0, 479.5], [269.0, 323.0], [271.0, 473.5], [268.0, 631.0], [259.0, 382.5], [257.0, 682.0], [256.0, 639.0], [267.0, 146.0], [266.0, 500.0], [265.0, 540.0], [264.0, 362.0], [263.0, 616.5], [261.0, 393.0], [260.0, 435.0], [284.0, 653.5], [286.0, 333.0], [287.0, 780.0], [285.0, 493.0], [282.0, 291.0], [281.0, 432.0], [279.0, 387.6666666666667], [276.0, 423.0], [274.0, 798.0], [273.0, 357.0], [272.0, 807.0], [296.0, 522.0], [300.0, 432.48888888888894], [299.0, 594.0], [298.0, 543.0], [297.0, 810.0], [295.0, 388.0], [294.0, 483.5], [292.0, 475.0], [291.0, 513.0], [290.0, 526.0], [289.0, 622.0], [288.0, 726.0], [1.0, 6.0]], "isOverall": false, "label": "gateway_cl/hellotea/tea-1", "isController": false}, {"data": [[169.87500000000006, 426.47093023255826]], "isOverall": false, "label": "gateway_cl/hellotea/tea-1-Aggregated", "isController": false}, {"data": [[2.0, 2334.0], [4.0, 2808.0], [6.0, 3836.5], [7.0, 1544.0], [8.0, 3842.0], [9.0, 1894.0], [10.0, 3873.0], [12.0, 2843.5], [14.0, 3187.5], [15.0, 4282.0], [18.0, 2532.6666666666665], [19.0, 1873.0], [20.0, 3681.0], [21.0, 4222.0], [23.0, 2984.5], [24.0, 3845.0], [25.0, 3700.0], [27.0, 2622.5], [29.0, 3820.0], [30.0, 1498.0], [31.0, 1605.0], [33.0, 2492.0], [35.0, 2319.0], [34.0, 3649.0], [37.0, 3529.0], [36.0, 3559.0], [39.0, 3732.0], [38.0, 3550.0], [43.0, 2035.0], [42.0, 3125.0], [44.0, 1736.0], [46.0, 2729.0], [48.0, 2621.0], [51.0, 3196.3333333333335], [53.0, 1457.0], [52.0, 4197.0], [55.0, 3866.0], [54.0, 1574.0], [57.0, 3815.0], [59.0, 1379.0], [58.0, 1535.0], [61.0, 3701.0], [60.0, 1668.0], [63.0, 1949.0], [62.0, 3635.0], [67.0, 3503.0], [66.0, 2706.5], [64.0, 3503.0], [71.0, 1462.0], [70.0, 3672.5], [68.0, 3495.0], [75.0, 3900.0], [72.0, 1372.0], [79.0, 1270.0], [78.0, 3333.0], [77.0, 2654.0], [83.0, 3766.0], [82.0, 3787.0], [81.0, 3480.0], [80.0, 3826.0], [87.0, 3537.5], [85.0, 3534.0], [84.0, 3314.0], [91.0, 3452.0], [90.0, 3389.0], [89.0, 3348.0], [88.0, 3455.0], [95.0, 3313.0], [94.0, 3508.3333333333335], [98.0, 1386.0], [97.0, 3262.0], [96.0, 3338.0], [103.0, 3306.0], [102.0, 3826.0], [101.0, 3715.0], [100.0, 2781.5], [106.0, 3603.0], [105.0, 3814.0], [104.0, 3416.0], [111.0, 3697.0], [110.0, 3722.5], [108.0, 3486.0], [114.0, 3388.0], [113.0, 3524.0], [112.0, 3304.0], [119.0, 3375.0], [118.0, 3341.0], [117.0, 3531.0], [116.0, 3574.5], [123.0, 3317.0], [121.0, 3186.0], [120.0, 3711.0], [127.0, 3678.0], [126.0, 3812.0], [125.0, 3526.0], [124.0, 3332.5], [135.0, 3393.0], [134.0, 3190.0], [133.0, 3289.0], [132.0, 3484.0], [131.0, 3170.0], [130.0, 3172.0], [129.0, 3499.0], [128.0, 3237.0], [143.0, 3509.0], [142.0, 3411.0], [141.0, 3339.0], [140.0, 3068.0], [139.0, 3646.0], [138.0, 3675.0], [137.0, 3482.0], [136.0, 3353.0], [151.0, 3157.5], [149.0, 3126.0], [148.0, 1024.0], [147.0, 3244.0], [144.0, 3233.0], [159.0, 3118.0], [158.0, 3268.0], [157.0, 3510.0], [156.0, 3429.0], [155.0, 3033.0], [154.0, 3399.0], [153.0, 2457.5], [167.0, 2951.0], [166.0, 3537.0], [165.0, 3099.0], [164.0, 3109.0], [163.0, 3230.0], [162.0, 3016.0], [161.0, 3049.0], [160.0, 1598.0], [175.0, 3140.0], [174.0, 3068.0], [172.0, 3467.0], [171.0, 3111.5], [169.0, 3364.5], [182.0, 3041.0], [181.0, 1985.5], [179.0, 3122.0], [178.0, 2882.0], [177.0, 3163.0], [191.0, 3040.0], [190.0, 2068.0], [188.0, 3582.0], [187.0, 3050.0], [186.0, 2925.0], [185.0, 2871.0], [184.0, 3144.0], [198.0, 3231.0], [197.0, 3074.5], [195.0, 3069.5], [193.0, 2992.0], [192.0, 3443.0], [207.0, 2870.0], [205.0, 2975.0], [204.0, 2920.5], [203.0, 3022.0], [201.0, 3091.0], [200.0, 3285.0], [215.0, 2838.0], [214.0, 3329.0], [213.0, 2973.0], [212.0, 3357.0], [211.0, 3165.0], [210.0, 2900.0], [209.0, 3297.0], [223.0, 3055.0], [221.0, 3128.0], [220.0, 3266.0], [219.0, 2758.0], [218.0, 2984.0], [217.0, 3028.0], [216.0, 1221.0], [231.0, 2966.0], [230.0, 2720.0], [229.0, 2924.0], [239.0, 2925.5], [237.0, 1262.0], [236.0, 2620.0], [235.0, 2721.0], [233.0, 3005.0], [232.0, 1404.0], [247.0, 2688.0], [246.0, 2794.5], [244.0, 2855.0], [243.0, 2747.0], [242.0, 1329.0], [241.0, 2747.0], [240.0, 2856.0], [255.0, 2920.0], [254.0, 2602.0], [253.0, 2848.5], [251.0, 2734.0], [250.0, 2786.0], [249.0, 2846.0], [269.0, 2663.0], [271.0, 2701.0], [268.0, 2574.0], [259.0, 3011.5], [257.0, 2505.0], [256.0, 2617.0], [267.0, 2843.0], [266.0, 2859.0], [265.0, 2766.0], [264.0, 3027.0], [263.0, 2715.5], [261.0, 3123.0], [260.0, 3034.0], [284.0, 2487.0], [286.0, 2760.0], [287.0, 2616.0], [285.0, 2445.0], [282.0, 3131.0], [281.0, 2895.0], [279.0, 2842.3333333333335], [276.0, 2936.5], [274.0, 2598.0], [273.0, 2629.0], [272.0, 2533.0], [296.0, 2587.0], [300.0, 2176.1111111111113], [299.0, 2511.0], [298.0, 2663.0], [297.0, 2430.0], [295.0, 2660.0], [294.0, 2559.0], [292.0, 2821.0], [291.0, 2330.0], [290.0, 2753.0], [289.0, 2764.0], [288.0, 2340.0], [1.0, 2275.0]], "isOverall": false, "label": "gateway_cl/hellotea/tea-2", "isController": false}, {"data": [[169.87500000000006, 2887.572674418603]], "isOverall": false, "label": "gateway_cl/hellotea/tea-2-Aggregated", "isController": false}, {"data": [[2.0, 2354.0], [4.0, 3662.0], [6.0, 5355.5], [7.0, 1581.0], [8.0, 5346.0], [9.0, 1935.0], [10.0, 5359.0], [12.0, 3643.0], [14.0, 3827.0], [15.0, 5357.0], [18.0, 3043.6666666666665], [19.0, 1891.0], [20.0, 5326.0], [21.0, 5307.0], [23.0, 3674.0], [24.0, 5310.0], [25.0, 5297.0], [27.0, 3405.5], [29.0, 5312.0], [30.0, 1524.0], [31.0, 1618.0], [33.0, 3360.0], [35.0, 2346.0], [34.0, 5262.0], [37.0, 5214.0], [36.0, 5245.0], [39.0, 5236.0], [38.0, 5238.0], [43.0, 2052.0], [42.0, 4080.0], [44.0, 1788.0], [46.0, 3398.5], [48.0, 3413.0], [51.0, 4084.333333333333], [53.0, 1475.0], [52.0, 5197.0], [55.0, 5188.0], [54.0, 1591.0], [57.0, 5178.0], [59.0, 1395.0], [58.0, 1565.0], [61.0, 5136.0], [60.0, 1702.0], [63.0, 1963.0], [62.0, 5117.0], [67.0, 5075.0], [66.0, 3471.0], [64.0, 5098.0], [71.0, 1481.0], [70.0, 5056.5], [68.0, 5065.0], [75.0, 5042.333333333333], [72.0, 1385.0], [79.0, 1288.0], [78.0, 5033.0], [77.0, 3146.0], [83.0, 5004.0], [82.0, 5029.0], [81.0, 5038.0], [80.0, 5025.0], [87.0, 4993.5], [85.0, 5007.0], [84.0, 5003.0], [91.0, 4980.0], [90.0, 4988.0], [89.0, 4995.0], [88.0, 4970.0], [95.0, 4937.0], [94.0, 4951.333333333333], [98.0, 1409.0], [97.0, 4938.0], [96.0, 4947.0], [103.0, 4924.0], [102.0, 4922.0], [101.0, 4911.0], [100.0, 3421.5], [106.0, 4905.0], [105.0, 4902.0], [104.0, 4894.0], [111.0, 4870.0], [110.0, 4905.5], [108.0, 4897.5], [114.0, 4873.0], [113.0, 4866.0], [112.0, 4878.0], [119.0, 4862.0], [118.0, 4856.0], [117.0, 4857.0], [116.0, 4883.0], [123.0, 4854.0], [121.0, 4853.0], [120.0, 4861.0], [127.0, 4848.0], [126.0, 4878.0], [125.0, 4875.0], [124.0, 4862.0], [135.0, 4797.0], [134.0, 4811.0], [133.0, 4808.0], [132.0, 4808.0], [131.0, 4859.0], [130.0, 4854.0], [129.0, 4844.0], [128.0, 4853.0], [143.0, 4789.0], [142.0, 4768.0], [141.0, 4793.0], [140.0, 4793.0], [139.0, 4787.0], [138.0, 4811.0], [137.0, 4797.0], [136.0, 4787.0], [151.0, 4721.0], [149.0, 4728.0], [148.0, 1050.0], [147.0, 4758.333333333333], [144.0, 4779.0], [159.0, 4658.0], [158.0, 4662.0], [157.0, 4687.0], [156.0, 4713.0], [155.0, 4724.0], [154.0, 4728.0], [153.0, 3274.5], [167.0, 4622.0], [166.0, 4631.0], [165.0, 4634.0], [164.0, 4653.0], [163.0, 4657.0], [162.0, 4644.0], [161.0, 4664.0], [160.0, 1621.0], [175.0, 4575.0], [174.0, 4616.5], [172.0, 4598.0], [171.0, 4629.5], [169.0, 4635.5], [182.0, 4575.0], [181.0, 2733.5], [179.0, 4578.0], [178.0, 4575.0], [177.0, 4594.5], [191.0, 4539.0], [190.0, 2888.5], [188.0, 4535.0], [187.0, 4528.0], [186.0, 4555.0], [185.0, 4538.0], [184.0, 4559.5], [198.0, 4493.0], [197.0, 4521.5], [195.0, 4524.5], [193.0, 4512.0], [192.0, 4531.0], [207.0, 4476.0], [205.0, 4496.0], [204.0, 4482.5], [203.0, 4492.0], [201.0, 4501.5], [200.0, 4509.0], [215.0, 4424.0], [214.0, 4450.0], [213.0, 4434.0], [212.0, 4470.0], [211.0, 4477.0], [210.0, 4466.0], [209.0, 4489.5], [223.0, 4364.5], [221.0, 4379.0], [220.0, 4401.0], [219.0, 4409.0], [218.0, 4401.0], [217.0, 4385.0], [216.0, 1239.0], [231.0, 4333.0], [230.0, 4318.0], [229.0, 4316.5], [239.0, 4280.5], [237.0, 1287.0], [236.0, 4298.0], [235.0, 4298.0], [233.0, 4310.0], [232.0, 1423.0], [247.0, 4210.0], [246.0, 4214.5], [244.0, 4197.0], [243.0, 4209.0], [242.0, 1356.0], [241.0, 4248.0], [240.0, 4279.0], [255.0, 4137.0], [254.0, 4159.0], [253.0, 4173.0], [251.0, 4189.0], [250.0, 4212.0], [249.0, 4191.0], [269.0, 4058.0], [271.0, 4068.0], [268.0, 4078.0], [259.0, 4134.0], [257.0, 4144.0], [256.0, 4155.0], [267.0, 4090.0], [266.0, 4080.0], [265.0, 4105.0], [264.0, 4121.0], [263.0, 4113.5], [261.0, 4109.0], [260.0, 4137.0], [284.0, 3978.0], [286.0, 3964.0], [287.0, 3981.0], [285.0, 3991.0], [282.0, 3980.0], [281.0, 4009.5], [279.0, 4009.3333333333335], [276.0, 4034.0], [274.0, 4031.0], [273.0, 4037.0], [272.0, 4072.0], [296.0, 3912.0], [300.0, 3407.733333333333], [299.0, 3856.0], [298.0, 3874.0], [297.0, 3885.0], [295.0, 3909.0], [294.0, 3914.0], [292.0, 3911.0], [291.0, 3935.0], [290.0, 3933.0], [289.0, 3940.0], [288.0, 3958.0], [1.0, 2296.0]], "isOverall": false, "label": "gateway_cl/hellotea/tea", "isController": false}, {"data": [[169.87500000000006, 4093.3459302325614]], "isOverall": false, "label": "gateway_cl/hellotea/tea-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 300.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 9858.666666666666, "minX": 1.68586866E12, "maxY": 67945.33333333333, "series": [{"data": [[1.68586866E12, 67945.33333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68586866E12, 9858.666666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68586866E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 426.47093023255826, "minX": 1.68586866E12, "maxY": 4093.3459302325614, "series": [{"data": [[1.68586866E12, 777.6511627906973]], "isOverall": false, "label": "gateway_cl/hellotea/tea-0", "isController": false}, {"data": [[1.68586866E12, 426.47093023255826]], "isOverall": false, "label": "gateway_cl/hellotea/tea-1", "isController": false}, {"data": [[1.68586866E12, 2887.572674418603]], "isOverall": false, "label": "gateway_cl/hellotea/tea-2", "isController": false}, {"data": [[1.68586866E12, 4093.3459302325614]], "isOverall": false, "label": "gateway_cl/hellotea/tea", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68586866E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 426.46802325581416, "minX": 1.68586866E12, "maxY": 2887.5581395348845, "series": [{"data": [[1.68586866E12, 777.5901162790694]], "isOverall": false, "label": "gateway_cl/hellotea/tea-0", "isController": false}, {"data": [[1.68586866E12, 426.46802325581416]], "isOverall": false, "label": "gateway_cl/hellotea/tea-1", "isController": false}, {"data": [[1.68586866E12, 2887.5581395348845]], "isOverall": false, "label": "gateway_cl/hellotea/tea-2", "isController": false}, {"data": [[1.68586866E12, 777.5901162790695]], "isOverall": false, "label": "gateway_cl/hellotea/tea", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68586866E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68586866E12, "maxY": 84.08720930232556, "series": [{"data": [[1.68586866E12, 84.08720930232556]], "isOverall": false, "label": "gateway_cl/hellotea/tea-0", "isController": false}, {"data": [[1.68586866E12, 0.0]], "isOverall": false, "label": "gateway_cl/hellotea/tea-1", "isController": false}, {"data": [[1.68586866E12, 1.6744186046511635]], "isOverall": false, "label": "gateway_cl/hellotea/tea-2", "isController": false}, {"data": [[1.68586866E12, 84.08720930232556]], "isOverall": false, "label": "gateway_cl/hellotea/tea", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68586866E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.68586866E12, "maxY": 5380.0, "series": [{"data": [[1.68586866E12, 5380.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68586866E12, 4.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68586866E12, 4594.3]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68586866E12, 5307.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68586866E12, 1372.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.68586866E12, 4907.599999999999]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68586866E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 527.0, "minX": 34.0, "maxY": 3704.0, "series": [{"data": [[34.0, 1488.5], [142.0, 3628.5], [362.0, 527.0], [198.0, 2408.0], [402.0, 3704.0], [238.0, 768.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 402.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 527.0, "minX": 34.0, "maxY": 1428.0, "series": [{"data": [[34.0, 622.0], [142.0, 1428.0], [362.0, 527.0], [198.0, 734.5], [402.0, 1388.0], [238.0, 768.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 402.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 22.933333333333334, "minX": 1.68586866E12, "maxY": 22.933333333333334, "series": [{"data": [[1.68586866E12, 22.933333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68586866E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 11.466666666666667, "minX": 1.68586866E12, "maxY": 11.466666666666667, "series": [{"data": [[1.68586866E12, 11.466666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68586866E12, 11.466666666666667]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68586866E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 5.733333333333333, "minX": 1.68586866E12, "maxY": 5.733333333333333, "series": [{"data": [[1.68586866E12, 5.733333333333333]], "isOverall": false, "label": "gateway_cl/hellotea/tea-2-success", "isController": false}, {"data": [[1.68586866E12, 5.733333333333333]], "isOverall": false, "label": "gateway_cl/hellotea/tea-1-success", "isController": false}, {"data": [[1.68586866E12, 5.733333333333333]], "isOverall": false, "label": "gateway_cl/hellotea/tea-0-success", "isController": false}, {"data": [[1.68586866E12, 5.733333333333333]], "isOverall": false, "label": "gateway_cl/hellotea/tea-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68586866E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 22.933333333333334, "minX": 1.68586866E12, "maxY": 22.933333333333334, "series": [{"data": [[1.68586866E12, 22.933333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68586866E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

